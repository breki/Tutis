<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Flubu.Contrib</name>
    </assembly>
    <members>
        <member name="M:Flubu.Log4NetLogger.Dispose">
            <summary>
                                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Flubu.Packaging.CopyProcessor.AddSingleFileTransformation(System.String,Flubu.LocalPath)">
            <summary>
            Defines a transformation for <see cref="T:Flubu.Packaging.SingleFileSource"/> which copies the file to the destination
            and renames the file in the process.
            </summary>
            <param name="sourceId">ID of the <see cref="T:Flubu.Packaging.SingleFileSource"/>.</param>
            <param name="destinationFileName">The destination directory and file name (local path).</param>
            <returns>This same instance of the <see cref="T:Flubu.Packaging.CopyProcessor"/>.</returns>
        </member>
        <member name="M:Flubu.Packaging.CopyProcessor.AddFileTransformation(System.String,System.String)">
            <summary>
            Replace all occurrences of source file name with newFileName.
            </summary>
            <param name="fileName">Source file name to replace.</param>
            <param name="newFileName">Replace with new name.</param>
            <returns>Returns <see cref="T:Flubu.Packaging.CopyProcessor"/>.</returns>
        </member>
        <member name="P:Flubu.Tasks.Build.NDoc3Task.WorkingDirectory">
            <summary>
              Gets or sets documentation working directory. (default=.)
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Build.NDoc3Task.OutputDirectory">
            <summary>
              Gets or sets documentation output directory. (default=.\doc)
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Build.NDoc3Task.AssembliesToDocument">
            <summary>
              Gets assemblies to document.
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Build.NDoc3Task.NDoc3Path">
            <summary>
              Gets or sets NDoc3 application path.
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Build.TlbExportTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Flubu.Tasks.Build.TlbExportTask"/> class.
            </summary>
            <param name="assemblyName">Name of the assembly to export type library.</param>
        </member>
        <member name="P:Flubu.Tasks.Build.TlbExportTask.WorkingDirectory">
            <summary>
              Gets or sets documentation working directory. (default=.)
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Build.TlbExportTask.ExecutablePath">
            <summary>
              Gets or sets executable path (tlbexp.exe). (default=tools\\tlb\\tlbexp.exe)
            </summary>
        </member>
        <member name="T:Flubu.Tasks.FileSystem.UnzipFilesTask">
            <summary>
            Extracts content of ZIP archive to local file system.
            </summary>
        </member>
        <member name="M:Flubu.Tasks.FileSystem.UnzipFilesTask.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Flubu.Tasks.FileSystem.UnzipFilesTask"/> class for extraction from local file.
            </summary>
            <param name="zipFileName">Name of local file (ZIP archive) to extract.</param>
            <param name="destinationDirectory">Directory to which files will be extracted.</param>
        </member>
        <member name="M:Flubu.Tasks.FileSystem.UnzipFilesTask.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Flubu.Tasks.FileSystem.UnzipFilesTask"/> class for extraction from HTTP URL.
            </summary>
            <param name="url">URL for ZIP archive.</param>
            <param name="destinationDirectory">Directory to which files will be extracted.</param>
        </member>
        <member name="M:Flubu.Tasks.FileSystem.UnzipFilesTask.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Flubu.Tasks.FileSystem.UnzipFilesTask"/> class for extraction from <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">Initialized input stream. Stream is not closed by this task.</param>
            <param name="destinationDirectory">Directory to which files will be extracted.</param>
        </member>
        <member name="P:Flubu.Tasks.FileSystem.UnzipFilesTask.FileFilter">
            <summary>
            Gets or sets file name filter for extracted files.
            </summary>
            <remarks>
            This is <a href="http://wiki.sharpdevelop.net/SharpZipLib_FastZip.ashx?HL=namefilter#How_to_extract_a_Zip_File_using_FastZip_3">FastZip NameFilter</a>.
            Basically it is semicolon separated list of regular expressions. If expression is prefixed by - it is treated as exclusion filter.
            </remarks>
        </member>
        <member name="P:Flubu.Tasks.FileSystem.UnzipFilesTask.DirectoryFilter">
            <summary>
            Gets or sets directory filter for extracted files.
            </summary>
            <remarks>
            This is <a href="http://wiki.sharpdevelop.net/SharpZipLib_FastZip.ashx?HL=namefilter#How_to_extract_a_Zip_File_using_FastZip_3">FastZip NameFilter</a>.
            Basically it is semicolon separated list of regular expressions. If expression is prefixed by - it is treated as exclusion filter.
            </remarks>
        </member>
        <member name="F:Flubu.Tasks.Iis.ControlApplicationPoolAction.Start">
            <summary>
            Start the application pool.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Iis.ControlApplicationPoolAction.Stop">
            <summary>
            Stop the application pool.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Iis.ControlApplicationPoolAction.Recycle">
            <summary>
            Recycle the application pool.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Iis.CreateApplicationPoolMode.FailIfAlreadyExists">
            <summary>
            The task should fail if the application pool already exists.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Iis.CreateApplicationPoolMode.UpdateIfExists">
            <summary>
            If the application pool already exists, it should be updated.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Iis.CreateApplicationPoolMode.DoNothingIfExists">
            <summary>
            If the application pool already exists, the task should do nothing.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Iis.CreateWebApplicationMode.FailIfAlreadyExists">
            <summary>
            If the application already exists, the task should fail.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Iis.CreateWebApplicationMode.UpdateIfExists">
            <summary>
            If the application already exists, it should be updated.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Iis.CreateWebApplicationMode.DoNothingIfExists">
            <summary>
            If the application already exists, the task should do nothing.
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Iis.GetLocalIisVersionTask.IsSafeToExecuteInDryRun">
            <summary>
            Gets a value indicating whether this instance is safe to execute in dry run mode.
            </summary>
            <value>
                <c>true</c> if this instance is safe to execute in dry run mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Flubu.Tasks.Misc.CreateCertificateTask">
            <summary>
            Task for creating development self signed certificates. Task uses makecert.exe utility.
            Authority certificate and .pvk should be created only once and should be added to source code.
            When creating authority certificate makecert will ask for a private key password, you should select none.
            Example code for creating all certificates.
            <code>
            CreateCertificateTask authority = new CreateCertificateTask("SsoAuthority");
            authority
               .AuthorityKeyFile(".\\lib\\certificates\\SsoAuthority.pvk")
               .Output(".\\lib\\certificates\\SsoAuthority.cer")
               .Execute(context);
            CreateCertificateTask server = new CreateCertificateTask("SsoWebService");
            server
               .AuthorityCertFile(".\\lib\\certificates\\SsoAuthority.cer")
               .AuthorityKeyFile(".\\lib\\certificates\\SsoAuthority.pvk")
               .Output(".\\lib\\certificates\\SsoWebService.cer")
               .Execute(context);
            CreateCertificateTask client = new CreateCertificateTask("TestClient");
            client
               .AuthorityCertFile(".\\lib\\certificates\\SsoAuthority.cer")
               .AuthorityKeyFile(".\\lib\\certificates\\SsoAuthority.pvk")
               .Output(".\\lib\\certificates\\SsoTestClient.cer")
               .Execute(context);
            </code>
            </summary>
        </member>
        <member name="T:Flubu.Tasks.Virtual.CreateDiskTask">
            <summary>
            Creates new virtual disk on hyper-v server.
            <code>
                    CreateDiskTask
                        .New(host, @"h:\virtual\ssmTest.vhd", 10)
                       .Type(CreateDiskType.Differencing)
                       .BasePath(@"h:\virtual\ssmTestBase.vhd")
                       .Execute(ScriptExecutionEnvironment);
            </code>
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateDiskTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Flubu.Tasks.Virtual.CreateDiskTask"/> class.
            It also sets default disk type as <see cref="F:Flubu.Tasks.Virtual.CreateDiskType.Fixed"/>
            </summary>
            <param name="host">Hyper-V server machine.</param>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateDiskTask.New(System.String,System.String,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:Flubu.Tasks.Virtual.CreateDiskTask"/>
            </summary>
            <param name="host">Hyper-V server machine</param>
            <param name="path">Full path on remote machine where image will be created.</param>
            <param name="size">Maximum disk size in Gb.</param>
            <returns>New instance of <see cref="T:Flubu.Tasks.Virtual.CreateDiskTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateDiskTask.Path(System.String)">
            <summary>
            Sets virtual disk file path on remote machine.
            </summary>
            <param name="fullPath">Full VHD file path.</param>
            <returns>This instance of <see cref="T:Flubu.Tasks.Virtual.CreateDiskTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateDiskTask.BasePath(System.String)">
            <summary>
            Sets base image path. Parameter is only used when creating differencing disk.
            </summary>
            <param name="fullPath">Full path to base VHD image to use.</param>
            <returns>This instance of <see cref="T:Flubu.Tasks.Virtual.CreateDiskTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateDiskTask.Size(System.Int32)">
            <summary>
            Sets maximum disk size. If <see cref="M:Flubu.Tasks.Virtual.CreateDiskTask.Type(Flubu.Tasks.Virtual.CreateDiskType)"/> is set
            to <see cref="F:Flubu.Tasks.Virtual.CreateDiskType.Fixed"/> file is pre-allocated, otherwise initial
            file size will be 0 and will be increased as needed.
            </summary>
            <param name="diskSize">Maximum disk size in Gb.</param>
            <returns>This instance of <see cref="T:Flubu.Tasks.Virtual.CreateDiskTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateDiskTask.Type(Flubu.Tasks.Virtual.CreateDiskType)">
            <summary>
            Sets disk type to create <see cref="T:Flubu.Tasks.Virtual.CreateDiskType"/>
            </summary>
            <param name="diskType">The disk type.</param>
            <returns>This instance of <see cref="T:Flubu.Tasks.Virtual.CreateDiskTask"/></returns>
        </member>
        <member name="T:Flubu.Tasks.Virtual.CreateDiskType">
            <summary>
            Various disk types for hyper-v image creation.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Virtual.CreateDiskType.Fixed">
            <summary>
            Create fixed disk. File will be pre-allocated with maximum allowed size.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Virtual.CreateDiskType.Dynamic">
            <summary>
            Create dynamically expanding disk image.
            </summary>
        </member>
        <member name="F:Flubu.Tasks.Virtual.CreateDiskType.Differencing">
            <summary>
            Create differencing disk.
            </summary>
        </member>
        <member name="T:Flubu.Tasks.Virtual.CreateMachineTask">
            <summary>
              Create new hyper-v virtual machine on specified server.
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateMachineTask.Name(System.String)">
            <summary>
              Set virtual machine name.
            </summary>
            <param name="vmName">Name of the virtual machine.</param>
            <returns>This same instance of <see cref="T:Flubu.Tasks.Virtual.CreateMachineTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateMachineTask.Location(System.String)">
            <summary>
              Set virtual machine location (full path to virtual machine). It's hosts local path.
            </summary>
            <param name="vmLocation">Hosts local path to virtual machine location.</param>
            <returns>This same instance of <see cref="T:Flubu.Tasks.Virtual.CreateMachineTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateMachineTask.DiskPath(System.String)">
            <summary>
              Set full path to existing virtual disk file (host local path).
              If null or empty new fixed size disk will be created in <see cref="M:Flubu.Tasks.Virtual.CreateMachineTask.Location(System.String)"/>\<see cref="M:Flubu.Tasks.Virtual.CreateMachineTask.Name(System.String)"/>.vhd location.
            </summary>
            <param name="path">Full hosts local path to existing virtual disk.</param>
            <returns>This same instance of <see cref="T:Flubu.Tasks.Virtual.CreateMachineTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateMachineTask.Network(System.String)">
            <summary>
              Set hyper-v virtual network name.
            </summary>
            <param name="networkName">Network name.</param>
            <returns>This same instance of <see cref="T:Flubu.Tasks.Virtual.CreateMachineTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.CreateMachineTask.Memory(System.Int32)">
            <summary>
              Set virtual machine memory size.
            </summary>
            <param name="size">Memory size.</param>
            <returns>This same instance of <see cref="T:Flubu.Tasks.Virtual.CreateMachineTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.DeleteMachineTask.Name(System.String)">
            <summary>
              Set virtual machine name.
            </summary>
            <param name="vmName">Name of the virtual machine.</param>
            <returns>This same instance of <see cref="T:Flubu.Tasks.Virtual.DeleteMachineTask"/>.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.Connect(System.String)">
            <summary>
            Connect to remote instance of Virtual server from local server using DCOM
            </summary>
            <param name="server">
            The server.
            </param>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.Connect">
            <summary>
              Connect to instance of Virtual server from local server using COM
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.CreateDifferencingDisk(System.String,System.String)">
            <summary>
              Creates new differencing disk.
            </summary>
            <param name="newImage">Full path (with disk image name) of new virtual disk image.</param>
            <param name="baseImage">Full path of base virtual disk image to use.</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.CreateFixedDisk(System.String,System.Int32)">
            <summary>
              Creates new fixed size disk.
            </summary>
            <param name="newImage">Full path (with disk image name) of new virtual disk image.</param>
            <param name="size">Size of new virtual disk in bytes</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.CreateDynamicDisk(System.String,System.Int32)">
            <summary>
              Creates new dynamic size disk.
            </summary>
            <param name="newImage">Full path (with disk image name) of new virtual disk image.</param>
            <param name="size">Size of new virtual disk in bytes</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.CreateVirtualMachine(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
              Creates new virtual machine.
            </summary>
            <param name="machineName">Name of the virtual machine to crate.</param>
            <param name="machineFolder">Full path where virtual machine will be created.</param>
            <param name="diskPath">Full path and name of disk image to use.</param>
            <param name="networkAdapterName">Name of the network adapter to use.</param>
            <param name="macAddress">MAC address</param>
            <param name="memorySize">Memory size to use for new virtual machine.</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.CloneVirtualMachine(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
              Creates new virtual machine with configuration from existing virtual machine.
            </summary>
            <param name="machineName">Name of the virtual machine to crate.</param>
            <param name="machineFolder">Full path where virtual machine will be created.</param>
            <param name="baseMachineName">Name of the base virtual machine name.</param>
            <param name="diskPath">Full path and name of disk image to use.</param>
            <param name="networkAdapterName">Name of the network adapter to use.</param>
            <param name="macAddress">MAC address</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.DeleteVirtualMachine(System.String)">
            <summary>
              Deletes existing virtual machine from virtual server.
              <remarks>
                Disk image files are not deleted.
              </remarks>
            </summary>
            <param name="machineName">Name of the virtual machine to delete.</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.StartVirtualMachine(System.String)">
            <summary>
              Starts virtual machine
            </summary>
            <param name="machineName">Machine name</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.TurnoffVirtualMachine(System.String)">
            <summary>
              Turnoff specified virtual machine.
            </summary>
            <param name="machineName">Machine name</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.ShutdownVirtualMachine(System.String)">
            <summary>
              Shutdown specified virtual machine.
            </summary>
            <param name="machineName">Machine name</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.SaveVirtualMachine(System.String)">
            <summary>
              Save virtual machine state.
            </summary>
            <param name="machineName">Machine name</param>
            <returns>New <see cref="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask"/> for current operation.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualManager.GetVirtualMachines">
            <summary>
              Gets all registered virtual machines on server.
            </summary>
            <returns>Collection of <see cref="T:Flubu.Tasks.Virtual.HyperV.VirtualMachine"/></returns>
        </member>
        <member name="P:Flubu.Tasks.Virtual.HyperV.IVirtualManager.CurrentTask">
            <summary>
              Gets current executing task.
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Virtual.HyperV.IVirtualManager.TaskList">
            <summary>
              Gets full list of executed task in this session.
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.Connect(System.String)">
            <summary>
            Connect to remote instance of Virtual server from local server using DCOM
            </summary>
            <param name="server">
            The server.
            </param>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.Connect">
            <summary>
              Connect to instance of Virtual server from local server using COM
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.CreateDifferencingDisk(System.String,System.String)">
            <summary>
              Creates new differencing disk.
            </summary>
            <param name = "newImage">Full path (with disk image name) of new virtual disk image.</param>
            <param name = "baseImage">Full path of base virtual disk image to use.</param>
            <returns>The task</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.CreateFixedDisk(System.String,System.Int32)">
            <summary>
              Creates new fixed size disk.
            </summary>
            <param name = "newImage">Full path (with disk image name) of new virtual disk image.</param>
            <param name = "size">Size of new virtual disk in Gb</param>
            <returns>The task</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.CreateDynamicDisk(System.String,System.Int32)">
            <summary>
              Creates new dynamic size disk.
            </summary>
            <param name = "newImage">Full path (with disk image name) of new virtual disk image.</param>
            <param name = "size">Size of new virtual disk in Gb</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.CreateVirtualMachine(System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
              Creates new virtual machine.
            </summary>
            <param name = "machineName">Name of the virtual machine to crate.</param>
            <param name = "machineFolder">Full path where virtual machine will be created.</param>
            <param name = "diskPath">Full path and name of disk image to use.</param>
            <param name = "networkAdapterName">Name of the network adapter to use.</param>
            <param name = "macAddress">MAC address</param>
            <param name = "memorySize">Memory size to use for new virtual machine.</param>
            <returns>The task</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.CloneVirtualMachine(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
              Creates new virtual machine with configuration from existing virtual machine.
            </summary>
            <param name = "machineName">Name of the virtual machine to crate.</param>
            <param name = "machineFolder">Full path where virtual machine will be created.</param>
            <param name = "baseMachineName">Name of the base virtual machine name.</param>
            <param name = "diskPath">Full path and name of base disk image to use.</param>
            <param name = "networkAdapterName">Name of the network adapter to use.</param>
            <param name = "macAddress">MAC address</param>
            <returns>The task</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.DeleteVirtualMachine(System.String)">
            <summary>
              Deletes existing virtual machine from virtual server.
              <remarks>
                Disk image files are not deleted.
              </remarks>
            </summary>
            <param name = "machineName">Name of the virtual machine to delete.</param>
            <returns>The task</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.StartVirtualMachine(System.String)">
            <summary>
              Starts virtual machine
            </summary>
            <param name = "machineName">Machine name</param>
            <returns>The task</returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVManager.RequestStateChange(System.String,Flubu.Tasks.Virtual.HyperV.StateChange)">
            <summary>
              Starts or turnoff virtual machine
            </summary>
            <param name = "vmName">Virtual machine name</param>
            <param name = "state">State change</param>
            <returns>Task for starting or stopping virtual machine.</returns>
        </member>
        <member name="T:Flubu.Tasks.Virtual.HyperV.HyperVTask">
            <summary>
              Hyper-v server task class.
            </summary>
        </member>
        <member name="T:Flubu.Tasks.Virtual.HyperV.IVirtualTask">
            <summary>
            Completion task interface definition.
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.IVirtualTask.WaitForCompletion(System.TimeSpan)">
            <summary>
              Wait current task to complete.
            </summary>
            <param name = "timeout">Time to wait</param>
            <returns>True if task was completed, false if timeout was reached.</returns>
        </member>
        <member name="P:Flubu.Tasks.Virtual.HyperV.IVirtualTask.IsComplete">
            <summary>
            Gets a value indicating whether the task has already finished, false if task is in progress.
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Virtual.HyperV.IVirtualTask.PercentComplete">
            <summary>
              Gets task completion percentage.
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVTask.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Flubu.Tasks.Virtual.HyperV.HyperVTask"/> class with a specified job return code.
            </summary>
            <param name="returnCode">Job return code.
            </param>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.HyperVTask.WaitForCompletion(System.TimeSpan)">
            <summary>
              Wait current task to complete.
            </summary>
            <param name = "timeout">Time to wait</param>
            <returns>True if task was completed, false if timeout was reached.</returns>
        </member>
        <member name="P:Flubu.Tasks.Virtual.HyperV.HyperVTask.IsComplete">
            <summary>
            Gets a value indicating whether the task has already finished, false if task is in progress.
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Virtual.HyperV.HyperVTask.PercentComplete">
            <summary>
              Gets task completed percentage.
            </summary>
        </member>
        <member name="T:Flubu.Tasks.Virtual.HyperV.JobState">
            <summary>
              Hyper-v Job states. Suspended
            </summary>
        </member>
        <member name="T:Flubu.Tasks.Virtual.HyperV.ReturnCode">
            <summary>
              Hyper-V Job return codes.
            </summary>
        </member>
        <member name="T:Flubu.Tasks.Virtual.HyperV.ServerManagement">
            <summary>
              Helper class for managing server machine.
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.HyperV.ServerManagement.Shutdown(System.String)">
            <summary>
            Shutdown windows machine.
            </summary>
            <param name = "machineName">Machine name</param>
        </member>
        <member name="T:Flubu.Tasks.Virtual.HyperV.VirtualMachine">
            <summary>
              Class describing single virtual machine on virtual server.
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Virtual.HyperV.VirtualMachine.Id">
            <summary>
              Gets or sets Id of the machine.
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Virtual.HyperV.VirtualMachine.Name">
            <summary>
              Gets or sets name of the machine.
            </summary>
        </member>
        <member name="P:Flubu.Tasks.Virtual.HyperV.VirtualMachine.Status">
            <summary>
              Gets or sets virtual machine <see cref="T:Flubu.Tasks.Virtual.HyperV.VirtualMachineState"/> state.
            </summary>
        </member>
        <member name="T:Flubu.Tasks.Virtual.HyperV.VirtualMachineState">
            <summary>
              Virtual machine states.
            </summary>
        </member>
        <member name="T:Flubu.Tasks.Virtual.HyperV.Utility">
            <summary>
              Hyper-V utility class.
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.ShutdownMachineTask.Name(System.String)">
            <summary>
              Set virtual machine name.
            </summary>
            <param name = "vmName">Name of the virtual machine.</param>
            <returns>The same instance.</returns>
        </member>
        <member name="T:Flubu.Tasks.Virtual.StartMachineTask">
            <summary>
            Starts virtual machine on hyper-v server.
            <code>
                    StartMachineTask
                       .New(runner.GetValue(targetName, "host"), runner.GetValue(targetName, "machine"))
                       .Execute(ScriptExecutionEnvironment);
            </code>
            </summary>
        </member>
        <member name="M:Flubu.Tasks.Virtual.StartMachineTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Flubu.Tasks.Virtual.StartMachineTask"/> class.
            </summary>
            <param name="host">Hyper-v host server.</param>
        </member>
        <member name="M:Flubu.Tasks.Virtual.StartMachineTask.New(System.String,System.String)">
            <summary>
            Initializes new instance of <see cref="T:Flubu.Tasks.Virtual.StartMachineTask"/>
            </summary>
            <param name="host">Hyper-v host server.</param>
            <param name="machineName">Virtual machine name to start.</param>
            <returns>New instance of <see cref="T:Flubu.Tasks.Virtual.StartMachineTask"/></returns>
        </member>
        <member name="M:Flubu.Tasks.Virtual.StartMachineTask.Name(System.String)">
            <summary>
              Sets virtual machine name to start.
            </summary>
            <param name = "vmName">Name of the virtual machine.</param>
            <returns>This same instance</returns>
        </member>
        <member name="P:Flubu.Tasks.Text.ExpandPropertiesTask.Description">
            <summary>
            Gets the task description.
            </summary>
            <value>The task description.</value>
        </member>
    </members>
</doc>
