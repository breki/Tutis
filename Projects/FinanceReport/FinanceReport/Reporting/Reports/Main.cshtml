@inherits Razor.ReportRazorTemplateBase<Reporting.Models.MainReportModel>

<!DOCTYPE HTML>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>Finance Report</title>

		<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
		<script type="text/javascript">
$(function () {
    var chart;
    $(document).ready(function() {
        
Highcharts.theme = {
  
   chart: {
      backgroundColor: {
         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },
         stops: [
            [0, 'rgb(255, 255, 255)'],
            [1, 'rgb(240, 240, 255)']
         ]
      },
      borderWidth: 2,
      plotBackgroundColor: 'rgba(255, 255, 255, .9)',
      plotShadow: true,
      plotBorderWidth: 1
   },
   title: {
      style: {
         color: '#000',
         font: 'bold 16px "Trebuchet MS", Verdana, sans-serif'
      }
   },
   subtitle: {
      style: {
         color: '#666666',
         font: 'bold 12px "Trebuchet MS", Verdana, sans-serif'
      }
   },
   xAxis: {
      gridLineWidth: 1,
      lineColor: '#000',
      tickColor: '#000',
      labels: {
         style: {
            color: '#000',
            font: '11px Trebuchet MS, Verdana, sans-serif'
         }
      },
      title: {
         style: {
            color: '#333',
            fontWeight: 'bold',
            fontSize: '12px',
            fontFamily: 'Trebuchet MS, Verdana, sans-serif'

         }
      }
   },
   yAxis: {
      minorTickInterval: 'auto',
      lineColor: '#000',
      lineWidth: 1,
      tickWidth: 1,
      tickColor: '#000',
      labels: {
         style: {
            color: '#000',
            font: '11px Trebuchet MS, Verdana, sans-serif'
         }
      },
      title: {
         style: {
            color: '#333',
            fontWeight: 'bold',
            fontSize: '12px',
            fontFamily: 'Trebuchet MS, Verdana, sans-serif'
         }
      }
   },
   legend: {
      itemStyle: {
         font: '9pt Trebuchet MS, Verdana, sans-serif',
         color: 'black'

      },
      itemHoverStyle: {
         color: '#039'
      },
      itemHiddenStyle: {
         color: 'gray'
      }
   },
   labels: {
      style: {
         color: '#99b'
      }
   },

   navigation: {
      buttonOptions: {
         theme: {
            stroke: '#CCCCCC'
         }
      }
   }
};

// Apply the theme
var highchartsOptions = Highcharts.setOptions(Highcharts.theme);        

        chart = new Highcharts.Chart({
            chart: {
                renderTo: 'TotalBalanceContainer',
                zoomType: 'x',
                spacingRight: 20
            },
            title: {
                text: 'Total Balance'
            },
            subtitle: {
                text: document.ontouchstart === undefined ?
                    'Click and drag in the plot area to zoom in' :
                    'Drag your finger over the plot to zoom in'
            },
            xAxis: {
                type: 'datetime',
                maxZoom: 14 * 24 * 3600000, // fourteen days
                title: {
                    text: null
                }
            },
            yAxis: {
                title: {
                    text: 'Total Balance (EUR)'
                },
                min: 0.6,
                startOnTick: false,
                showFirstLabel: false,
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]                
            },
            tooltip: {
                shared: true
            },
            legend: {
                enabled: true
            },
            plotOptions: {
                series: {
                    lineWidth: 3,
                    marker: {
                        enabled: false,
                        states: {
                            hover: {
                                enabled: true,
                                radius: 5
                            }
                        }
                    },
                    shadow: false,
                    states: {
                        hover: {
                            lineWidth: 1
                        }
                    }
                }
            },
    
            series: [{
                type: 'line',
                name: 'total balance',
                data: [
                    @foreach (var amount in Model.BalancesDaily.Amounts) {
                        @amount.ToJson();
                    }
                ]
            }]
        });


        chart = new Highcharts.Chart({
            chart: {
                renderTo: 'SpendingContainer',
                zoomType: 'x',
                spacingRight: 20
            },
            title: {
                text: 'Earning & Spending By Month'
            },
            xAxis: {
                type: 'datetime',
                maxZoom: 14 * 24 * 3600000, // fourteen days
                title: {
                    text: null
                }
            },
            yAxis: {
                title: {
                    text: 'EUR'
                },
                startOnTick: false,
                showFirstLabel: false
            },
            tooltip: {
                shared: true
            },
            legend: {
                enabled: true
            },
            plotOptions: {
                series: {
                    lineWidth: 3,
                    marker: {
                        enabled: false,
                        states: {
                            hover: {
                                enabled: true,
                                radius: 5
                            }
                        }
                    },
                    shadow: false,
                    states: {
                        hover: {
                            lineWidth: 1
                        }
                    }
                }
            },
    
            series: [{
                type: 'column',
                name: 'spending',
                data: [
                    @foreach (var amount in Model.SpendingByMonth.Amounts) {
                        @amount.ToJsonNegative();
                    }
                ]
            }, {
                type: 'column',
                name: 'earning',
                data: [
                    @foreach (var amount in Model.EarningByMonth.Amounts) {
                        @amount.ToJson();
                    }
                ]
			}, {
                type: 'spline',
                name: 'spending trend',
                data: [
                    @foreach (var amount in Model.SpendingByMonthTrend.Amounts) {
                        @amount.ToJsonNegative();
                    }
                ]			    
			}, {
                type: 'spline',
                name: 'earning trend',
                data: [
                    @foreach (var amount in Model.EarningByMonthTrend.Amounts) {
                        @amount.ToJson();
                    }
                ]			    
			}
            ]
        });


        chart = new Highcharts.Chart({
            chart: {
                renderTo: 'SpendingByCategoriesContainer',
				type: 'column',
                zoomType: 'x',
                spacingRight: 20
            },
            title: {
                text: 'Monthly Spending By Categories'
            },
            xAxis: {
                type: 'datetime',
                maxZoom: 14 * 24 * 3600000, // fourteen days
                title: {
                    text: null
                }
            },
            yAxis: {
                title: {
                    text: 'EUR'
                },
				min: 0,
                stackLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                    }
                }
            },
            tooltip: {
                shared: true
            },
            legend: {
                enabled: true
            },
            plotOptions: {
                column: {
                    stacking: 'normal',
                }
            },
    
            series: [
                @foreach (var catPair in Model.MonthlySpendingByCategories.CategoryNames)
                {
                    @:{ name: '@catPair.Value', data: [

                    foreach (var amount in Model.MonthlySpendingByCategories.Amounts[catPair.Key].Amounts)
                    {
                        @amount.ToJsonNegative();
                    }
                    @:]},
                }
                ]
        });

    });    
});
		</script>
	</head>
	<body>
<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="http://code.highcharts.com/modules/exporting.js"></script>

<div id="TotalBalanceContainer" style="min-width: 400px; height: 400px; margin: 0 auto"></div>
<div id="SpendingContainer" style="min-width: 400px; height: 400px; margin: 0 auto"></div>
<div id="SpendingByCategoriesContainer" style="min-width: 400px; height: 400px; margin: 0 auto"></div>

	</body>
</html>
