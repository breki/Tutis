<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotSpatial.Controls</name>
    </assembly>
    <members>
        <member name="T:DotSpatial.Controls.Docking.ActivePanelChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Docking.ActivePanelChangedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ActivePanelChangedEventArgs class.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Docking.ActivePanelChangedEventArgs.ActivePanelKey">
            <summary>
            Gets or sets the active panel key.
            </summary>
            <value>
            The active panel key.
            </value>
        </member>
        <member name="T:DotSpatial.Controls.Docking.DockablePanel">
            <summary>
            Named DockablePanel to avoid the name conflict with DockPanel in WPF and most control libraries.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Docking.DockablePanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Docking.DockablePanel"/> class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Docking.DockablePanel.#ctor(System.String,System.String,System.Windows.Forms.Control,System.Windows.Forms.DockStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Docking.DockablePanel"/> class.
            </summary>
            <param name="key"></param>
            <param name="caption"></param>
            <param name="innerControl"></param>
            <param name="dock"></param>
        </member>
        <member name="M:DotSpatial.Controls.Docking.DockablePanel.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Triggers the PropertyChanged event.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Docking.DockablePanel.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The unique identifier.</value>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Docking.DockablePanel.Caption">
            <summary>
            Gets or sets the caption of the panel and any tab button.
            </summary>
            <value>
            The caption.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.Docking.DockablePanel.InnerControl">
            <summary>
            Gets or sets the InnerControl.
            </summary>
            <value>
            The InnerControl.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.Docking.DockablePanel.Dock">
            <summary>
            Gets or sets The dock location.
            </summary>
            <value>
            The dock location.
            </value>
        </member>
        <member name="E:DotSpatial.Controls.Docking.DockablePanel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ShowExtensionsDialog">
            <summary>
            A list of options for enabling Apps.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ShowExtensionsDialog.Default">
            <summary>
            The "Extensions" menu item will appear on the HeaderControl.  Clicking it launches the AppDialog.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ShowExtensionsDialog.MapGlyph">
            <summary>
            A "plugin" glyph will appear suspended in the lower right corner of the map.  Clicking it launches
            the AppDialog.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ShowExtensionsDialog.None">
            <summary>
            The AppDialog will button not be shown. This allows the application developer to provide a custom implementation.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.AppManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.AppManager.ExtensionsDirectory">
            <summary>
            A known directory from where extensions will be loaded, in addition to the configurable Directories list.
            Assemblies placed directly in this directory will not be loaded, but rather those nested inside of a folder
            more than one level deep.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.AppManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.AppManager"/> class. 
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.AppManager.ActivateExtensionsExclusively(System.String[])">
            <summary>
            Activates the extensions passed in and deactivates the rest.
            If null is passed in, all extensions are deactivated.
            Only affects extensions where DeactivationAllowed is true.
            </summary>
            <param name="names">The names.</param>
        </member>
        <member name="M:DotSpatial.Controls.AppManager.OnLoaded(System.EventArgs)">
            <summary>
            Triggers the Loaded event.
            </summary>
            <param name="ea">
            The ea.
            </param>
        </member>
        <member name="M:DotSpatial.Controls.AppManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:DotSpatial.Controls.AppManager.Initialize">
            <summary>
            Initializes this instance by composing components. Satisfies Imports (such as DockManager and HeaderControl) if possible.
            May be called prior to calling LoadExtensions(), but will be called by LoadExtensions() if needed. 
            </summary>
            <remarks>Loads extensions but does not activate them.</remarks>
        </member>
        <member name="M:DotSpatial.Controls.AppManager.LoadExtensions">
            <summary>
            Activates the extensions.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.AppManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
              the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.AppManager.Loaded">
            <summary>
              Occurs when all plugins are loaded.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.ShowExtensionsDialog">
            <summary>
              Gets or sets the method for enabling extension Apps.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.DataManager">
            <summary>
              Gets or sets the DataManager for the application
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.Directories">
            <summary>
              Gets or sets the list of string paths (relative to this one) to search for plugins.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.DockManager">
            <summary>
              Gets or sets the dock manager.
            </summary>
            <value>
              The dock manager.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.HeaderControl">
            <summary>
              Gets or sets the header control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.Legend">
            <summary>
              Gets the Legend (Table of Contents) associated with the plugin manager
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.Map">
            <summary>
              Gets the Map associated with the plugin manager
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.ProgressHandler">
            <summary>
              Gets the progress handler that is being used to display status messages.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.SerializationManager">
            <summary>
              Gets or sets the serialization manager.
            </summary>
            <value>
              The serialization manager.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.ToolManager">
            <summary>
              Gets or sets the control that is the ToolManager
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.IsInitialized">
            <summary>
            Gets or sets a value indicating whether this instance is initialized.
            </summary>
            <value>
            	<c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.Catalog">
            <summary>
            Gets the catalog containing all off the know extensions. Add any additional extensions to Catalog.Catalogs.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.AppManager.Extensions">
            <summary>
            Gets the extensions.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.CohenSutherland">
            <summary>
            CohenSutherland Line(string) clipping algorithm
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.CohenSutherland.ClipLine(System.Double@,System.Double@,System.Double@,System.Double@,System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Clip a line segment.  Coordinates are modified in place.
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="xmin"></param>
            <param name="ymin"></param>
            <param name="xmax"></param>
            <param name="ymax"></param>
            <returns>
             Clip status indicating how the line was clipped.
             </returns>
        </member>
        <member name="M:DotSpatial.Controls.CohenSutherland.ClipLinestring(System.Collections.Generic.List{System.Double[]},System.Double,System.Double,System.Double,System.Double)">
            <summary>
             Clip a linestring
            </summary>
            <param name="linestring"></param>
            <param name="xmin"></param>
            <param name="ymin"></param>
            <param name="xmax"></param>
            <param name="ymax"></param>
            <returns>
             List of clipped linestrings.
             </returns>
        </member>
        <member name="T:DotSpatial.Controls.CohenSutherland.LineClipStatus">
            <summary>
            Result of individual line segment clip
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.CohenSutherland.LineClipStatus.Unknown">
            <summary>
             Initial untested value
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.CohenSutherland.LineClipStatus.Inside">
            <summary>
             Line is completely inside the clip area
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.CohenSutherland.LineClipStatus.Outside">
            <summary>
             Line is completely outside the clip area
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.CohenSutherland.LineClipStatus.ClippedFirst">
            <summary>
             Line was partially contained and first vertex was clipped
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.CohenSutherland.LineClipStatus.ClippedLast">
            <summary>
             Line was partially contained and last vertex was clipped
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Compatibility.ArchiveSerializer">
            <summary>
            Used to Package a project into a zip file.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.ArchiveSerializer.Save(System.String,System.String)">
            <summary>
            Saves the specified xml and referenced layers into a zip file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="xml">The Project XML.</param>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.ArchiveSerializer.GetRelatedFiles(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the related metadata files (e.g., includes shx and dbf when given a shp file).
            </summary>
            <param name="files">The files.</param>
            <returns></returns>
        </member>
        <member name="T:DotSpatial.Controls.Compatibility.LegacyArchiveDeserializer">
            <summary>
            Open MW4 .wma archive file
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyArchiveDeserializer.#ctor(DotSpatial.Controls.AppManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Compatibility.LegacyArchiveDeserializer"/> class.
            </summary>
            <param name="_applicationManager">The _application manager.</param>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyArchiveDeserializer.OpenFile(System.String)">
            <summary>
            Opens the MW4 style project file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyDeserializer.GetColor(System.Object)">
            <summary>
            Gets the color from a MW settings string.
            </summary>
            <param name="colorFromMW">The color from MW.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyDeserializer.DeserializeLayer(System.Object,DotSpatial.Controls.MapPolygonLayer)">
            <summary>
            Deserializes the layer.
            </summary>
            <param name="layer">The layer.</param>
            <param name="polyLayer">The poly layer.</param>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyDeserializer.DeserializeLayer(System.Object,DotSpatial.Controls.MapLineLayer)">
            <summary>
            Deserializes the layer.
            </summary>
            <param name="layer">The layer.</param>
            <param name="lineLayer">The line layer.</param>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyDeserializer.DeserializeLayer(System.Object,DotSpatial.Controls.MapPointLayer)">
            <summary>
            Deserializes the layer.
            </summary>
            <param name="layer">The layer.</param>
            <param name="pointLayer">The point layer.</param>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyDeserializer.DeserializeLayerProperties(System.Object,DotSpatial.Symbology.Layer)">
            <summary>
            Deserializes the layer properties.
            </summary>
            <param name="layer">The layer.</param>
            <param name="mapLayer">The map layer.</param>
        </member>
        <member name="T:DotSpatial.Controls.Compatibility.LegacyHJustification">
            <summary>
            LegacyHJustification
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyHJustification.Center">
            <summary>
            The item is centered
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyHJustification.Left">
            <summary>
            The item is justified to the left
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyHJustification.Right">
            <summary>
            The item is justified to the right
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyHJustification.None">
            <summary>
            No Justification
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyHJustification.Raw">
             <summary>
            
             </summary>
        </member>
        <member name="T:DotSpatial.Controls.Compatibility.LegacyProjectDeserializer">
            <summary>
            Used to Deserialize mwprj files from MapWindow 4 and earlier.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyProjectDeserializer.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Compatibility.LegacyDeserializer"/> class.
            </summary>
            <param name="map">The map.</param>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyProjectDeserializer.OpenFile(System.String)">
            <summary>
            Opens the MW4 style project file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="T:DotSpatial.Controls.Compatibility.LegacyLayerDeserializer">
            <summary>
            Used to support lbl files.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyLayerDeserializer.TryDeserialization(DotSpatial.Symbology.ILayer,DotSpatial.Controls.IMap)">
            <summary>
            Opens the specified layer.
            </summary>
            <param name="layer">The layer.</param>
            <param name="map">The map.</param>
        </member>
        <member name="M:DotSpatial.Controls.Compatibility.LegacyLayerDeserializer.Open(System.String,DotSpatial.Controls.IMap,DotSpatial.Symbology.Layer)">
            <summary>
            Opens the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="map">The map.</param>
            <param name="layer">The layer.</param>
        </member>
        <member name="T:DotSpatial.Controls.Compatibility.LegacyLayerType">
            <summary>
            LayerType
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyLayerType.Grid">
            <summary>
            Raster Layer
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyLayerType.Image">
            <summary>
            Image Layer
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyLayerType.Invalid">
            <summary>
            Not a valid layer format
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyLayerType.LineShapefile">
            <summary>
            Line FeatureSet Layer
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyLayerType.PointShapefile">
            <summary>
            Point FeatureSet Layer
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyLayerType.PolygonShapefile">
            <summary>
            Polygon FeatureSet Layer
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Compatibility.LegacyPointType">
            <summary>
            PointTypes
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.Circle">
            <summary>
            Circular points
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.Diamond">
            <summary>
            Diamond
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.FontChar">
            <summary>
            FontChar
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.ImageList">
            <summary>
            ImageList
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.TriangleDown">
            <summary>
            Triangle pointed down
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.TriangleLeft">
            <summary>
            Triangle pointed left
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.TriangleRight">
            <summary>
            Triangle pointed right
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.TriangleUp">
            <summary>
            Triangle pointed up
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Compatibility.LegacyPointType.UserDefined">
            <summary>
            User defined
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Docking.IDockManager">
            <summary>
            An interface that allows plugins to add controls which are managed by the application as forms or docking panels.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Docking.IDockManager.Add(DotSpatial.Controls.Docking.DockablePanel)">
            <summary>
            Adds the specified panel.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Docking.IDockManager.Remove(System.String)">
            <summary>
            Removes the specified panel.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:DotSpatial.Controls.Docking.IDockManager.SelectPanel(System.String)">
            <summary>
            Activates and selects the panel.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:DotSpatial.Controls.Docking.IDockManager.ResetLayout">
            <summary>
            Resets the layout of the dock panels to a developer specified location.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Docking.IDockManager.ActivePanelChanged">
            <summary>
            Occurs when the active panel is changed.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Header.ActionItem">
            <summary>
            An interactive element.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:DotSpatial.Controls.Header.GroupedItem">
            <summary>
            A visually distinguished container of <see cref="T:DotSpatial.Controls.Header.ActionItem"/> instances that are Grouped inside of <see cref="T:DotSpatial.Controls.Header.RootItem"/>s.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Header.HeaderItem">
            <summary>
            An item that has a visible presence in the <see cref="T:DotSpatial.Controls.Header.HeaderControl"/> 
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Header.HeaderItem"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Header.HeaderItem"/> class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderItem.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Triggers the PropertyChanged event.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Header.HeaderItem.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The unique identifier.</value>
            <remarks></remarks>
        </member>
        <member name="E:DotSpatial.Controls.Header.HeaderItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.GroupedItem.#ctor">
            <summary>
            Initializes a new instance of the GroupItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.GroupedItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the HeaderItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.GroupedItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Header.GroupedItem"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="P:DotSpatial.Controls.Header.GroupedItem.GroupCaption">
            <summary>
            Gets or sets the group. This is a logical unit.
            </summary>
            <value>The group.</value>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Header.GroupedItem.RootKey">
            <summary>
            Gets or sets the root key.
            </summary>
            <value>The root key.</value>
            <remarks></remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.ActionItem.#ctor">
            <summary>
            Initializes a new instance of the ActionItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.ActionItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Header.ActionItem"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.ActionItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ActionItem class.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Header.ActionItem.Caption">
            <summary>
            Gets or sets the caption.
            </summary>
            <value>The caption.</value>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Header.ActionItem.ToolTipText">
            <summary>
            Gets or sets the simple tool tip.
            </summary>
            <value>The simple tool tip.</value>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Header.ActionItem.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:DotSpatial.Controls.Header.ActionItem"/> is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.Header.ActionItem.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:DotSpatial.Controls.Header.ActionItem"/> is visible.
            </summary>
            <value>
              <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:DotSpatial.Controls.Header.DropDownActionItem">
            <summary>
            A dropdown (combo box) style item.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.DropDownActionItem.#ctor">
            <summary>
            Initializes a new instance of the DropDownActionItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.DropDownActionItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the DropDownActionItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.DropDownActionItem.OnSelectedValueChanged(DotSpatial.Controls.Header.SelectedValueChangedEventArgs)">
            <summary>
            Triggers the SelectedValueChanged event.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Header.DropDownActionItem.AllowEditingText">
             <summary>
             Gets or sets a value indicating whether the user may enter their own value into the dropdown.
             </summary>
             <value>
            <c>true</c> if [allow editing text]; otherwise, <c>false</c>.
             </value>
        </member>
        <member name="P:DotSpatial.Controls.Header.DropDownActionItem.Items">
            <summary>
            Gets the items contained in the dropdown. Changes are not supported after the item is added to the header control.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Header.DropDownActionItem.Width">
            <summary>
            Gets or sets the width of the item displayed in the header control.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.Header.DropDownActionItem.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>
            The selected item.
            </value>
        </member>
        <member name="E:DotSpatial.Controls.Header.DropDownActionItem.SelectedValueChanged">
            <summary>
            Gets or sets an event handler fired on selected value changed.
            </summary>
            <value>
            The on selected value changed.
            </value>
        </member>
        <member name="T:DotSpatial.Controls.Header.HeaderControl">
            <summary>
            HeaderControl which takes care of implementing RemoveItems.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Header.IHeaderControl">
            <summary>
            By using this interface, the developers can create a button, menu, ribbon tab. etc
            without considering whether the user interface is ribbon style or standard toolbar
            style
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.IHeaderControl.Add(DotSpatial.Controls.Header.HeaderItem)">
            <summary>
            This will add a new item that will appear on the standard toolbar or ribbon control.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.IHeaderControl.Remove(System.String)">
            <summary>
            Remove item from the standard toolbar or ribbon control
            </summary>
            <param name="key">The string itemName to remove from the standard toolbar or ribbon control</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Header.IHeaderControl.RemoveAll">
            <summary>
            Removes all items the plugin created.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.IHeaderControl.SelectRoot(System.String)">
            <summary>
            Selects the root, making it the active root.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="F:DotSpatial.Controls.Header.HeaderControl.HomeRootItemKey">
            <summary>
            The key of the home root item.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Header.HeaderControl.ExtensionsRootKey">
            <summary>
            A key to use for the root container of any extensions that do not provider a root key.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.RemoveAll">
            <summary>
            Removes all items the plugin created. 
            </summary>
            <remarks>Should only be called by the plugin (from the plugin assembly).</remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.Add(DotSpatial.Controls.Header.HeaderItem)">
            <summary>
            This will add a new item that will appear on the standard toolbar or ribbon control.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.Add(DotSpatial.Controls.Header.SimpleActionItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.Add(DotSpatial.Controls.Header.MenuContainerItem)">
            <summary>
            Adds the menu container item.
            </summary>
            <param name="item">The item.</param>
            <remarks></remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.Add(DotSpatial.Controls.Header.RootItem)">
            <summary>
            Adds the specified root item.
            </summary>
            <param name="item">The root item.</param>
            <remarks></remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.Add(DotSpatial.Controls.Header.DropDownActionItem)">
            <summary>
            Adds a combo box style item
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.Add(DotSpatial.Controls.Header.SeparatorItem)">
            <summary>
            Adds a visible separator.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.Add(DotSpatial.Controls.Header.TextEntryActionItem)">
            <summary>
            Adds the specified textbox item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.Remove(System.String)">
            <summary>
            Remove item from the standard toolbar or ribbon control
            </summary>
            <param name="key">The string itemName to remove from the standard toolbar or ribbon control</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.RecordItemAdd(System.String,System.String)">
            <summary>
            Adds the item to dictionary so that it can be removed later.
            </summary>
            <param name="key">The key.</param>
            <param name="assemblyFullName">Full name of the assembly.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.HeaderControl.SelectRoot(System.String)">
            <summary>
            Selects the root, making it the active root.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="T:DotSpatial.Controls.Header.MenuContainerItem">
            <summary>
            A container of other <see cref="T:DotSpatial.Controls.Header.ActionItem"/> instances.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuContainerItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Header.MenuContainerItem"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuContainerItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the MenuContainerItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuContainerItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the MenuContainerItem class.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Header.MenuContainerItem.LargeImage">
            <summary>
            Gets or sets the large image.
            </summary>
            <value>The large image.</value>
            <remarks></remarks>
        </member>
        <member name="T:DotSpatial.Controls.Header.RootItem">
            <summary>
            An item that appears as a root-level container of other <see cref="T:DotSpatial.Controls.Header.ActionItem"/> instances.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.RootItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of RootItem MenuContainerItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.RootItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Header.RootItem.Caption">
            <summary>
            Gets or sets the caption.
            </summary>
            <value>The caption.</value>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Header.RootItem.SortOrder">
            <summary>
            Gets or sets the sort order. Lower values will suggest that an item should appear further left in a LeftToRight environment.
            </summary>
            <remarks>Use a multiple of 10 or so to allow other developers some 'space' to place their menus.</remarks>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.Header.RootItem.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:DotSpatial.Controls.Header.RootItem"/> is visible.
            </summary>
            <value>
              <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
            <remarks>Will generally bring this <see cref="T:DotSpatial.Controls.Header.RootItem"/> into focus when Visible is set to true.</remarks>
        </member>
        <member name="T:DotSpatial.Controls.Header.SelectedValueChangedEventArgs">
             <summary>
            
             </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.SelectedValueChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Header.SelectedValueChangedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.SelectedValueChangedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the SelectedValueChangedEventArgs class.
            </summary>
            <param name="selectedItem"></param>
        </member>
        <member name="P:DotSpatial.Controls.Header.SelectedValueChangedEventArgs.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>
            The selected item.
            </value>
        </member>
        <member name="T:DotSpatial.Controls.Header.SeparatorItem">
            <summary>
            A thin, typically vertical separation bar.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.SeparatorItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.Header.SeparatorItem"/> class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.SeparatorItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SeparatorItem class.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Header.SimpleActionItem">
             <summary>
            
             </summary>
             <remarks></remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.SimpleActionItem.#ctor(System.String,System.EventHandler)">
            <summary>
            Initializes a new instance of the SimpleActionItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.SimpleActionItem.#ctor(System.String,System.String,System.EventHandler)">
            <summary>
            Initializes a new instance of the SimpleActionItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.SimpleActionItem.#ctor(System.String,System.String,System.String,System.EventHandler)">
            <summary>
            Initializes a new instance of the SimpleActionItem class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.SimpleActionItem.OnClick(System.EventArgs)">
            <summary>
            Triggers the Click event.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Header.SimpleActionItem.SmallImage">
            <summary>
            Gets or sets the small image.
            </summary>
            <value>The small image.</value>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Header.SimpleActionItem.LargeImage">
            <summary>
            Gets or sets the large image.
            </summary>
            <value>The large image.</value>
            <remarks></remarks>
        </member>
        <member name="E:DotSpatial.Controls.Header.SimpleActionItem.Click">
            <summary>
            Gets or sets the click event handler.
            </summary>
            <value>The click event handler.</value>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Header.SimpleActionItem.MenuContainerKey">
            <summary>
            Gets or sets the menu container key.
            </summary>
            <value>The menu container key.</value>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Header.SimpleActionItem.ToggleGroupKey">
            <summary>
            Gets or sets the toggle button group key used to select what buttons should toggle each other..
            </summary>
            <value>The toggle button key.</value>
            <remarks></remarks>
        </member>
        <member name="P:DotSpatial.Controls.Header.SimpleActionItem.SortOrder">
            <summary>
            Gets or sets the sort order. Lower values will suggest that an item should appear further left in a LeftToRight environment.
            </summary>
            <remarks>Use a multiple of 100 or so to allow other developers some 'space' to place their groups.</remarks>
            <value>
            The sort order.
            </value>
        </member>
        <member name="T:DotSpatial.Controls.Header.MenuBarHeaderControl">
            <summary>
            Sample implementation of toolbar header.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.Initialize(System.Windows.Forms.ToolStripContainer)">
            <summary>
            Initializes the specified container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.Add(DotSpatial.Controls.Header.MenuContainerItem)">
            <summary>
            Adds the item.
            </summary>
            <param name="item">
            The item.
            </param>
            <remarks>
            </remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.Add(DotSpatial.Controls.Header.SeparatorItem)">
            <summary>
            Adds the separator.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.Add(DotSpatial.Controls.Header.RootItem)">
            <summary>
            Adds the specified root item.
            </summary>
            <param name="item">
            The root item.
            </param>
            <remarks>
            </remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.Add(DotSpatial.Controls.Header.SimpleActionItem)">
            <summary>
            This will add a new item that will appear on the standard toolbar or ribbon control.
            </summary>
            <param name="item">
            The item.
            </param>
            <remarks>
            </remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.Add(DotSpatial.Controls.Header.DropDownActionItem)">
            <summary>
            Adds a combo box style item
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.Add(DotSpatial.Controls.Header.TextEntryActionItem)">
            <summary>
            Adds the specified textbox item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.Remove(System.String)">
            <summary>
            Remove item from the standard toolbar or ribbon control
            </summary>
            <param name="key">
            The string itemName to remove from the standard toolbar or ribbon control
            </param>
            <remarks>
            </remarks>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.IsForMenuStrip(DotSpatial.Controls.Header.SimpleActionItem)">
            <summary>
            Determines whether [is for tool strip]  being that it has an icon. Otherwise it should go on a menu.
            </summary>
            <param name="item">
            The item.
            </param>
            <returns>
            <c>true</c> if [is for tool strip] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.EnsureNonNullRoot(DotSpatial.Controls.Header.ActionItem)">
            <summary>
            Make sure the root key is present or use a default.
            </summary>
            <param name="item">
            </param>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.EnsureExtensionsTabExists">
            <summary>
            Ensure the extensions tab exists.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.UncheckButtonsExcept(System.Windows.Forms.ToolStripButton)">
            <summary>
            Unchecks all toolstrip buttons except the current button
            </summary>
            <param name="checkedButton">
            The toolstrip button which should
            stay checked
            </param>
        </member>
        <member name="M:DotSpatial.Controls.Header.MenuBarHeaderControl.SelectRoot(System.String)">
            <summary>
            Selects the root. (Does nothing.)
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="T:DotSpatial.Controls.Header.TextEntryActionItem">
            <summary>
            A textbox item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Header.TextEntryActionItem.Width">
            <summary>
            Gets or sets the width of the item displayed in the header control.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.Header.TextEntryActionItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="T:DotSpatial.Controls.MapFrameProjectionDialog">
            <summary>
            A dialog for changing the projection of the map frame.
            </summary>
            <summary>
            The Designer for the AppDialog Class
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MapFrameProjectionDialog._mapFrame">
            <summary>
            This is necessary because we want to change the projection of the MapFrame
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrameProjectionDialog.#ctor(DotSpatial.Controls.IMapFrame)">
            <summary>
            use the mapFrame with this dialog
            </summary>
            <param name="mapFrame"></param>
        </member>
        <member name="F:DotSpatial.Controls.MapFrameProjectionDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrameProjectionDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrameProjectionDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrameProjectionDialog.MapFrame">
            <summary>
            Gets or sets the map frame for this dialog
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.DynamicXMLExtensions">
            <summary>
            Helper extensions that are used to parse an xml file and display its schema.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLExtensions.StrCat``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            STRs the cat.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="separator">The separator.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLExtensions.GetXPath(System.Xml.Linq.XObject)">
            <summary>
            Gets the X path.
            </summary>
            <param name="xobj">The xobj.</param>
            <returns></returns>
        </member>
        <member name="T:DotSpatial.Controls.DynamicXMLNode">
            <summary>
            http://mutable.net/blog/archive/2010/07/07/yet-another-take-on-a-dynamicobject-wrapper-for-xml.aspx
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.DynamicXMLNode"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.DynamicXMLNode"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.DynamicXMLNode"/> class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Load(System.String)">
            <summary>
            Loads the specified URI.
            </summary>
            <param name="uri">The URI.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Load(System.IO.Stream)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Load(System.IO.TextReader)">
            <summary>
            Loads the specified text reader.
            </summary>
            <param name="textReader">The text reader.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Load(System.Xml.XmlReader)">
            <summary>
            Loads the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Load(System.String,System.Xml.Linq.LoadOptions)">
            <summary>
            Loads the specified URI.
            </summary>
            <param name="uri">The URI.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
            <summary>
            Loads the specified text reader.
            </summary>
            <param name="textReader">The text reader.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
            <summary>
            Loads the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Parse(System.String)">
            <summary>
            Parses the specified text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.Parse(System.String,System.Xml.Linq.LoadOptions)">
            <summary>
            Parses the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Provides the implementation for operations that set member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as setting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member to which the value is being assigned. For example, for the statement sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="value">The value to set to the member. For example, for sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, the <paramref name="value"/> is "Test".</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result"/>.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>
            Provides the implementation for operations that invoke a member. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as calling a method.
            </summary>
            <param name="binder">Provides information about the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the statement sampleObject.SampleMethod(100), where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleMethod". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="args">The arguments that are passed to the object member during the invoke operation. </param>
            <param name="result">The result of the member invocation.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>
            Provides the implementation for operations that set a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations that access objects by a specified index.
            </summary>
            <param name="binder">Provides information about the operation.</param>
            <param name="indexes">The indexes that are used in the operation.</param>
            <param name="value">The value to set to the object that has the specified index. For example, for the sampleObject[3] = 10 operation in C# (sampleObject(3) = 10 in Visual Basic), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, <paramref name="value"/> is equal to 10.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>
            Provides the implementation for operations that get a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for indexing operations.
            </summary>
            <param name="binder">Provides information about the operation.</param>
            <param name="indexes">The indexes that are used in the operation. </param>
            <param name="result">The result of the index operation.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.DynamicXMLNode.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>
            Provides implementation for type conversion operations. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations that convert an object from one type to another.
            </summary>
            <param name="binder">Provides information about the conversion operation. The binder.Type property provides the type to which the object must be converted. For example, for the statement (String)sampleObject in C# (CType(sampleObject, Type) in Visual Basic), where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Type returns the <see cref="T:System.String"/> type. The binder.Explicit property provides information about the kind of conversion that occurs. It returns true for explicit conversion and false for implicit conversion.</param>
            <param name="result">The result of the type conversion operation.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)
            </returns>
        </member>
        <member name="T:DotSpatial.Controls.Extension">
            <summary>
            A provider is the base class that enables plug-ins to work with the Application Manager.
            This is true whether it is a plug-in or a data provider or some other extension.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IExtension">
            <summary>
            The IExtension interface represents the shared content between all providers and plugins.  This simply acts like
            an on-off switch for enabling or disabling the extension.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IExtension.Activate">
            <summary>
            Activates this extension
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IExtension.Deactivate">
            <summary>
            Deactivates this extension
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IExtension.IsActive">
            <summary>
            Gets or sets a boolean that is true if the extension is active and running.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IExtension.DeactivationAllowed">
            <summary>
            Gets a value indicating whether [deactivation is allowed].
            </summary>
            <value>
              <c>true</c> if [deactivation is allowed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.IExtension.Author">
            <summary>
            Gets the author.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IExtension.BuildDate">
            <summary>
            Gets the build date.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IExtension.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IExtension.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IExtension.Version">
            <summary>
            Gets the version.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IExtension.FullName">
            <summary>
            Gets the Assembly FullName.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Extension.#ctor">
            <summary>
            Creates a new instance of Provider
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Extension.Activate">
            <summary>
            Activates this provider
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Extension.Deactivate">
            <summary>
            Deactivates this provider
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Extension.IsActive">
            <summary>
            Gets or sets a boolean that is true if the extension is active and running.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Extension.DeactivationAllowed">
            <summary>
            Gets a value indicating whether [deactivation is allowed].
            </summary>
            <value>
            	<c>true</c> if [deactivation is allowed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.Extension.Author">
            <summary>
            Author of the plugin.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Extension.BuildDate">
            <summary>
            Build date.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Extension.Description">
            <summary>
            Short description of the plugin.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Extension.Name">
            <summary>
            Name of the plugin.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Extension.Version">
            <summary>
            Plugin version.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Extension.FullName">
            <summary>
            Gets the Assembly FullName.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Extension.App">
            <summary>
            Gets the AppManager that is responsible for activating and deactivating plugins as well as coordinating
            all of the other properties.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.FeatureIdentifier">
            <summary>
            FeatureIdentifier
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.FeatureIdentifier.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.FeatureIdentifier.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.FeatureIdentifier.#ctor">
            <summary>
            Creates a new instance of FeatureIdentifier
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.FeatureIdentifier.Clear">
            <summary>
            Clears the items in the tree
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.FeatureIdentifier.Add(DotSpatial.Symbology.IFeatureLayer,DotSpatial.Data.Extent)">
            <summary>
            Adds a new node to the tree view with the layer name
            </summary>
            <param name="layer"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:DotSpatial.Controls.FeatureIdentifier.ReSelect">
            <summary>
            Re-selects the same layer that was being investigated before.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.FeatureIdentifier.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Controls.FeatureIdentifier.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Overrides the normal closing behavior to prevent accidentally referencing a
            disposed form later.  This also allows the form to display slightly faster
            after the first time.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:DotSpatial.Controls.GeneralTypeConverter">
            <summary>
            PropertyGridTypeConverter
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.GeneralTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            CanConvertTo
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.GeneralTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="culture"></param>
             <param name="value"></param>
             <param name="destinationType"></param>
             <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.GeneralTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Can convert from
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="T:DotSpatial.Controls.IBasicMap">
            <summary>
            IBasicMap
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapView">
            <summary>
            IClient
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapView.PixelToProj(System.Drawing.Point)">
            <summary>
            Converts a single point location into an equivalent geographic coordinate
            </summary>
            <param name="position">The client coordinate relative to the map control</param>
            <returns>The geographic ICoordinate interface</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapView.PixelToProj(System.Drawing.Rectangle)">
            <summary>
            Converts a rectangle in pixel coordinates relative to the map control into
            a geographic envelope.
            </summary>
            <param name="rect">The rectangle to convert</param>
            <returns>An IEnvelope interface</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapView.ProjToPixel(DotSpatial.Topology.Coordinate)">
            <summary>
            Converts a single geographic location into the equivalent point on the
            screen relative to the top left corner of the map.
            </summary>
            <param name="location">The geographic position to transform</param>
            <returns>A Point with the new location.</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapView.ProjToPixel(DotSpatial.Data.Extent)">
            <summary>
            Converts a single geographic envelope into an equivalent Rectangle
            as it would be drawn on the screen.
            </summary>
            <param name="env">The geographic IEnvelope</param>
            <returns>A Rectangle</returns>
        </member>
        <member name="P:DotSpatial.Controls.IMapView.ViewExtents">
            <summary>
            Gets or sets the geographic extents to show in the view.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IBasicMap.AddLayer">
            <summary>
            Adds a new layer to the map using an open file dialog.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IBasicMap.PointToScreen(System.Drawing.Point)">
            <summary>
            Converts a point from client coordinates to screen coordinates.
            </summary>
            <param name="position">The client location.</param>
            <returns>A Point in screen coordinates</returns>
        </member>
        <member name="M:DotSpatial.Controls.IBasicMap.PointToClient(System.Drawing.Point)">
            <summary>
            Converst a point from screen coordinates to client coordinates
            </summary>
            <param name="position">The Point representing the screen position</param>
            <returns>The Point</returns>
        </member>
        <member name="M:DotSpatial.Controls.IBasicMap.Invalidate">
            <summary>
            Invalidates the entire Map control, forcing it to redraw itself from the back buffer stencils.
            This is good for drawing on top of the map, or when a layer is visible or not.  If you need
            to change the colorscheme as well
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IBasicMap.Invalidate(System.Drawing.Rectangle)">
            <summary>
            Invalidates the specified clipRectangle so that only that small region needs
            to redraw itself.
            </summary>
            <param name="clipRectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.IBasicMap.RefreshMap(System.Drawing.Rectangle)">
            <summary>
            Instructs the map to update the specified clipRectangle by drawing it to the back buffer.
            </summary>
            <param name="clipRectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.IBasicMap.ZoomToMaxExtent">
            <summary>
            Instructs the map to change the perspective to include the entire drawing content, and
            in the case of 3D maps, changes the perspective to look from directly overhead.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IBasicMap.ClearLayers">
            <summary>
            Instructs the map to clear the layers.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IBasicMap.GetLayers">
            <summary>
            returns a functional list of the ILayer members.  This list will be
            separate from the actual list stored, but contains a shallow copy
            of the members, so the layers themselves can be accessed directly.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.Bounds">
            <summary>
            Gets the bounding rectangle representing this map in screen coordinates
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.BufferedImage">
            <summary>
            Gets an image that has been buffered
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.ClientRectangle">
            <summary>
            Gets the client rectangle of the map control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.FunctionMode">
            <summary>
            Gets or sets the current tool mode.  This rapidly enables or disables specific tools to give
            a combination of functionality.  Selecting None will disable all the tools, which can be
            enabled manually by enabling the specific tool in the GeoTools dictionary.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.Extent">
            <summary>
            Gets the geographic bounds of all of the different data layers currently visible on the map.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.Height">
            <summary>
            Gets the height of the control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.IsBusy">
            <summary>
            Gets or sets a boolean that indicates whether a map-function is currently interacting with the map.
            If this is true, then any tool-tip like popups or other mechanisms that require lots of re-drawing
            should suspend themselves to prevent conflict.  Setting this actually increments an internal integer,
            so when that integer is 0, the map is "Not" busy, but multiple busy processes can work independently.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.Left">
            <summary>
            Gets the screen coordinates of the
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.Legend">
            <summary>
            Gets the legend, if any, associated with this map control.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.MapFrame">
            <summary>
            A MapFrame
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.Top">
            <summary>
            Gets the screen coordinates of the top of this control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IBasicMap.Width">
            <summary>
            Gets the width of the control
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Images">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Images.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Images.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IPreviewMap">
             <summary>
            
             </summary>
        </member>
        <member name="T:DotSpatial.Controls.IUserControl">
            <summary>
            Provides an empty control that can be used to create other controls.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IUserControl.AutoSizeMode">
            <summary>
            Gets or sets how the control will resize itself.
            </summary>
            <returns>
            A value from the AutoSizeMode enumeration. The default is AutoSizeMode.GrowOnly.
            </returns>
        </member>
        <member name="P:DotSpatial.Controls.IUserControl.BorderStyle">
            <summary>
            Gets or sets the border style of the tree view control.
            </summary>
            <returns>
            One of the BorderStyle values. The default is BorderStyle.Fixed3D.
            </returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            InvalidEnumArgumentException: The assigned value is not one of the BorderStyle values.
            </exception>
        </member>
        <member name="E:DotSpatial.Controls.IUserControl.AutoSizeChanged">
            <summary>
            Occurs when the AutoSize changes
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.IUserControl.AutoValidateChanged">
            <summary>
            Occurs when the UserControl.AutoValidate property changes.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.IUserControl.Load">
            <summary>
            Occurs before the control becomes visible for the first time.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IPreviewMapHandler">
            <summary>
            The extended and complete set of events associated with the PreviewMap
            Implementing this avoids having to manually add handlers for every event.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IPreviewMapHandler.PreviewMap_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Occurs when a drag-and-drop operation is completed.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A DragEventArgs with the drag parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.IPreviewMapHandler.Map_ExtentsChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the visible region being displayed on the map changes
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IPreviewMapHandler.PreviewMap_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the control is clicked by the mouse.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.IPreviewMapHandler.PreviewMap_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the control is double clicked by the mouse.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.IPreviewMapHandler.PreviewMap_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is pressed.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.IPreviewMapHandler.PreviewMap_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is moved over the control.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.IPreviewMapHandler.PreviewMap_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is released.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.IPreviewMapHandler.PreviewMap_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse wheel moves while the control has focus.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.IPreviewMapHandler.PreviewMap_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Occurs when the control is redrawn.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A PaintEventArgs with any parameters</param>
        </member>
        <member name="T:DotSpatial.Controls.LayoutBitmap">
            <summary>
            The layout bitmap provides the ability to add any custom image to the layout
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutElement">
            <summary>
            The interface for all elements that can be added to the layout control
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.#ctor">
            <summary>
            Creates an instance of the layout element
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement._background_ItemChanged(System.Object,System.EventArgs)">
            <summary>
            Fires when the background is modified
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.IntersectsWith(System.Drawing.PointF)">
            <summary>
            Returns true if the point in paper coordinants intersects with the rectangle of the element
            </summary>
            <param name="paperPoint"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.IntersectsWith(System.Drawing.RectangleF)">
            <summary>
            Returns true if the rectangle in paper coordinants intersects with the rectangle of the the element
            </summary>
            <param name="paperRectangle"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.Draw(System.Drawing.Graphics,System.Boolean)">
            <summary>
            This gets called to instruct the element to draw itself in the appropriate spot of the graphics object
            </summary>
            <param name="g">The graphics object to draw to</param>
            <param name="printing">If true then we a actually printing not previewing so we should make it as high quality as possible</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.DrawBackground(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Draws the elements background behind everything else
            </summary>
            <param name="g"></param>
            <param name="printing"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.DrawOutline(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Draws the elements outline on top of everything else
            </summary>
            <param name="g"></param>
            <param name="printing"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.RefreshElement">
            <summary>
            Causes the element to be refreshed
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.ToString">
            <summary>
            This returns the objects name as a string
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.OnInvalidate">
            <summary>
            Call this when it needs to updated
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.OnSizeChanged">
            <summary>
            Fires when the size of the element changes
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.OnThumbnailChanged">
            <summary>
            Fires when the thumbnail gets modified
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutElement.UpdateThumbnail">
            <summary>
            Updates the thumbnail when needed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.LayoutElement.Invalidated">
            <summary>
            Fires when the layout element is invalidated
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.LayoutElement.ThumbnailChanged">
            <summary>
            Fires when the preview thumbnail for this element has been updated
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.LayoutElement.SizeChanged">
            <summary>
            Fires when the size of this element has been adjusted by the user
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutElement.Background">
            <summary>
            Gets or sets the line symbolizer that draws the outline
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutElement.Name">
            <summary>
            Gets or sets the name of the element
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutElement.ThumbNail">
            <summary>
            Gets the thumbnail that appears in the LayoutListView
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutElement.Resizing">
            <summary>
            Disables updating redraw when resizing.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutElement.ResizeStyle">
            <summary>
            Indicates if this element can handle redraw events on resize
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutElement.LocationF">
            <summary>
            Gets or sets the location of the top left corner of the control in 1/100 of an inch paper coordinants
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutElement.Location">
            <summary>
            Gets or sets the location of the top left corner of the control in 1/100 of an inch paper coordinants
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutElement.Size">
            <summary>
            Gets or sets the size of the element in 1/100 of an inch paper coordinants
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutElement.Rectangle">
            <summary>
            Gets or sets the rectangle of the element in 1/100th of an inch paper coordinants
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutBitmap.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutBitmap.Draw(System.Drawing.Graphics,System.Boolean)">
            <summary>
            This gets called to instruct the element to draw itself in the appropriate spot of the graphics object
            </summary>
            <param name="g">The graphics object to draw to</param>
            <param name="printing">Boolean, true if this is being drawn to a print document</param>
        </member>
        <member name="P:DotSpatial.Controls.LayoutBitmap.PreserveAspectRatio">
            <summary>
            Preserves the aspect ratio if this boolean is true, otherwise it allows stretching of
            the bitmap to occur
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutBitmap.Brightness">
            <summary>
            Modifies the brightness of the bitmap relative to its original brightness +/- 255 Doesn't modify original bitmap
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutBitmap.Contrast">
            <summary>
            Modifies the contrast of the bitmap relative to its original contrast +/- 255 Doesn't modify original bitmap
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutBitmap.Filename">
            <summary>
            Gets or sets the string fileName of the bitmap to use
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutBitmap.Draft">
            <summary>
            Allows for a faster but lower quality bitmap to be rendered to the screen
            and a higher quality bitmap to be printed during actual printing.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutControl">
            <summary>
             The actual control controling the layout
            </summary>
            <remarks>TODO: This code seems to be unused.</remarks>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.RemoveFromLayout(DotSpatial.Controls.LayoutElement)">
            <summary>
            Removes the specified layoutElement from the layout
            </summary>
            <param name="le"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ClearLayout">
            <summary>
            Clears the the layout of all layoutElements
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.AddToSelection(DotSpatial.Controls.LayoutElement)">
            <summary>
            Adds the specified LayoutElement le to the selection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.AddToSelection(System.Collections.Generic.List{DotSpatial.Controls.LayoutElement})">
            <summary>
            Adds the specified LayoutElement le to the selection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.RemoveFromSelection(DotSpatial.Controls.LayoutElement)">
            <summary>
            Removes the specified layoutElement from the selection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ClearSelection">
            <summary>
            Clears the current selection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.#ctor">
            <summary>
            This is the constructor, it makes a LayoutControl
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.NewLayout(System.Boolean)">
            <summary>
            Creates a new blank layout
            </summary>
            <param name="promptSave">Prompts the user if they want to save first</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.LoadLayout(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Shows a load dialog box and prompts the user to open a layout file
            </summary>
            <param name="promptSave">Prompts the user if they want to save first</param>
            <param name="loadPaperSettings">Loads the paper settings (size, margins, orientation) from the layout</param>
            <param name="promptPaperMismatch">Warn the user if the paper size stored in the file doesn't exist in current printer and ask them if they want to load it anyways</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.LoadLayout(System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads the selected layoutfile
            </summary>
            <param name="fileName">The layout file to load</param>
            <param name="loadPaperSettings">Loads the paper settings (size, margins, orientation) from the layout</param>
            <param name="promptPaperMismatch">Warn the user if the paper size stored in the file doesn't exist in current printer and ask them if they want to load it anyways</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.CloseLayout">
            <summary>
            Prepapres the layoutcontrol for closing, prompts the user to save if needed
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.SaveLayout(System.Boolean)">
            <summary>
            Shows a save dialog box and prompts the user to save a layout file
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.SaveLayout(System.String)">
            <summary>
            Saves the layout to the specified fileName
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.AddToLayout(DotSpatial.Controls.LayoutElement)">
            <summary>
            Adds a layout element to the layout
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ShowChoosePrinterDialog">
            <summary>
            This shows the choose printer dialog
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ShowPageSetupDialog">
            <summary>
            This shows the pageSetup dialog
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.Print">
            <summary>
            Prints to the printer currently in PrinterSettings
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.RefreshElements">
            <summary>
            Refreshes all of the elements in the layout
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            This event handler is fired by the print document when it prints and draws the layout to the print document
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomIn">
            <summary>
            Zooms into the paper
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomOut">
            <summary>
            Zooms out of the paper
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomFitToScreen">
            <summary>
            Zooms the page to fit to the screen and centers it
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomInMap(DotSpatial.Controls.LayoutMap)">
            <summary>
            Zooms the specified map element in by 10%
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomInMap">
            <summary>
            Zooms all map elements in by 10%
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomOutMap(DotSpatial.Controls.LayoutMap)">
            <summary>
            Zooms the specified map element out by 10%
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomOutMap">
            <summary>
            Zooms all map element out by 10%
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomFullExtentMap(DotSpatial.Controls.LayoutMap)">
            <summary>
            Zooms the specified map element to the full extent of its layers
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomFullExtentMap">
            <summary>
            Zooms all map elements to the full extent of their layers
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomFullViewExtentMap(DotSpatial.Controls.LayoutMap)">
            <summary>
            Zoom the specified map to the extent of the data view
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ZoomFullViewExtentMap">
            <summary>
            Zoom all maps to the extent of their data view
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.PanMap(DotSpatial.Controls.LayoutMap,System.Single,System.Single)">
            <summary>
            Pans the map the specified amount
            </summary>
            <param name="lm">the layout map to pan</param>
            <param name="x">The distance to pan the map on x-axis in screen coord</param>
            <param name="y">The distance to pan the map on y-axis in screen coord</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.DeleteSelected">
            <summary>
            Deletes all of the selected elements from the model
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.InvertSelection">
            <summary>
            Inverts the selection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.MoveSelectionUp">
            <summary>
            Moves the selection up by one
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.MoveSelectionDown">
            <summary>
            Moves the selection down by one
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.SelectAll">
            <summary>
            Selects All the elements in the layout
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.AddElementWithMouse(DotSpatial.Controls.LayoutElement)">
            <summary>
            Allows the user to click on the layout and drag a rectangle where they want to insert an element
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.CreateMapElement">
            <summary>
            Creates an instance of the MapElement and returns it
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.CreateLegendElement">
            <summary>
            Creates an instance of the LegendElement and returns it
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.CreateScaleBarElement">
            <summary>
            Creates an instance of the ScaleBarElement and returns it
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ConvertSelectedToBitmap">
            <summary>
            Converts all of the selected layout elements to bitmaps
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ConvertElementToBitmap(DotSpatial.Controls.LayoutElement,System.String)">
            <summary>
            Converts a selected layout element into a bitmap and saves it a the specified location removing the old element and replacing it
            </summary>
            <param name="le"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.AlignElements(System.Collections.Generic.List{DotSpatial.Controls.LayoutElement},DotSpatial.Controls.Alignment,System.Boolean)">
            <summary>
            Aligns elements with each other or with the margins
            </summary>
            <param name="elements">A list of elements to align</param>
            <param name="side">The side to align to</param>
            <param name="margin">True to align to paper margins, false to align to the most extreme element of the indicated side</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.MatchElementsSize(System.Collections.Generic.List{DotSpatial.Controls.LayoutElement},DotSpatial.Controls.Fit,System.Boolean)">
            <summary>
            Makes all of the input layout elements have the same width or height
            </summary>
            <param name="elements">A list of elements to resize to the max size of all elements or the margins</param>
            <param name="axis">Fit the width or the height</param>
            <param name="margin">True if use margin size false to use arges element in input list</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ScreenToPaper(System.Drawing.PointF)">
            <summary>
            Converts a point in screen coordinants to paper coordinants in 1/100 of an inch
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ScreenToPaper(System.Single,System.Single)">
            <summary>
            Converts a point in screen coordinants to paper coordinants in 1/100 of an inch
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ScreenToPaper(System.Drawing.RectangleF)">
            <summary>
            Converts a rectangle in screen coordinants to paper coordiants in 1/100 of an inch
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.ScreenToPaper(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Converts a rectangle in screen coordinants to paper coordiants in 1/100 of an inch
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.PaperToScreen(System.Drawing.PointF)">
            <summary>
            Converts between a point in paper coordinants in 1/100th of an inch to screen coordinants
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.PaperToScreen(System.Single,System.Single)">
            <summary>
            Converts between a point in paper coordinants in 1/100th of an inch to screen coordinants
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.PaperToScreen(System.Drawing.RectangleF)">
            <summary>
            Converts between a rectangle in paper coordinants in 1/100th of an inch to screen coordinants
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.PaperToScreen(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Converts a rectangle in screen coordinants to paper coordiants in 1/100 of an inch
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.CenterPaperOnPoint(System.Drawing.PointF)">
            <summary>
            Centers the layout on a given point
            </summary>
            <param name="centerPoint">A Point on the paper to center on</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.UpdateScrollBars">
            <summary>
            Updates the scroll bars so the look and act right
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.IntersectElementEdge(System.Drawing.RectangleF,System.Drawing.PointF,System.Single)">
            <summary>
            Calculates which edge of a rectangle the point intersects with, within a certain limit
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Drawing code
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Prevents flicker from any default on paint background operations
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.LeInvalidated(System.Object,System.EventArgs)">
            <summary>
            This gets fired when one of the layoutElements gets invalidated
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.LayoutControl_Resize(System.Object,System.EventArgs)">
            <summary>
            Fires whenever the LayoutControl is resized
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.vScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            This fires when the vscrollbar is moved
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.hScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            This fires when the hscrollbar is moved
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.OnFilenameChanged(System.EventArgs)">
            <summary>
            Calls this to indicate the fileName has been changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.OnZoomChanged(System.EventArgs)">
            <summary>
            Calls this to indicate the zoom has been changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.OnSelectionChanged(System.EventArgs)">
            <summary>
            Call this to indicate the selection has changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.OnElementsChanged(System.EventArgs)">
            <summary>
            Call this to indicate elements were added or removed
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:DotSpatial.Controls.LayoutControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.LayoutControl.ElementsChanged">
            <summary>
            This fires after a element if added or removed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.LayoutControl.SelectionChanged">
            <summary>
            This fires after the selection has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.LayoutControl.ZoomChanged">
            <summary>
            Thie fires when the zoom of the layout changes
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.LayoutControl.FilenameChanged">
            <summary>
            This fires when the projects file name is changed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.SelectedLayoutElements">
            <summary>
            Gets the list of layoutElements currently selected in the project
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.LayoutElements">
            <summary>
            Gets the list of layoutElements currently loaded in the project
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.Filename">
            <summary>
            Gets or sets the fileName of the current project
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.PrinterSettings">
            <summary>
            Gets or sets  the printer settings for the layout
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.LayoutMenuStrip">
            <summary>
            Gets or sets the layout menu strip to use
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.LayoutPropertyGrip">
            <summary>
            Gets or sets the layoutproperty grip to use
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.MapControl">
            <summary>
            Gets or sets the Map control to use
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.LayoutZoomToolStrip">
            <summary>
            Gets or sets the layout tool strip to use
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.LayoutListBox">
            <summary>
            Gets or sets the layout list box
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.LayoutDocToolStrip">
            <summary>
            Gets or sets the LayoutDocToolStrip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.LayoutInsertToolStrip">
            <summary>
            Gets or sets the LayoutInsertToolStrip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.LayoutMapToolStrip">
            <summary>
            Gets of sets the LayoutMapToolStrip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.ShowMargin">
            <summary>
            Sets a boolean flag indicating if margins should be shown.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.Zoom">
            <summary>
            Gets or sets the zoom of the paper
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.DrawingQuality">
            <summary>
            Gets or sets the smoothing mode to use to draw the map
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.MapPanMode">
            <summary>
            Gets or sets the map pan mode
            </summary>\
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.PaperWidth">
            <summary>
            Gets the width of the paper in 1/100 of an inch
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutControl.PaperHeight">
            <summary>
            Gets the heigh of the paper in 1/100 of an inch
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutDocToolStrip">
            <summary>
            A Brian Marchioni original toolstrip... preloaded with content.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutDocToolStrip.#ctor">
            <summary>
            Creates an instance of the toolstrip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutDocToolStrip.LayoutControl">
            <summary>
            The layout control associated with this toolstrip
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MouseMode">
            <summary>
            An enumeration that defines the Mouses current behavior
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MouseMode.Default">
            <summary>
            The cursor is currently in default mode
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MouseMode.CreateSelection">
            <summary>
            The cursor is currently being used to create a new selection
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MouseMode.MoveSelection">
            <summary>
            The cursor is currently is move selection mode
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MouseMode.ResizeSelected">
            <summary>
            The cursor is in resize mode because its over the edge of a selected item
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MouseMode.InsertNewElement">
            <summary>
            When in this mode the user can click on the map select an area and an element is inserted at that spot
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MouseMode.StartInsertNewElement">
            <summary>
            In this mode a cross hair is shown letting the user create a new Insert rectangle
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MouseMode.StartPanMap">
            <summary>
            Puts the mouse into a mode that allows map panning
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MouseMode.PanMap">
            <summary>
            The mouse is actually panning a map
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Edge">
            <summary>
            Enumerates all the possible resize direction
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ResizeStyle">
            <summary>
            Enumarates the different ways that a a LayoutElement can handle resize events
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ResizeStyle.HandledInternally">
            <summary>
            The resize style is determined automatically
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ResizeStyle.StretchToFit">
            <summary>
            The element is adjusted to fit the extents even if it is distorted
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ResizeStyle.NoScaling">
            <summary>
            No scaling occurs whatsoever, and the element is drawn at its original size
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ScaleBarUnit">
            <summary>
            An enumeration of the possible scale bar units
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ScaleBarUnit.Kilometers">
            <summary>
            Kilometers
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ScaleBarUnit.Meters">
            <summary>
            Meters
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ScaleBarUnit.Centimeters">
            <summary>
            Centimeters
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ScaleBarUnit.Millimeters">
            <summary>
            Millimeters
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ScaleBarUnit.Miles">
            <summary>
            Miles
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ScaleBarUnit.Yards">
            <summary>
            Yards
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ScaleBarUnit.Feet">
            <summary>
            Feet
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ScaleBarUnit.Inches">
            <summary>
            Inches
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Alignment">
            <summary>
            An enumeration of alignments used for aligning selected layout elements
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Alignment.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Alignment.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Alignment.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Alignment.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Alignment.Horizontal">
            <summary>
            Horizontal
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Alignment.Vertical">
            <summary>
            Vertical
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Fit">
            <summary>
            An enumeration of resizing options used for aligning selected layout elements
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Fit.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Fit.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutForm">
            <summary>
            This is the primary form where the print layout content is organized before printing
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutForm.#ctor">
            <summary>
            Default constructor for creating a new instance of hte Layout form
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.LayoutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutForm.MapControl">
            <summary>
            Gets or sets the map that will be used in the layout
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutInsertToolStrip">
            <summary>
            A Brian Marchioni original toolstrip... preloaded with content.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutInsertToolStrip.#ctor">
            <summary>
            Creates an instance of the toolstrip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutInsertToolStrip.LayoutControl">
            <summary>
            The layout control associated with this toolstrip
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutLayerEditor">
            <summary>
            Layout Layer Editor allows the user to select which layers appear in the legend
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutLayerEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits a value based on some user input which is collected from a character control.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutLayerEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the UITypeEditorEditStyle, which in this case is drop down.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:DotSpatial.Controls.LayoutLayerEditor.IsDropDownResizable">
            <summary>
            Ensures that we can widen the drop-down without having to close the drop down,
            widen the control, and re-open it again.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutLegend">
            <summary>
            Draws a legend for the layout
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutLegend.LayoutControlElementsChanged(System.Object,System.EventArgs)">
            <summary>
            Updates the scale bar if the map is deleted
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutLegend.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutLegend.Draw(System.Drawing.Graphics,System.Boolean)">
            <summary>
            This gets called to instruct the element to draw itself in the appropriate spot of the graphics object
            </summary>
            <param name="g">The graphics object to draw to</param>
            <param name="printing">A boolean value indicating if the Draw code is being called to print</param>
        </member>
        <member name="P:DotSpatial.Controls.LayoutLegend.Map">
            <summary>
            Gets or sets the layoutmap to use to base the legend on
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutLegend.Layers">
            <summary>
            Gets or sets the layers to include in the legend
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutLegend.Font">
            <summary>
            Gets or sets the font used to draw this text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutLegend.Color">
            <summary>
            Gets or sets the color of the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutLegend.NumColumns">
            <summary>
            Gets or sets the number of columns to use when rendering the legend
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutLegend.TextHint">
            <summary>
            Gets or sets the hinting used to draw the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutLegend.LayoutControl">
            <summary>
            Gets or sets a layout control
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutListBox">
            <summary>
            This is designed to automatically have add, subtract, up and down arrows for working with a simple collection of items.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutListBox.#ctor">
            <summary>
            Creates a new instance of the Collection Control
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutListBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutListBox.RefreshList">
            <summary>
            Refreshes the items in the list to accuratly reflect the current collection
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutListBox.LayoutControl">
            <summary>
            Gets or sets the layoutControl
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutMap">
            <summary>
            A layout control that draws the content from a map control so that it can be printed
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMap.#ctor">
            <summary>
            The constructor to build a new LayoutMap control
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMap.#ctor(DotSpatial.Controls.Map)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMap.OnSizeChanged">
            <summary>
            Updates the size of the control
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMap.ZoomToFullExtent">
            <summary>
            Zooms the map to the fullextent of all available layers
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMap.ZoomViewExtent">
            <summary>
            Zooms the map to the extent of the current view
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMap.ZoomInMap">
            <summary>
            Zooms the map element in by 10%
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMap.ZoomOutMap">
            <summary>
            Zooms the map element out by 10%
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMap.PanMap(System.Double,System.Double)">
            <summary>
            Pans the map
            </summary>
            <param name="x">The amount to pan the map in the X-axis in map coord</param>
            <param name="y">The amount to pan the map in the Y-axis in map coord</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMap.Draw(System.Drawing.Graphics,System.Boolean)">
            <summary>
            This gets called to instruct the element to draw itself in the appropriate spot of the graphics object
            </summary>
            <param name="g">The graphics object to draw to</param>
            <param name="printing">Boolean, true if the drawing is printing to an actual page</param>
        </member>
        <member name="P:DotSpatial.Controls.LayoutMap.Envelope">
            <summary>
            The geographic envelope to be shown by the layout
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutMap.MapControl">
            <summary>
            The map control that generates the printable content
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutMap.Scale">
            <summary>
            A mathematical calculation using the map
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutMapEditor">
            <summary>
            Layout Map Editor is a UIType Editor that allows selecting a new map
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMapEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits a value based on some user input which is collected from a character control.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMapEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the UITypeEditorEditStyle, which in this case is drop down.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:DotSpatial.Controls.LayoutMapEditor.IsDropDownResizable">
            <summary>
            Ensures that we can widen the drop-down without having to close the drop down,
            widen the control, and re-open it again.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutMapToolStrip">
            <summary>
            A Brian Marchioni original toolstrip... preloaded with content.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMapToolStrip.#ctor">
            <summary>
            Creates an instance of the toolstrip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutMapToolStrip.LayoutControl">
            <summary>
            The layout control associated with this toolstrip
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutMenuStrip">
             <summary>
            
             </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutMenuStrip.#ctor">
            <summary>
            Creates an instance of the toolstrip
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.LayoutMenuStrip.CloseClicked">
            <summary>
            Fires when the user clicks the close button on this menu strip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutMenuStrip.LayoutControl">
            <summary>
            The layout control associated with this toolstrip
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutNorthArrow">
            <summary>
            North Arrow control for the Layout
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutNorthArrow.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutNorthArrow.Draw(System.Drawing.Graphics,System.Boolean)">
            <summary>
            This gets called to instruct the element to draw itself in the appropriate spot of the graphics object
            </summary>
            <param name="g">The graphics object to draw to</param>
            <param name="printing">boolean, true if printing to the actual paper/document, false if drawing as a control</param>
        </member>
        <member name="P:DotSpatial.Controls.LayoutNorthArrow.Color">
            <summary>
            Gets or sets the color of the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutNorthArrow.NorthArrowStyle">
            <summary>
            Gets or sets the style of the north arrow to draw
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutNorthArrow.Rotation">
            <summary>
            Gets or sets the rotations of the north arrow
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.NorthArrowStyle">
            <summary>
            An enumeration listing the different built in styles for the north arrow
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.NorthArrowStyle.Default">
            <summary>
            A four point triangle with a circle in the middle and the letter N
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.NorthArrowStyle.BlackArrow">
            <summary>
            A black arrow pointing north
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.NorthArrowStyle.CenterStar">
            <summary>
            Compas Rose style north arrow
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.NorthArrowStyle.TriangleN">
            <summary>
            A triangle around the letter N
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.NorthArrowStyle.TriangleHat">
            <summary>
            A triangle with a hat-like adornment
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.NorthArrowStyle.ArrowN">
            <summary>
            An arrow with the letter N
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutPropertyGrid">
            <summary>
            This is a control that allows users to easilly modify the various aspects of many different layout components
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutPropertyGrid.#ctor">
            <summary>
            Creates a new instance of the Layout Property Grid
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutPropertyGrid.LayoutControlSelectionChanged(System.Object,System.EventArgs)">
            <summary>
            If the selection changes this event is called
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutPropertyGrid.LayoutControl">
            <summary>
            Gets or sets the layout control associated with this property grid
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutRectangle">
            <summary>
            A control that draws a standard colored rectangle to the print layout
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutRectangle.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutRectangle.Draw(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Doesn't need to do anything now because the drawing code is in the background property of the base class
            </summary>
            <param name="g"></param>
            <param name="printing"></param>
        </member>
        <member name="T:DotSpatial.Controls.LayoutScaleBar">
            <summary>
            A scale bar control that can be linked to a map and provide a dynamic scale bar for the print layout
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutScaleBar.LayoutControlElementsChanged(System.Object,System.EventArgs)">
            <summary>
            Updates the scale bar if the map is deleted
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutScaleBar.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutScaleBar.Draw(System.Drawing.Graphics,System.Boolean)">
            <summary>
            This gets called to instruct the element to draw itself in the appropriate spot of the graphics object
            </summary>
            <param name="g">The graphics object to draw to</param>
            <param name="printing">Boolean, true if printing to an actual print document</param>
        </member>
        <member name="M:DotSpatial.Controls.LayoutScaleBar.GetConversionFactor(System.String)">
            <summary>
            Returns the conversion factor between the map units and inches
            </summary>
            <param name="mapWinUnits">A string represing the MapUnits</param>
            <returns>A double representing the conversion factor between MapUnits and inches. If something goes wrong we return 0</returns>
        </member>
        <member name="P:DotSpatial.Controls.LayoutScaleBar.Map">
            <summary>
            Gets or sets the Map control that the scale bar uses for measurement decisions
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutScaleBar.Font">
            <summary>
            Gets or sets the font used to draw this text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutScaleBar.Color">
            <summary>
            Gets or sets the color of the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutScaleBar.TextHint">
            <summary>
            Gets or sets the hinting used to draw the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutScaleBar.NumberOfBreaks">
            <summary>
            Gets or sets the number of breaks the scale bar should have
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutScaleBar.Unit">
            <summary>
            Gets or sets the unit to use for the scale bar
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutScaleBar.BreakBeforeZero">
            <summary>
            Gets or sets a property indicating is break should be present before the 0
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutScaleBar.UnitText">
            <summary>
            Gets or sets the unit text to display after the scale bar
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutScaleBar.LayoutControl">
            <summary>
            Gets or sets a layout control
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutText">
            <summary>
            Controls a rectangle
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutText.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutText.Draw(System.Drawing.Graphics,System.Boolean)">
            <summary>
            This gets called to instruct the element to draw itself in the appropriate spot of the graphics object
            </summary>
            <param name="g">The graphics object to draw to</param>
            <param name="printing">Boolean, true if printing to the file</param>
        </member>
        <member name="P:DotSpatial.Controls.LayoutText.Text">
            <summary>
            Gets or sets the text thats drawn in the graphics object
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutText.ContentAlignment">
            <summary>
            Gets or sets the content alignment
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutText.Font">
            <summary>
            Gets or sets the font used to draw this text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutText.Color">
            <summary>
            Gets or sets the color of the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutText.TextHint">
            <summary>
            Gets or sets the hinting used to draw the text
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LayoutZoomToolStrip">
            <summary>
            A Brian Marchioni original toolstrip... preloaded with content.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.LayoutZoomToolStrip.#ctor">
            <summary>
            Creates an instance of the toolstrip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LayoutZoomToolStrip.LayoutControl">
            <summary>
            The layout control associated with this toolstrip
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.DrawLegendItemArgs">
            <summary>
            DrawLegendItemArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.DrawLegendItemArgs.#ctor(System.Drawing.Graphics,DotSpatial.Symbology.ILegendItem,System.Drawing.Rectangle,System.Drawing.PointF)">
            <summary>
            Creates a new instance of DrawLegendItemArgs
            </summary>
            <param name="g">A Graphics surface to draw on</param>
            <param name="item">The legend item to draw</param>
            <param name="clipRectangle">The bounds that drawing should occur within</param>
            <param name="topLeft">The position of the top left corner where drawing should start.</param>
        </member>
        <member name="P:DotSpatial.Controls.DrawLegendItemArgs.Item">
            <summary>
            Gets the interface for the legend item being drawn
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.DrawLegendItemArgs.ClipRectangle">
            <summary>
            Gets the rectangle that limits where drawing should occur
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.DrawLegendItemArgs.TopLeft">
            <summary>
            Gets or sets the point that is the top left position where this item should start drawing, counting indentation.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.DrawLegendItemArgs.Graphics">
            <summary>
            Gets the graphics object for drawing to
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ILegend">
            <summary>
            The easiest way to implement this is to inherit a UserControl, and then
            implement the members specific to the legend.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ILegend.RefreshNodes">
            <summary>
            Given the current list of Maps or 3DMaps, it
            rebuilds the treeview nodes
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ILegend.AddMapFrame(DotSpatial.Symbology.IFrame)">
            <summary>
            Adds a map frame as a root node, and links an event handler to update
            when the mapframe triggers an ItemChanged event.
            </summary>
            <param name="mapFrame"></param>
        </member>
        <member name="M:DotSpatial.Controls.ILegend.RemoveMapFrame(DotSpatial.Symbology.IFrame,System.Boolean)">
            <summary>
            Removes the specified map frame if it is a root node.
            </summary>
            <param name="mapFrame"></param>
            <param name="preventRefresh">Boolean, if true, removing the map frame will not automatically force a refresh of the legend.</param>
        </member>
        <member name="E:DotSpatial.Controls.ILegend.OrderChanged">
            <summary>
            Occurs when the drag method is used to alter the order of layers or
            groups in the legend.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ILegend.RootNodes">
            <summary>
            Gets or sets the list of map frames being displayed by this legend.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ILegendHandler">
            <summary>
            The extended and complete set of events associated with the Legend.
            Implementing this avoids having to manually add handlers for every event.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.Legend_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Occurs when a drag-and-drop operation is completed.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A DragEventArgs with the drag parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.Legend_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the control is clicked by the mouse.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.Legend_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the control is double clicked by the mouse.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.Legend_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is pressed.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.Legend_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is moved over the control.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.Legend_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is released.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A MouseEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.Legend_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Occurs when the control is redrawn.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A PaintEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.LegendItemAdded(System.Object,System.EventHandler)">
            <summary>
            Occurs when one or more legend items is added to the list of LegendItems
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A PaintEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.LegendItemsCleared(System.Object,System.EventHandler)">
            <summary>
            Occurs when all the legend items are cleared.
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A PaintEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.LegendItemRemoved(System.Object,System.EventHandler)">
            <summary>
            Occurs when one of the legend items in the list of LegendItems is removed
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A PaintEventArgs with any parameters</param>
        </member>
        <member name="M:DotSpatial.Controls.ILegendHandler.LegendItemSelected(System.Object,System.EventHandler)">
            <summary>
            Occurs when one of the legend items in the list of LegendItems is selected
            </summary>
            <param name="sender">An instance of the calling object</param>
            <param name="e">A PaintEventArgs with any parameters</param>
        </member>
        <member name="T:DotSpatial.Controls.Legend">
            <summary>
            Legend
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Legend.#ctor">
            <summary>
            Creates a new instance of Legend
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Legend.ClearSelection">
            <summary>
            Un-selectes any selected items in the legend
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Legend.AddMapFrame(DotSpatial.Symbology.IFrame)">
            <summary>
            Adds a map frame as a root node, and links an event handler to update
            when the mapframe triggers an ItemChanged event.
            </summary>
            <param name="mapFrame"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnIncludeMapFrame(DotSpatial.Symbology.IFrame)">
            <summary>
            Occurs when linking the map frame
            </summary>
            <param name="mapFrame"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnExcludeMapFrame(DotSpatial.Symbology.IFrame)">
            <summary>
            Occurs when we need to no longer listen to the map frame events
            </summary>
            <param name="mapFrame"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.RemoveMapFrame(DotSpatial.Symbology.IFrame,System.Boolean)">
            <summary>
            Removes the specified map frame if it is a root node.
            </summary>
            <param name="mapFrame"></param>
            <param name="preventRefresh">Boolean, if true, removing the map frame will not automatically force a refresh of the legend.</param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.RefreshNodes">
            <summary>
            Given the current list of Maps or 3DMaps, it
            rebuilds the treeview nodes
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnInitialize(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Extends initialize to draw "non-selected" elements.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnDraw(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides the drawing method to account for drawing lines
            when an item is being dragged to a new position.
            </summary>
            <param name="e">A PaintEventArgs</param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnInitializeItem(DotSpatial.Controls.DrawLegendItemArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnHorizontalScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Also hides the edit box so that it doesn't seem displaced from the item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnVerticalScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Also hides the edit box so that it doesn't seme displaced from the item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the case where the mouse down occurs.
            </summary>
            <param name="e">A MouseEventArgs</param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Checks the Mouse Up event to see if it occurs inside a legend item.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnItemMouseUp(DotSpatial.Controls.ItemMouseEventArgs)">
            <summary>
            Checks for checkbox changes and fires the ItemMouseUp event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs the default handling for mouse movememnt, and decides
            whether or not to fire an ItemMouseMove event.
            </summary>
            <param name="e">A MouseEventArgs</param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnItemMouseDown(DotSpatial.Controls.ItemMouseEventArgs)">
            <summary>
            The coordinates are in legend coordinates, but a LegendBox is provided to define the
            coordinates of the specified object.
            </summary>
            <param name="e">An ItemMouseEventArgs</param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnItemMouseMove(DotSpatial.Controls.ItemMouseEventArgs)">
            <summary>
            Fires the ItemMouseMove Event, which handles the mouse moving over one of the legend items.
            </summary>
            <param name="e">An ItemMouseEventArgs</param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.OnOrderChanged">
            <summary>
            Fires the OrderChanged Event
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Legend.AddMenuItem(System.Windows.Forms.Menu.MenuItemCollection,DotSpatial.Symbology.SymbologyMenuItem)">
            <summary>
            Recursive add method to handle nesting of menu items.
            </summary>
            <param name="parent"></param>
            <param name="mi"></param>
        </member>
        <member name="M:DotSpatial.Controls.Legend.MapFrameItemChanged(System.Object,System.EventArgs)">
            <summary>
             This isn't the best way to catch this.  only items in view should
             trigger a refresh.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:DotSpatial.Controls.Legend.ItemMouseDown">
            <summary>
            Occurs when a mousedown is initiated within an existing legend item
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Legend.ExpandBoxMouseDown">
            <summary>
            Occurs when a mouse down is initiated within an expand box.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Legend.CheckBoxMouseUp">
            <summary>
            Occurs when a mouse up is initiated within a checkbox.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Legend.ItemMouseUp">
            <summary>
            Occurs when a mouse up occurs insize of a specific item.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Legend.ItemMouseMove">
            <summary>
            Occurs when the mouse is moving over an item.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Legend.OrderChanged">
            <summary>
            Occurs when the layer
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Legend.SharedEventHandlers">
            <summary>
            Gets or sets the SharedEventHandler that is used for working with shared layer events.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Legend.RootNodes">
            <summary>
            Gets or sets the list of map frames being displayed by this legend.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Legend.Indentation">
            <summary>
            Gets or sets an integer representing how far child nodes are indented when compared to the parent nodes.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Legend.ItemHeight">
            <summary>
            This calculates a height for each item based on the height of the font.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Legend.SelectionFontColor">
            <summary>
            Gets or sets the selection font color
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Legend.SelectionHighlight">
            <summary>
            Specifies the principal color that a selected text box is highlighted with.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Legend.ProgressHandler">
            <summary>
            Gets or sets the progress handler for any progress messages like re-drawing images for rasters
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Legend.BottomBox">
            <summary>
            Retrieves the bottom box in the legend
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ItemMouseEventArgs">
            <summary>
            ItemMouseEventArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ItemMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,DotSpatial.Controls.LegendBox)">
            <summary>
            Creates a new instance of an ItemMouseEventArgs
            </summary>
            <param name="inButton">The Mouse Buttons</param>
            <param name="inClicks">The number of clicks</param>
            <param name="inX">The X coordinate</param>
            <param name="inY">The Y coordinate</param>
            <param name="inDelta">The delta of the mouse wheel</param>
            <param name="inItemBox">A LegendBox for comparision</param>
        </member>
        <member name="M:DotSpatial.Controls.ItemMouseEventArgs.#ctor(System.Windows.Forms.MouseEventArgs,DotSpatial.Controls.LegendBox)">
            <summary>
            Creates a new instance of ItemMouseEventArgs from an existing MouseEventArgs.
            </summary>
            <param name="args">The existing arguments</param>
            <param name="inItemBox">A LegendBox for comparison</param>
        </member>
        <member name="P:DotSpatial.Controls.ItemMouseEventArgs.ItemBox">
            <summary>
            Gets the item that received the mouse down, plus the various rectangular extents encoded in the various boxes.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.LegendBox">
            <summary>
            A Legend Box encapsulates the basic drawing information for an item.
            This will not capture information about sub-items.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LegendBox.Bounds">
            <summary>
            Gets or sets the bounds for this LegendBox
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LegendBox.Item">
            <summary>
            Gets or sets the actual item that this bounds is associated with
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LegendBox.CheckBox">
            <summary>
            If this item is in checkbox mode, then this is the physical location of the checkbox
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LegendBox.ExpandBox">
            <summary>
            IF this item is a groupable item, this is the region for the expanding box for the item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LegendBox.Textbox">
            <summary>
            Gets or sets the rectangle that corresponds with text.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LegendBox.SymbolBox">
            <summary>
            gets or sets the symbol box
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.LegendBox.Indent">
            <summary>
            Gets or sets the integer number of indentations.  This should be used
            in coordination with whatever the indentation amount is for the specific legend.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ListBoxDialog">
            <summary>
            DropDownDialog
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ListBoxDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ListBoxDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ListBoxDialog.#ctor">
            <summary>
            Creates a new instance of DropDownDialog
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ListBoxDialog.Clear">
            <summary>
            Clears the items from the dialog box
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ListBoxDialog.Add(System.Object[])">
            <summary>
            Adds the array of objects to the dialog box
            </summary>
            <param name="items">The items to add</param>
        </member>
        <member name="M:DotSpatial.Controls.ListBoxDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:DotSpatial.Controls.ListBoxDialog.SelectedItem">
            <summary>
            Gets the currently selected item in this list dialog box
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ChunkEventArgs">
            <summary>
            ChunkEventArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ChunkEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of ChunkEventArgs
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ChunkEventArgs.CurrentChunk">
            <summary>
            Gets the current chunk for this event
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ChunkEventArgs.NumChunks">
            <summary>
            Gets the number of chunks
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMap">
            <summary>
            This map draws geographic coordinates directly to pixel coordinates
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMap.ActivateMapFunction(DotSpatial.Controls.IMapFunction)">
            <summary>
            If the specified function is already in the list of functions, this will properly test the yield style of various
            map functions that are currently on and then activate the function.  If this function is not in the list, then
            it will add it to the list.  If you need to control the position, then insert the function before using this
            method to activate.  Be warned that calling "Activate" directly on your function will activate your function
            but not disable any other functions.  You can set "Map.FunctionMode = FunctionModes.None" first, and then
            specifically activate the function that you want.
            </summary>
            <param name="function">The MapFunction to activate, or add.</param>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddLayers">
            <summary>
            Adds a new layer to the map by using an open file dialog
            </summary>
            <returns>An IMapLayer that represents the layer in the map.</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddLayer(System.String)">
            <summary>
            Creates a new layer from the specified fileName and adds it to the map.
            </summary>
            <param name="fileName">The string fileName to add to the map</param>
            <returns>The newly created IMapLayer</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddLayer">
            <summary>
            Uses the file dialog to allow selection of a fileName for opening the
            new layer, but does not allow multiple files to be added at once.
            </summary>
            <returns>The newly opened IMapLayer</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddLabels(DotSpatial.Symbology.IFeatureLayer,System.String,System.String,DotSpatial.Symbology.ILabelSymbolizer,System.String)">
            <summary>
            This will add a new label category that will only apply to the specified filter expression.  This will not remove any existing categories.
            </summary>
            <param name="featureLayer">The feature layer that the labels should be applied to</param>
            <param name="expression">The string expression where field names are in square brackets</param>
            <param name="filterExpression">The string filter expression that controls which features are labeled.  Field names are in square brackets, strings in single quotes.</param>
            <param name="symbolizer">The label symbolizer that controls the basic appearance of the labels in this category.</param>
            <param name="name">The name of the category.</param>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddLabels(DotSpatial.Symbology.IFeatureLayer,System.String,System.String,DotSpatial.Symbology.ILabelSymbolizer,System.Double)">
            <summary>
            This will add a new label category that will only apply to the specified filter expression.  This will not remove any existing categories.
            </summary>
            <param name="featureLayer">The feature layer that the labels should be applied to</param>
            <param name="expression">The string expression where field names are in square brackets</param>
            <param name="filterExpression">The string filter expression that controls which features are labeled.  Field names are in square brackets, strings in single quotes.</param>
            <param name="symbolizer">The label symbolizer that controls the basic appearance of the labels in this category.</param>
            <param name="width">A geographic width, so that if the map is zoomed to a geographic width smaller than this value, labels should appear.</param>
        </member>
        <member name="M:DotSpatial.Controls.IMap.GetImageLayers">
            <summary>
            Gets the subset of layers that are specifically raster layers, allowing
            you to control their symbology.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.GetRasterLayers">
            <summary>
            Gets the subset of layers that are specifically raster layers, allowing
            you to control their symbology.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.GetLineLayers">
            <summary>
            Gets a list of just the line layers (and not the general layers)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.GetPolygonLayers">
            <summary>
            Gets a list of just the polygon layers (and not the general layers)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.GetPointLayers">
            <summary>
            Gets a list of just the point layers (and not the general layers)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.GetFeatureLayers">
            <summary>
            Gets a list of just the feature layers regardless of whether they are lines, points, or polygons
            </summary>
            <returns>An array of IMapFeatureLayers</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddRasterLayers">
            <summary>
            Allows a multi-select file dialog to add raster layers, applying a
            filter so that only supported raster formats will appear.
            </summary>
            <returns>A list of the IMapRasterLayers that were opened.</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddRasterLayer">
            <summary>
            Allows an open file dialog without multi-select enabled to add a single
            raster to the map as a layer, and returns the added layer.
            </summary>
            <returns>The IMapRasterLayer that was added</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddFeatureLayers">
            <summary>
            Allows a mult-select open file dialog to specify several fileNames to add.
            Only files with supported vector extensions will be shown.
            </summary>
            <returns>The list of added MapFeatureLayers</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddFeatureLayer">
            <summary>
            Allows an open file dialog without multi-select enabled to add a single
            raster tot he map as a layer, and returns the added layer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddImageLayers">
            <summary>
            Allows a mult-select open file dialog to specify several fileNames to add.
            Only files with supported image extensions will be shown.
            </summary>
            <returns>The list of added MapImageLayers</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.AddImageLayer">
            <summary>
            Allows an open dialog without multi-select to specify a single fileName
            to be added to the map as a new layer and returns the newly added layer.
            </summary>
            <returns>The layer that was added to the map.</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.GetMapFunction(System.String)">
            <summary>
            Gets the MapFunction based on the string name
            </summary>
            <param name="name">The string name to find</param>
            <returns>The MapFunction with the specified name</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMap.Refresh">
            <summary>
            This causes all of the datalayers to re-draw themselves to the buffer, rather than just drawing
            the buffer itself like what happens during "Invalidate"
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMap.ResetBuffer">
            <summary>
            This can be called any time, and is currently being used to capture
            the end of a resize event when the actual data should be updated.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMap.SaveLayer">
             <summary>
            
             </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMap.ZoomIn">
            <summary>
            Zooms in one notch, so that the scale becomes larger and the features become larger.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMap.ZoomOut">
            <summary>
            Zooms out one notch so that the scale becomes smaller and the features become smaller.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMap.ZoomToNext">
            <summary>
            Zooms to the next extent of the map
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMap.ZoomToPrevious">
            <summary>
            Zooms to the previous extent of the map
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.IMap.LayerAdded">
            <summary>
            Occurs after a layer has been added to the mapframe, or any of the child groups of that mapframe.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.IMap.FinishedRefresh">
            <summary>
            Occurs after the map is refreshed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.IMap.Resized">
            <summary>
            Occurs after the map is resized
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMap.CollectAfterDraw">
             <summary>
            
             </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMap.Cursor">
            <summary>
            Gets or sets the Cursor.  This will be changed as the cursor mode changes.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMap.MapFunctions">
            <summary>
            Gets or sets the dictionary of tools built into this project
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMap.CollisionDetection">
            <summary>
            If this is true, then point layers in the map will only draw points that are
            more than 50% revealed.  This should increase drawing speed for layers that have
            a large number of points.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMap.MapFrame">
            <summary>
            Returns a MapFrame
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMap.Layers">
            <summary>
            The layers for this map
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMap.ProgressHandler">
            <summary>
            Gets or sets the progress handler for this component.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMap.Projection">
            <summary>
            Gets or sets the projection.  This should reflect the projection of the first data layer loaded.
            Loading subsequent, but non-matching projections should throw an alert, and allow reprojection.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Map">
            <summary>
            The Map Control for 2D applications.
            </summary>
            <summary>
            A Map Component that can be dropped on a form
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.#ctor">
            <summary>
            Creates a new instance of a map component that can be dropped on a form.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnLoad(System.EventArgs)">
            <summary>
            Handles the resizing in the case where the map uses docking, and therefore
            needs to be updated whenever the form changes size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.Map.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.Map.AddLabels(DotSpatial.Symbology.IFeatureLayer,System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            This activates the labels for the specified feature layer that will be the specified expression
            where field names are in square brackets like "[Name]: [Value]".  This will label all the features,
            and remove any previous labeling.
            </summary>
            <param name="featureLayer">The FeatureLayer to apply the labels to.</param>
            <param name="expression">The string label expression to use where field names are in square brackets like
            [Name]</param>
            <param name="font">The font to use for these labels</param>
            <param name="fontColor">The color for the labels</param>
        </member>
        <member name="M:DotSpatial.Controls.Map.ClearLabels(DotSpatial.Symbology.IFeatureLayer)">
            <summary>
            Removes any existing label categories
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddLabels(DotSpatial.Symbology.IFeatureLayer,System.String,System.String,DotSpatial.Symbology.ILabelSymbolizer,System.String)">
            <summary>
            This will add a new label category that will only apply to the specified filter expression.
            This will not remove any existing categories.
            </summary>
            <param name="featureLayer">The feature layer that the labels should be applied to</param>
            <param name="expression">The string expression where field names are in square brackets</param>
            <param name="filterExpression">The string filter expression that controls which features are labeled.
            Field names are in square brackets, strings in single quotes.</param>
            <param name="symbolizer">The label symbolizer that controls the basic appearance of the labels in this
            category.</param>
            <param name="name">The name of the category.</param>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddLabels(DotSpatial.Symbology.IFeatureLayer,System.String,System.String,DotSpatial.Symbology.ILabelSymbolizer,System.Double)">
            <summary>
            This will add a new label category that will only apply to the specified filter expression.  This will
            not remove any existing categories.
            </summary>
            <param name="featureLayer">The feature layer that the labels should be applied to</param>
            <param name="expression">The string expression where field names are in square brackets</param>
            <param name="filterExpression">The string filter expression that controls which features are labeled.
            Field names are in square brackets, strings in single quotes.</param>
            <param name="symbolizer">The label symbolizer that controls the basic appearance of the labels in this
             category.</param>
            <param name="width">A geographic width, so that if the map is zoomed to a geographic width smaller than
            this value, labels should appear.</param>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetImageLayers">
            <summary>
            Gets the subset of layers that are specifically raster layers, allowing
            you to control their symbology.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetRasterLayers">
            <summary>
            Gets the subset of layers that are specifically raster layers, allowing
            you to control their symbology.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetLineLayers">
            <summary>
            Gets a list of just the line layers (and not the general layers)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetPolygonLayers">
            <summary>
            Gets a list of just the line layers (and not the general layers)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetPointLayers">
            <summary>
            Gets a list of just the line layers (and not the general layers)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetFeatureLayers">
            <summary>
            Gets a list of just the feature layers regardless of whether they are lines, points, or polygons
            </summary>
            <returns>An array of IMapFeatureLayers</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetMapFunction(System.String)">
            <summary>
            Gets the MapFunction based on the string name
            </summary>
            <param name="name">The string name to find</param>
            <returns>The MapFunction with the specified name</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.ClearSelection(DotSpatial.Topology.IEnvelope@)">
            <summary>
            Removes any members from existing in the selected state
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.Select(DotSpatial.Topology.IEnvelope,DotSpatial.Topology.IEnvelope,DotSpatial.Symbology.SelectionMode,DotSpatial.Topology.IEnvelope@)">
            <summary>
            Adds any members found in the specified region to the selected state as long as SelectionEnabled is set to true.
            </summary>
            <param name="tolerant">The geographic region where selection occurs that is tolerant for point or linestrings.</param>
            <param name="strict">The tight envelope to use for polygons.</param>
            <param name="mode">The selection mode.</param>
            <param name="affectedArea">The envelope affected area.</param>
            <returns>Boolean, true if any members were added to the selection.</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.InvertSelection(DotSpatial.Topology.IEnvelope,DotSpatial.Topology.IEnvelope,DotSpatial.Symbology.SelectionMode,DotSpatial.Topology.IEnvelope@)">
            <summary>
            Inverts the selected state of any members in the specified region.
            </summary>
            <param name="tolerant">The geographic region where selection occurs that is tolerant for point or linestrings.</param>
            <param name="strict">The tight envelope to use for polygons.</param>
            <param name="mode">The selection mode determining how to test for intersection.</param>
            <param name="affectedArea">The geographic region encapsulating the changed members.</param>
            <returns>boolean, true if members were changed by the selection process.</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.UnSelect(DotSpatial.Topology.IEnvelope,DotSpatial.Topology.IEnvelope,DotSpatial.Symbology.SelectionMode,DotSpatial.Topology.IEnvelope@)">
            <summary>
            Adds any members found in the specified region to the selected state as long as SelectionEnabled is set to true.
            </summary>
            <param name="tolerant">The geographic region where selection occurs that is tolerant for point or linestrings.</param>
            <param name="strict">The tight envelope to use for polygons.</param>
            <param name="mode">The selection mode.</param>
            <param name="affectedArea">The envelope affected area.</param>
            <returns>Boolean, true if any members were added to the selection.</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.OpenLayer">
            <summary>
            Opens a new layer and automatically adds it to the map.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddLayers">
            <summary>
            Allows the user to add a new layer to the map using an open file dialog to choose a layer file.
            Multi-select is an option, so this return a list with all the layers.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddLayer(System.String)">
            <summary>
            Adds the fileName as a new layer to the map, returning the new layer.
            </summary>
            <param name="fileName">The string fileName of the layer to add</param>
            <returns>The IMapLayer added to the file.</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.DotSpatial#Controls#IBasicMap#AddLayer">
            <summary>
            This is so that if you have a basic map interface you can still prompt
            to add a layer, you just won't get an IMapLayer back.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddLayer">
            <summary>
            Uses the file dialog to allow selection of a fileName for opening the
            new layer, but does not allow multiple files to be added at once.
            </summary>
            <returns>The newly opened IMapLayer</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddRasterLayers">
            <summary>
            Allows a multi-select file dialog to add raster layers, applying a
            filter so that only supported raster formats will appear.
            </summary>
            <returns>A list of the IMapRasterLayers that were opened.</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddRasterLayer">
            <summary>
            Allows an open file dialog without multi-select enabled to add a single
            raster to the map as a layer, and returns the added layer.
            </summary>
            <returns>The IMapRasterLayer that was added</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddFeatureLayers">
            <summary>
            Allows a mult-select open file dialog to specify several fileNames to add.
            Only files with supported vector extensions will be shown.
            </summary>
            <returns>The list of added MapFeatureLayers</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddFeatureLayer">
            <summary>
            Allows an open file dialog without multi-select enabled to add a single
            raster tot he map as a layer, and returns the added layer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddImageLayers">
            <summary>
            Allows a mult-select open file dialog to specify several fileNames to add.
            Only files with supported image extensions will be shown.
            </summary>
            <returns>The list of added MapImageLayers</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.AddImageLayer">
            <summary>
            Allows an open dialog without multi-select to specify a single fileName
            to be added to the map as a new layer and returns the newly added layer.
            </summary>
            <returns>The layer that was added to the map.</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.Print(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Instead of using the usual buffers, this bypasses any buffering and instructs the layers
            to draw directly to the specified target rectangle on the graphics object.  This is useful
            for doing vector drawing on much larger pages.  The result will be centered in the
            specified target rectangle bounds.
            </summary>
            <param name="device">The graphics device to print to</param>
            <param name="targetRectangle">the rectangle where the map content should be drawn.</param>
        </member>
        <member name="M:DotSpatial.Controls.Map.Print(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Data.Extent)">
            <summary>
            Instead of using the usual buffers, this bypasses any buffering and instructs the layers
            to draw directly to the specified target rectangle on the graphics object.  This is useful
            for doing vector drawing on much larger pages.  The result will be centered in the
            specified target rectangle bounds.
            </summary>
            <param name="device">The graphics device to print to</param>
            <param name="targetRectangle">the rectangle where the map content should be drawn.</param>
            <param name="targetEnvelope">the extents to print in the target rectangle</param>
        </member>
        <member name="M:DotSpatial.Controls.Map.ResetBuffer">
            <summary>
            This can be called any time, and is currently being used to capture
            the end of a resize event when the actual data should be updated.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.SaveLayer">
            <summary>
            Saves the dataset belonging to the layer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.ZoomToMaxExtent">
            <summary>
            Instructs the map to change the perspective to include the entire drawing content, and
            in the case of 3D maps, changes the perspective to look from directly overhead.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.ClearLayers">
            <summary>
            Instructs the map to clear the layers.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.ActivateMapFunction(DotSpatial.Controls.IMapFunction)">
            <summary>
            If the specified function is already in the list of functions, this will properly test the yield style of various
            map functions that are currently on and then activate the function.  If this function is not in the list, then
            it will add it to the list.  If you need to control the position, then insert the function before using this
            method to activate.  Be warned that calling "Activate" directly on your function will activate your function
            but not disable any other functions.  You can set "Map.FunctionMode = FunctionModes.None" first, and then
            specifically activate the function that you want.
            </summary>
            <param name="function">The MapFunction to activate, or add.</param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnExcludeMapFrame(DotSpatial.Controls.IMapFrame)">
            <summary>
            Handles removing event handlers for the map frame
            </summary>
            <param name="mapFrame"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnIncludeMapFrame(DotSpatial.Controls.IMapFrame)">
            <summary>
            Handles adding new event handlers to the map frame
            </summary>
            <param name="mapFrame"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnLayerAdded(System.Object,DotSpatial.Symbology.LayerEventArgs)">
            <summary>
            Fires the LayerAdded event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnSelectionChanged">
            <summary>
            Occurs after the selection is updated on all the layers
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetLayers">
            <summary>
            returns a functional list of the ILayer members.  This list will be
            separate from the actual list stored, but contains a shallow copy
            of the members, so the layers themselves can be accessed directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetAllLayers">
            <summary>
            Gets all layers of the map including layers which are nested
            within groups. The group objects themselves are not included in this list,
            but all FeatureLayers, RasterLayers, ImageLayers and other layers are included.
            </summary>
            <returns>The list of the layers</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.GetAllGroups">
            <summary>
            Gets all map groups in the map including the nested groups
            </summary>
            <returns>the list of the groups</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Occurs when this control tries to paint the background.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Perform custom drawing
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.SnapShot">
            <summary>
            Captures an image of whatever the contents of the back buffer would be at the size of the screen.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.SnapShot(System.Int32)">
            <summary>
            Creates a snapshot that is scaled to fit to a bitmap of the specified width.
            </summary>
            <param name="width">The width of the desired bitmap</param>
            <returns>A bitmap with the specified width</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires the DoMouseDoubleClick method on the ActiveTools
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires the OnMouseDown event on the Active Tools
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires the OnMouseUp event on the Active Tools
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires the OnMouseMove event on the Active Tools
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Fires the OnMouseWheel event for the active tools
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.Refresh">
            <summary>
            This causes all of the data layers to re-draw themselves to the buffer, rather than just drawing
            the buffer itself like what happens during "Invalidate"
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.RefreshMap(System.Drawing.Rectangle)">
            <summary>
            Instructs the map to update the specified clipRectangle by drawing it to the back buffer.
            </summary>
            <param name="clipRectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnFinishedRefresh(System.EventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.PixelToProj(System.Drawing.Point)">
            <summary>
            Converts a single point location into an equivalent geographic coordinate
            </summary>
            <param name="position">The client coordinate relative to the map control</param>
            <returns>The geographic ICoordinate interface</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.PixelToProj(System.Drawing.Rectangle)">
            <summary>
            Converts a rectangle in pixel coordinates relative to the map control into
            a geographic envelope.
            </summary>
            <param name="rect">The rectangle to convert</param>
            <returns>An IEnvelope interface</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.ProjToPixel(DotSpatial.Topology.Coordinate)">
            <summary>
            Converts a single geographic location into the equivalent point on the
            screen relative to the top left corner of the map.
            </summary>
            <param name="location">The geographic position to transform</param>
            <returns>A Point with the new location.</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.ProjToPixel(DotSpatial.Data.Extent)">
            <summary>
            Converts a single geographic envelope into an equivalent Rectangle
            as it would be drawn on the screen.
            </summary>
            <param name="env">The geographic IEnvelope</param>
            <returns>A Rectangle</returns>
        </member>
        <member name="M:DotSpatial.Controls.Map.ZoomIn">
            <summary>
            Zooms in one notch, so that the scale becomes larger and the features become larger.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.ZoomOut">
            <summary>
            Zooms out one notch so that the scale becomes smaller and the features become smaller.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.ZoomToNext">
            <summary>
            Zooms to the next extent
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.ZoomToPrevious">
            <summary>
            Zooms to the previous extent
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnProjectionChanged">
            <summary>
            Fires the ProjectionChanged event
            and also reprojects all map layers
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnViewExtentsChanged(System.Object,DotSpatial.Data.ExtentArgs)">
            <summary>
            Fires the ViewExtentsChanged event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnResize(System.EventArgs)">
            <summary>
            Handles resize of the form.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Map.OnResized">
            <summary>
            Occurs after this object has been resized.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.Map.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Map.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Controls.Map.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Map.FinishedRefresh">
            <summary>
            Occurs after the map refreshes the image
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Map.Resized">
            <summary>
            Occurs after a resize event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Map.GeoMouseMove">
            <summary>
            Public event advertising the mouse movement
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Map.SelectionChanged">
            <summary>
            Occurs after the selection has changed for all the layers
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Map.LayerAdded">
            <summary>
            Occurs after a layer has been added to the mapframe, or any of the child groups of that mapframe.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Map.ViewExtentsChanged">
            <summary>
            Fires after the view extents have been altered and the map has redrawn to the new extents.
            This is an echo of the MapFrame.ViewExtentsChanged, so you only want one handler.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.Map.ProjectionChanged">
            <summary>
            Occurs after the projection of the map has been changed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.Cursor">
            <summary>
            Cursor hiding from designer
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.SelectionEnabled">
            <summary>
            Gets or sets a boolean indicating whether or not the sel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.CollectAfterDraw">
            <summary>
            Gets or sets a boolean that indicates whether the Garbage collector should collect after drawing.
            This can be disabled for fast-action panning, but should normally be enabled.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.MapFunctions">
            <summary>
            Gets or sets the dictionary of tools built into this project
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.FunctionMode">
            <summary>
            Gets or sets the current tool mode.  This rapidly enables or disables specific tools to give
            a combination of functionality.  Selecting None will disable all the tools, which can be
            enabled manually by enabling the specific tool in the GeoTools dictionary.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.IsBusy">
            <summary>
            Gets or sets a boolean that indicates whether a map-function is currently interacting with the map.
            If this is true, then any tool-tip like popups or other mechanisms that require lots of re-drawing
            should suspend themselves to prevent conflict.  Setting this actually increments an internal integer,
            so when that integer is 0, the map is "Not" busy, but multiple busy processess can work independantly.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.BufferedImage">
            <summary>
            Gets or sets the back buffer.  The back buffer should be in Format32bbpArgb bitmap.
            If it is not, then the image on the back buffer will be copied from the supplied image.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.CollisionDetection">
            <summary>
            If this is true, then point layers in the map will only draw points that are
            more than 50% revealed.  This should increase drawing speed for layers that have
            a large number of points.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.Extent">
            <summary>
            Gets the geographic bounds of all of the different data layers currently visible on the map.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.ViewExtents">
            <summary>
            Gets or sets the geographic extents to show in the view.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.ExtendBuffer">
            <summary>
            Gets or sets a boolean that indicates whether or not
            the drawing layers should cache off-screen data to
            the buffer.  Panning will be much more elegant,
            but zooming, selecting and resizing will take a
            performance penalty.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.MapFrame">
            <summary>
            Gets or sets the MapFrame that should be displayed in this map.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.Layers">
            <summary>
            Gets or sets the collection of layers
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.Projection">
            <summary>
            Gets or sets the projection.  This should reflect the projection of the first data layer loaded.
            Loading subsequent, but non-matching projections should throw an alert, and allow reprojection.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.ProjectionEsriString">
            <summary>
            Gets or sets the Projection Esri string of the map. This property is used for serializing
            the projection string to the project file.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.ProjectionModeReproject">
            <summary>
            Gets or sets a PromptMode enumeration that controls how users are prompted before adding layers
            that have a coordinate system that is different from the map.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.ProjectionModeDefine">
            <summary>
            Gets or sets a PromptMode enumeration that controls how users are prompted before adding layers
            that have a coordinate system that is different from the map.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.Legend">
            <summary>
            Gets or sets the legend to use when showing the layers from this map
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.ProgressHandler">
            <summary>
            Gets or sets the progress handler for this component.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Map.RedrawLayersWhileResizing">
            <summary>
            Gets or sets a value indicating whether layers should draw during the actual resize itself.  The
            normal behavior is to draw the existing image buffer in the new size and position which is much
            faster for large datasets, but is not as visually appealing if you only work with small datasets.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ActionMode">
            <summary>
            Describe different behaviors that map functions can have when working with
            respect to other map-functions.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ActionMode.Prompt">
            <summary>
            Prompt the user to decide if Layers should be reprojected
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ActionMode.Always">
            <summary>
            Always reproject layers to match the MapFrame projection
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ActionMode.Never">
            <summary>
            Never reproject layers to match the MapFrame projection
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ActionMode.PromptOnce">
            <summary>
            Prompt once and accept that answer for all future layers added to the map frame.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFrameExt">
            <summary>
            Extension methods for accessing the layers (including nested layers) and groups (including nested groups) of the 
            map frame
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrameExt.GetAllLayers(DotSpatial.Controls.IMapFrame)">
            <summary>
            Gets all layers of the map frame including layers which are nested
            within groups. The group objects themselves are not included in this list,
            but all FeatureLayers, RasterLayers, ImageLayers and other layers are included.
            </summary>
            <returns>The list of the layers</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapFrameExt.GetAllGroups(DotSpatial.Controls.IMapFrame)">
            <summary>
            Gets all map groups in the map including the nested groups
            </summary>
            <returns>the list of the groups</returns>
        </member>
        <member name="T:DotSpatial.Controls.MapLayerEnumerator">
            <summary>
            Transforms an IMapLayer enumerator into an ILayer Enumerator
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerEnumerator.#ctor(System.Collections.Generic.IEnumerator{DotSpatial.Controls.IMapLayer})">
            <summary>
            Creates a new instance of the MapLayerEnumerator
            </summary>
            <param name="subEnumerator"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerEnumerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapLayerEnumerator.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapLayerEnumerator.Reset">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapLayerEnumerator.Current">
            <inheritdoc />
        </member>
        <member name="T:DotSpatial.Controls.MessageStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.AppManager_Home">
            <summary>
              Looks up a localized string similar to Home.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ArchiveFile">
            <summary>
              Looks up a localized string similar to Archive File.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ArgumentCannotBeNegative_S">
            <summary>
              Looks up a localized string similar to The argument %S cannot be negative..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ArgumentCouldNotBeCast_S1_S2">
            <summary>
              Looks up a localized string similar to The argument %S1 could not be successfully cast into %S2..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ArgumentNull_S">
            <summary>
              Looks up a localized string similar to The argument %S was null.  Try testing for the null case before calling this method..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ArgumentOfWrongType_S1_S2">
            <summary>
              Looks up a localized string similar to The argument %S1 was incorrect for %S2..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ArgumentOutOfRangeException_S">
            <summary>
              Looks up a localized string similar to The argument %S was outside the range of accepted values..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.bgdDataTypeError">
            <summary>
              Looks up a localized string similar to The file type was supposedly bgd, but there was a problem with reading the data type..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.BinarySupportsOneBand">
            <summary>
              Looks up a localized string similar to Binary rasters only support one band, which is the raster itself..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ByteArrayTooSmall">
            <summary>
              Looks up a localized string similar to The specified argument byteArray was too small to contain the requested information.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CalculatingStatistics">
            <summary>
              Looks up a localized string similar to Calculating Statistics.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CannotCopyToSelf_S">
            <summary>
              Looks up a localized string similar to The fileName %S cannot be copied to itself..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ColorBreakCaptionHelp">
            <summary>
              Looks up a localized string similar to Enter the text you want to display in the legend..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ColorBreakColorHelp">
            <summary>
              Looks up a localized string similar to Left click after selecting to edit, or right click to assign a color range..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ColorBreakNotNumeric">
            <summary>
              Looks up a localized string similar to Raster values should be numeric and be drawn with a range like [low] - [high].
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ColorBreakValue">
            <summary>
              Looks up a localized string similar to The value or range of values shown as [low] - [high].
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Confirm">
            <summary>
              Looks up a localized string similar to Confirm.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CoordinateMismatchException">
            <summary>
              Looks up a localized string similar to The number of ordinates did not match between the dimensions, so the hyperdistance cannot be accurately calculated..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CopyingValues">
            <summary>
              Looks up a localized string similar to Copying Values.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CopyingValues_S1_S2">
            <summary>
              Looks up a localized string similar to Copying values from %S1 to %S2.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CopyingValuesFrom_S">
            <summary>
              Looks up a localized string similar to Copying Values from %S.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CopyingValuesFrom_S1_To_S2">
            <summary>
              Looks up a localized string similar to Copying Values from %S1 to %S2.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CouldNotExecuteQuery">
            <summary>
              Looks up a localized string similar to Could not execute the query..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CouldNotFindReplace">
            <summary>
              Looks up a localized string similar to Could not find or replace items..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CreatingShadedRelief">
            <summary>
              Looks up a localized string similar to Creating Shaded Relief.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CreatingTexture">
            <summary>
              Looks up a localized string similar to Creating Texture.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CurrentElementNotSpecified">
            <summary>
              Looks up a localized string similar to The current element was not defined.  Before attempting to read the element, first assign the value of the current XML Element to read..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.CustomOnly">
            <summary>
              Looks up a localized string similar to In order to specify a custom filter expression, the custom mode must be selected first..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.DataExtensions">
            <summary>
              Looks up a localized string similar to Data Extensions.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.DataTypeIncorrect_S">
            <summary>
              Looks up a localized string similar to The parameter %S was not the correct datatype..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.DecimalCount">
            <summary>
              Looks up a localized string similar to The Number of digits to show after the decimal..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.DecimalCountInvalid">
            <summary>
              Looks up a localized string similar to This should be an integer from 0 to 15..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.DefaultToolproviderSettingsDialogText">
            <summary>
              Looks up a localized string similar to There are no setting for the default Tool Provider. It scans the same folders the ToolManager scans for Tool Providers.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.DefaultToolproviderSettingsDialogTitle">
            <summary>
              Looks up a localized string similar to Default Tool Provider Settings.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.DoubleError">
            <summary>
              Looks up a localized string similar to The value entered could not be correctly parsed into a valid double precision floating point value..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.DoubleHelp">
            <summary>
              Looks up a localized string similar to Enter a double precision floating point value..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.EndOfFile">
            <summary>
              Looks up a localized string similar to Cannot read past the end of the file..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.EnterFindString">
            <summary>
              Looks up a localized string similar to Enter Find String.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Expression">
            <summary>
              Looks up a localized string similar to Expression.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Extensions">
            <summary>
              Looks up a localized string similar to Extensions.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FactGreaterThanZero">
            <summary>
              Looks up a localized string similar to Factorial value should be grater than 0.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeaturesAll">
            <summary>
              Looks up a localized string similar to All Features.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeaturesetInvalid">
            <summary>
              Looks up a localized string similar to The feature set is invalid..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeaturesetMissing">
            <summary>
              Looks up a localized string similar to No feature set is specified..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeaturesetValid">
            <summary>
              Looks up a localized string similar to The feature set is valid..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeaturesExtent">
            <summary>
              Looks up a localized string similar to All Features in View Extent.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeaturesSelected">
            <summary>
              Looks up a localized string similar to Selected features.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeatureTypeCannotChange">
            <summary>
              Looks up a localized string similar to The feature type cannot be changed here.  Try creating a new feature of the appropriate type..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeatureTypeException">
            <summary>
              Looks up a localized string similar to The feature set selected was the incorrect type..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeatureTypeMismatch">
            <summary>
              Looks up a localized string similar to The FeatureType of the feature you are trying to add does not match the feature type of this featureset..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeatureTypeNotLine">
            <summary>
              Looks up a localized string similar to The FeatureType specified was not the line feature type..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeatureTypeNotPoint">
            <summary>
              Looks up a localized string similar to The FeatureType specified was not the point feature type. .
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeatureTypeNotPolygon">
            <summary>
              Looks up a localized string similar to The FeatureType specified was not the polygon feature type..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FeaturetypeUnspecified">
            <summary>
              Looks up a localized string similar to The FeatureType was not specified.  Please specify a featuretype before attempting to call this method..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FieldImportFailed">
            <summary>
              Looks up a localized string similar to Could not import column fields..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FieldNotNumeric">
            <summary>
              Looks up a localized string similar to The specified field is not a numeric field and so the &quot;EqualBreaks&quot; option is not supported..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FileExists_S">
            <summary>
              Looks up a localized string similar to The fileName %S already exists.  Do you wish to overwrite it?.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FileNotFound_S">
            <summary>
              Looks up a localized string similar to The fileName %S was not found..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FileNotLines_S">
            <summary>
              Looks up a localized string similar to The fileName %S contains a feature type other than lines..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FileNotPoints_S">
            <summary>
              Looks up a localized string similar to The fileName %S contains a feature type other than points..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FileTooLarge">
            <summary>
              Looks up a localized string similar to The file was too large to fit into memory all at once.  Try using a DataSource instead..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FileTypeNotSupported">
            <summary>
              Looks up a localized string similar to The specified file type is not supported..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Find">
            <summary>
              Looks up a localized string similar to Find.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.FindToolByName">
            <summary>
              Looks up a localized string similar to Find Tool.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ImplementedInSubclass">
            <summary>
              Looks up a localized string similar to This property or method is overrided in a subclass and should not be used directly..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.IncompatibleDestinationField">
            <summary>
              Looks up a localized string similar to The destination field data type is incompatible (double or string or integer).
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.IndexingErrorIn_S">
            <summary>
              Looks up a localized string similar to There was an error while attempting to index %S.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Input">
            <summary>
              Looks up a localized string similar to Input.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.InsufficientDimensions_S">
            <summary>
              Looks up a localized string similar to The number of dimensions in %S is insufficient for this calculation..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.InvalidDouble">
            <summary>
              Looks up a localized string similar to The value is invalid, it must be a decimal between %min and %max.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.InvalidInteger">
            <summary>
              Looks up a localized string similar to The value is invalid, it must be an integer between %min and %max.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.InvalidNumberFormat">
            <summary>
              Looks up a localized string similar to The value entered was not understood.  Please use either numbers or syntax &apos;start - end&apos;, e.g. &apos;1-5&apos;.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.KeyDuplicateException">
            <summary>
              Looks up a localized string similar to The specified key already exists in the tree..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.KeyMissingException">
            <summary>
              Looks up a localized string similar to The specified key could not be found in the tree..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.KeySizeException">
            <summary>
              Looks up a localized string similar to The size of the key did not match the size of the tree..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuBottom">
            <summary>
              Looks up a localized string similar to Align Bottom.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuHeight">
            <summary>
              Looks up a localized string similar to Fit to Height.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuHor">
            <summary>
              Looks up a localized string similar to Align Horizontal.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuLeft">
            <summary>
              Looks up a localized string similar to Align Left.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuMargAlign">
            <summary>
              Looks up a localized string similar to Margin Alignment.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuMarginFit">
            <summary>
              Looks up a localized string similar to Margin Fit.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuRight">
            <summary>
              Looks up a localized string similar to Align Right.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuSelectionAlignment">
            <summary>
              Looks up a localized string similar to Selection Alignment.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuSelectionFit">
            <summary>
              Looks up a localized string similar to Selection Fit.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuTop">
            <summary>
              Looks up a localized string similar to Align top.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuVert">
            <summary>
              Looks up a localized string similar to Align Vertical.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutCmnuWidth">
            <summary>
              Looks up a localized string similar to Fit to Width.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutErrorLoad">
            <summary>
              Looks up a localized string similar to Error opening layout file: .
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutErrorSave">
            <summary>
              Looks up a localized string similar to Error saving layout file:.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutFormTitle">
            <summary>
              Looks up a localized string similar to DotSpatial Print Layout.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutInsertMenuStripLegend">
            <summary>
              Looks up a localized string similar to Insert legend.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutInsertMenuStripScaleBar">
            <summary>
              Looks up a localized string similar to Insert scale bar.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutInsertToolStripBitmap">
            <summary>
              Looks up a localized string similar to Insert bitmap.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutInsertToolStripMap">
            <summary>
              Looks up a localized string similar to Insert map.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutInsertToolStripNorthArrow">
            <summary>
              Looks up a localized string similar to Insert north arrow.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutInsertToolStripRectangle">
            <summary>
              Looks up a localized string similar to Insert rectangle.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutInsertToolStripText">
            <summary>
              Looks up a localized string similar to Insert text.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutLoadDialogTitle">
            <summary>
              Looks up a localized string similar to Load Print Layout.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMapToolStripMaxExtent">
            <summary>
              Looks up a localized string similar to Zoom map to full extent of layers.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMapToolStripPan">
            <summary>
              Looks up a localized string similar to Pan map.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMapToolStripViewExtent">
            <summary>
              Looks up a localized string similar to Zoom map to extent of data view.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMapToolStripZoomIn">
            <summary>
              Looks up a localized string similar to Zoom map in.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMapToolStripZoomOut">
            <summary>
              Looks up a localized string similar to Zoom map out.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuPageSetup">
            <summary>
              Looks up a localized string similar to Page Setup.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripClose">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripDocToolbar">
            <summary>
              Looks up a localized string similar to Document.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripEdit">
            <summary>
              Looks up a localized string similar to Edit.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripFile">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripInsertToolbar">
            <summary>
              Looks up a localized string similar to Insert.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripMapToolbar">
            <summary>
              Looks up a localized string similar to Map.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripNew">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripOpen">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripPrint">
            <summary>
              Looks up a localized string similar to Print.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripRefresh">
            <summary>
              Looks up a localized string similar to Refresh.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSave">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSaveAs">
            <summary>
              Looks up a localized string similar to Save as.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSelect">
            <summary>
              Looks up a localized string similar to Select.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSelectAll">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSelectConvert">
            <summary>
              Looks up a localized string similar to Convert to bitmap.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSelectDelete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSelectInvert">
            <summary>
              Looks up a localized string similar to Invert.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSelectMoveDown">
            <summary>
              Looks up a localized string similar to Move down.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSelectMoveUp">
            <summary>
              Looks up a localized string similar to Move up.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSelectNone">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripSelectPrinter">
            <summary>
              Looks up a localized string similar to Choose printer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripShowMargin">
            <summary>
              Looks up a localized string similar to Show Margin.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripToolbars">
            <summary>
              Looks up a localized string similar to Toolbars.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripView">
            <summary>
              Looks up a localized string similar to View.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripZoomFull">
            <summary>
              Looks up a localized string similar to Fit to screen.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripZoomIn">
            <summary>
              Looks up a localized string similar to Zoom in.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripZoomOut">
            <summary>
              Looks up a localized string similar to Zoom out.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutMenuStripZoomToolbar">
            <summary>
              Looks up a localized string similar to Zoom.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutPageSetupTitle">
            <summary>
              Looks up a localized string similar to Page Setup.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutSaveDialogTitle">
            <summary>
              Looks up a localized string similar to Save Print Layout As.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutSaveFirst">
            <summary>
              Looks up a localized string similar to Do you want to save the current print layout?.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutToolStripZoomFull">
            <summary>
              Looks up a localized string similar to Fit to screen.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutToolStripZoomIn">
            <summary>
              Looks up a localized string similar to Zoom in.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayoutToolStripZoomOut">
            <summary>
              Looks up a localized string similar to Zoom out.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LayouyCmnuMarginAlignment">
            <summary>
              Looks up a localized string similar to Margin Alignment.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Legend">
            <summary>
              Looks up a localized string similar to 视图.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LineElementWrongDataType">
            <summary>
              Looks up a localized string similar to The wrong type of feature set was selected. Please select a line feature set..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.LineFeatureTypeException">
            <summary>
              Looks up a localized string similar to An incompatible feature type was supplied and was not of type Line..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.linkError">
            <summary>
              Looks up a localized string similar to Failed to create link.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.linkErrorCircle">
            <summary>
              Looks up a localized string similar to Output data cannot be linked to tools that generate it..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.linkErrorToData">
            <summary>
              Looks up a localized string similar to Links can only be made from data to tools..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.linkNoFreeInput">
            <summary>
              Looks up a localized string similar to There are no free inputs for the this tool that take the data type attempting to be linked to it..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ListItemNotFound">
            <summary>
              Looks up a localized string similar to The item specified was not found in this list..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Map_OnDragDrop_Invalid">
            <summary>
              Looks up a localized string similar to One or more of the files was not a valid data type for the map..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.MapFrame_GlcLayerAdded_Projection_Mismatch">
            <summary>
              Looks up a localized string similar to Projection Mismatch.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.MapFrame_GlcLayerAdded_ProjectionMismatch">
            <summary>
              Looks up a localized string similar to Reproject map layer to match the map coordinate system? This will not affect the source file..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.MapFrame_Projection">
            <summary>
              Looks up a localized string similar to Projection.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.MapFunctionSelect_NoSelectableLayer">
            <summary>
              Looks up a localized string similar to No layers are currently selectable layers active in the legend.  Select the layer or group in the legend for which selection should occur..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.MapFunctionSelect_OnKeyDown_No_Deletable_Layers">
            <summary>
              Looks up a localized string similar to There was no selected feature layer in the legend to clarify which features to delete.  Please select a layer or group in the legend..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.MapLayers">
            <summary>
              Looks up a localized string similar to Map Layers.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelerConfirmDelete">
            <summary>
              Looks up a localized string similar to Delete elements?.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelerConfirmDeleteSource">
            <summary>
              Looks up a localized string similar to Deleting the selected model elements will also delete the model elements associated with them..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelSaveCurrentModel">
            <summary>
              Looks up a localized string similar to Do you want to save the changes to %S?.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipAddData">
            <summary>
              Looks up a localized string similar to Add data to the model.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipDelete">
            <summary>
              Looks up a localized string similar to Delete selected model elements.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipFullExtent">
            <summary>
              Looks up a localized string similar to Zoom full extent of model.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipLink">
            <summary>
              Looks up a localized string similar to Link data to tools.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipLoad">
            <summary>
              Looks up a localized string similar to Load a model.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipNew">
            <summary>
              Looks up a localized string similar to Create a new empty model.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipRunModel">
            <summary>
              Looks up a localized string similar to Run Model.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipSave">
            <summary>
              Looks up a localized string similar to Save the current model.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipZoomOut">
            <summary>
              Looks up a localized string similar to Zoom out.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ModelTipZoonIn">
            <summary>
              Looks up a localized string similar to Zoom in.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.MoreThan100UniqueValues">
            <summary>
              Looks up a localized string similar to There are more than 100 unique values.  Are you sure you want to continue?.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.MW4Project">
            <summary>
              Looks up a localized string similar to MW4 Project.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.NewModel">
            <summary>
              Looks up a localized string similar to New Model.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.NoMatch">
            <summary>
              Looks up a localized string similar to None of the rows contain a value that matches the specified value..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.NonStandardFunction">
            <summary>
              Looks up a localized string similar to The function name was not recognized as one of the standard function names..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.NoRowInTable">
            <summary>
              Looks up a localized string similar to There is no row in the Table..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.NotImplemented">
            <summary>
              Looks up a localized string similar to This has not yet been implemented..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.NumberException_NumDigitsTooLarge">
            <summary>
              Looks up a localized string similar to The specified number of significant digits (%S) is too large for this field..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.NumberException_TooLarge_S">
            <summary>
              Looks up a localized string similar to The value %S was too large to encode with 18 ASCII characters..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.NumberException_TooSmall_S">
            <summary>
              Looks up a localized string similar to The value %S was too small to be encoded with 18 ASCII characters..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.NumericValuesOnly">
            <summary>
              Looks up a localized string similar to Please only enter numeric values..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.OnlyShapefilesSupported">
            <summary>
              Looks up a localized string similar to For now, only the shapefile vector format is being supported..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Opacity">
            <summary>
              Looks up a localized string similar to Opacity controls how transparent the item is.  A 0 is fully transparent, while 1 is fully opaque..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.OpacityInvalid">
            <summary>
              Looks up a localized string similar to Opacity should be a floating decimal point between 0 and 1..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Ouput">
            <summary>
              Looks up a localized string similar to Ouput.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PaintingColorScheme">
            <summary>
              Looks up a localized string similar to Painting Color Scheme To Bitmap.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PaintingHillshade">
            <summary>
              Looks up a localized string similar to Painting Hillshade To Bitmap.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ParameterInvalid">
            <summary>
              Looks up a localized string similar to The parameter is invalid.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ParameterValid">
            <summary>
              Looks up a localized string similar to The parameter is valid.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ParseFailed_S">
            <summary>
              Looks up a localized string similar to The value you entered could not be parsed into a %S.  Make sure the value is in the valid range..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Plugins">
            <summary>
              Looks up a localized string similar to Apps.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PngInsuficientLengthException">
            <summary>
              Looks up a localized string similar to The desired length of %S1 was too long.  The total length was %S2 and the offset was %S3..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PngInvalidSignatureException">
            <summary>
              Looks up a localized string similar to The beginning eight bytes of the specified file did not match the png signature..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PointFeatureTypeException">
            <summary>
              Looks up a localized string similar to An incompatible feature type was supplied and was not of type Point..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PolygonException_HoleElementNull">
            <summary>
              Looks up a localized string similar to Holes must not contain null elements.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PolygonException_ShellEmptyButHolesNot">
            <summary>
              Looks up a localized string similar to Shell is empty but holes are not.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PolygonFeatureTypeException">
            <summary>
              Looks up a localized string similar to An incompatible feature type was supplied and was not of type polygon..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ProjectFile">
            <summary>
              Looks up a localized string similar to Project File.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PyramidByteMismatchException">
            <summary>
              Looks up a localized string similar to The number of bytes should be 4 * rows * cols since only ARGB format is supported..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PyramidHeaderException">
            <summary>
              Looks up a localized string similar to The header has not been defined for the image scale you are attempting to access..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.PyramidOutOfBoundsException">
            <summary>
              Looks up a localized string similar to The rows or columns would extend beyond the specified number of columns or rows for the specified scale..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.RasterRequiresCast">
            <summary>
              Looks up a localized string similar to To work with anything other than an in-memory raster window, you must first cast this raster to the correct data format..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.RastersMustHaveCellSize">
            <summary>
              Looks up a localized string similar to The specified rasters must have their cell sizes dimensioned..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.RastersNeedSameCellSize">
            <summary>
              Looks up a localized string similar to The rasters must have equally sized cells to use this method..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.RasterTooLarge">
            <summary>
              Looks up a localized string similar to The specified raster would be too large to store in memory..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ReadingValuesFrom_S">
            <summary>
              Looks up a localized string similar to Reading values from %S.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ReadOnlyList">
            <summary>
              Looks up a localized string similar to The list is currently set to read-only, and cannot be modified..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.RemoveFields">
            <summary>
              Looks up a localized string similar to Are you sure you want to remove the fields?.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.RootNthRootIncorrect">
            <summary>
              Looks up a localized string similar to The root n-th root is incorrect.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.Selection_FeatureNotFound">
            <summary>
              Looks up a localized string similar to The specified feature was not found in the feature list and could not be selected..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.SpecifyField">
            <summary>
              Looks up a localized string similar to Please specify an attribute field to use for classification before using this feature..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.StartIndexTooLarge">
            <summary>
              Looks up a localized string similar to The argument startIndex was too large to read the requested number of bytes from byteArray..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.StringFieldInvalid">
            <summary>
              Looks up a localized string similar to Fields that are the string datatype cannot be converted to a raster.  Do you wish to use the FID value instead?.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.SupportedFiles">
            <summary>
              Looks up a localized string similar to Supported Files.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ToolSetupIncorectly">
            <summary>
              Looks up a localized string similar to The tool cannot be run because one or more of its parameters is not set..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.TooManyClosingBrackets">
            <summary>
              Looks up a localized string similar to There were too many closing brackets in the string expression..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.TooManyUniqueValues">
            <summary>
              Looks up a localized string similar to There are too many Unique values..
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.TopologyException_Depth">
            <summary>
              Looks up a localized string similar to Assigned depths do not match.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.ToSave">
            <summary>
              Looks up a localized string similar to To save the calulated value press the Apply button.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MessageStrings.WritingValues_S">
            <summary>
              Looks up a localized string similar to Writing values to %S.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapImageLayer">
            <summary>
            IGeoImageLayer
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapLayer">
            <summary>
            Layer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapLayer.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This draws content from the specified geographic regions onto the specified graphics
            object specified by MapArgs.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapImageLayer">
            <summary>
            GeoImageLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapImageLayer.#ctor">
            <summary>
            Creates a new default instance of a MapImageLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapImageLayer.#ctor(DotSpatial.Data.IImageData)">
            <summary>
            Creates a new instance of GeoImageLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapImageLayer.#ctor(DotSpatial.Data.IImageData,System.Collections.Generic.ICollection{DotSpatial.Symbology.ILayer})">
            <summary>
            Creates a new instance of a GeoImageLayer
            </summary>
            <param name="baseImage">The image to draw as a layer</param>
            <param name="container">The Layers collection that keeps track of the image layer</param>
        </member>
        <member name="M:DotSpatial.Controls.MapImageLayer.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This will draw any features that intersect this region.  To specify the features
            directly, use OnDrawFeatures.  This will not clear existing buffer content.
            For that call Initialize instead.
            </summary>
            <param name="args">A GeoArgs clarifying the transformation from geographic to image space</param>
            <param name="regions">The geographic regions to draw</param>
        </member>
        <member name="M:DotSpatial.Controls.MapImageLayer.OnBufferChanged(System.Collections.Generic.List{System.Drawing.Rectangle})">
            <summary>
            Fires the OnBufferChanged event
            </summary>
            <param name="clipRectangles">The Rectangle in pixels</param>
        </member>
        <member name="M:DotSpatial.Controls.MapImageLayer.OnFinishDrawing">
            <summary>
            Indiciates that whatever drawing is going to occur has finished and the contents
            are about to be flipped forward to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapImageLayer.DrawWindows(DotSpatial.Controls.MapArgs,System.Collections.Generic.IList{DotSpatial.Data.Extent},System.Collections.Generic.IList{System.Drawing.Rectangle})">
            <summary>
            This draws to the back buffer.  If the Backbuffer doesn't exist, this will create one.
            This will not flip the back buffer to the front.
            </summary>
            <param name="args"></param>
            <param name="regions"></param>
            <param name="clipRectangles"></param>
        </member>
        <member name="E:DotSpatial.Controls.MapImageLayer.BufferChanged">
            <summary>
            Fires an event that indicates to the parent map-frame that it should first
            redraw the specified clip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapImageLayer.BackBuffer">
            <summary>
            Gets or sets the back buffer that will be drawn to as part of the initialization process.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapImageLayer.Buffer">
            <summary>
            Gets the current buffer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapImageLayer.BufferExtent">
            <summary>
            Gets or sets the geographic region represented by the buffer
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapImageLayer.BufferRectangle">
            <summary>
            Gets or sets the rectangle in pixels to use as the back buffer.
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapImageLayer.IsInitialized">
            <summary>
            Gets or sets whether the image layer is initialized
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapTiledImageLayer">
            <summary>
            MapTiledImageLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapTiledImageLayer.#ctor(DotSpatial.Data.ITiledImage)">
            <summary>
            Creates a new instance of MapTiledImageLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapTiledImageLayer.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This will draw any features that intersect this region.  To specify the features
            directly, use OnDrawFeatures.  This will not clear existing buffer content.
            For that call Initialize instead.
            </summary>
            <param name="args">A GeoArgs clarifying the transformation from geographic to image space</param>
            <param name="regions">The geographic regions to draw</param>
        </member>
        <member name="M:DotSpatial.Controls.MapTiledImageLayer.DrawWindows(DotSpatial.Controls.MapArgs,System.Collections.Generic.IList{DotSpatial.Data.Extent},System.Collections.Generic.IList{System.Drawing.Rectangle})">
            <summary>
            This draws to the back buffer.  If the Backbuffer doesn't exist, this will create one.
            This will not flip the back buffer to the front.
            </summary>
            <param name="args"></param>
            <param name="regions"></param>
            <param name="clipRectangles"></param>
        </member>
        <member name="T:DotSpatial.Controls.IMapFrame">
            <summary>
            IMapFrame
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapGroup">
            <summary>
            IGeoGroup
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapGroup.Layers">
            <summary>
            Gets the GeoLayerCollection for members contained by this group.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapGroup.ParentMapFrame">
            <summary>
            Gets the map frame for this group.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.BufferToProj(System.Drawing.Point)">
            <summary>
            Unlike PixelToProj, which works relative to the client control,
            BufferToProj takes a pixel coordinate on the buffer and
            converts it to geographic coordinates.
            </summary>
            <param name="position">A Point describing the pixel position on the back buffer</param>
            <returns>An ICoordinate describing the geographic position</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.BufferToProj(System.Drawing.Rectangle)">
            <summary>
            This projects a rectangle relative to the buffer into and IEnvelope in geographic coordinates.
            </summary>
            <param name="rect">A Rectangle</param>
            <returns>An IEnvelope interface</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.Draw(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Using the standard independent paint method would potentially cause for dis-synchrony between
            the parents state and the state of this control.  This way, the drawing is all done at the
            same time.
            </summary>
            <param name="pe"></param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.InvalidateLayers">
            <summary>
            This will cause an invalidation for each layer.  The actual rectangle to re-draw is not specified
            here, but rather this simply indicates that some re-calculation is necessary.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.Initialize">
            <summary>
            Uses the current buffer and envelope to force each of the contained layers
            to re-draw their content.  This is useful after a zoom or size change.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.Initialize(System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            Instructs the map frame to draw content from the specified regions to the buffer..
            </summary>
            <param name="regions">The regions to initialize.</param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ParentToView(System.Drawing.Rectangle)">
            <summary>
            Obtains a rectangle relative to the background image by comparing
            the current View rectangle with the parent control's size.
            </summary>
            <param name="clip"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ParentResize">
            <summary>
            When the control is being resized, the view needs to change in order to preserve the aspect ratio,
            even though we want to use the exact same extents.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ProjToBuffer(DotSpatial.Topology.Coordinate)">
            <summary>
            Converts a single geographic location into the equivalent point on the
            screen relative to the top left corner of the map.
            </summary>
            <param name="location">The geographic position to transform</param>
            <returns>A Point with the new location.</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ProjToBuffer(DotSpatial.Data.Extent)">
            <summary>
            Converts a single geographic envelope into an equivalent Rectangle
            as it would be drawn on the screen.
            </summary>
            <param name="ext">The geographic IEnvelope</param>
            <returns>A Rectangle</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.Pan(System.Drawing.Point)">
            <summary>
            Pans the image for this map frame.  Instead of drawing entirely new content, from all 5 zones,
            just the slivers of newly revealed area need to be re-drawn.
            </summary>
            <param name="shift">A Point showing the amount to shift in pixels</param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.Print(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Instead of using the usual buffers, this bypasses any buffering and instructs the layers
            to draw directly to the specified target rectangle on the graphics object.  This is useful
            for doing vector drawing on much larger pages.  The result will be centered in the
            specified target rectangle bounds.
            </summary>
            <param name="device">Graphics device to print to</param>
            <param name="targetRectangle">The target rectangle in the graphics units of the device</param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.Print(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Data.Extent)">
            <summary>
            Instead of using the usual buffers, this bypasses any buffering and instructs the layers
            to draw directly to the specified target rectangle on the graphics object.  This is useful
            for doing vector drawing on much larger pages.  The result will be centered in the
            specified target rectangle bounds.
            </summary>
            <param name="device"></param>
            <param name="targetRectangle"></param>
            <param name="targetEnvelope">the extents to draw to the target rectangle</param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ResetExtents">
            <summary>
            This is not called during a resize, but rather after panning or zooming where the
            view is used as a guide to update the extents.  This will also call ResetBuffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ResetBuffer">
            <summary>
            Re-creates the buffer based on the size of the control without changing
            the geographic extents.  This is used after a resize operation.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ZoomIn">
            <summary>
            Zooms in one notch, so that the scale becomes larger and the features become larger.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ZoomOut">
            <summary>
            Zooms out one notch so that the scale becomes smaller and the features become smaller.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ZoomToNext">
            <summary>
            Zooms to the next extent of the map frame
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFrame.ZoomToPrevious">
            <summary>
            Zooms to the previous extent of the map frame
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.IMapFrame.ScreenUpdated">
            <summary>
            Occurs after changes have been made to the back buffer that affect the viewing area of the screen,
            thereby requiring an invalidation.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.IMapFrame.FinishedRefresh">
            <summary>
            Occurs after every one of the zones, chunks and stages has finished rendering to a stencil.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.IMapFrame.BufferChanged">
            <summary>
            Occurs when the buffer content has been altered and any containing maps should quick-draw
            from the buffer, followed by the tool drawing.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.BufferImage">
            <summary>
            Gets or sets the buffered image.  Mess with this at your own risk.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.ClientRectangle">
            <summary>
            Gets a rectangle indicating the size of the map frame image
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.CurrentChunk">
            <summary>
            Gets or sets the integer that specifies the chunk that is actively being drawn
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.ExtendBuffer">
            <summary>
            Gets or sets whether this map frame should define its buffer
            region to be the same size as the client, or three times larger.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.IsPanning">
            <summary>
            Gets or sets whether this map frame is currently in the process of redrawing the
            stencils after a pan operation.  Drawing should not take place if this is true.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.Parent">
            <summary>
            Gets or sets the parent control for this map frame.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.ProjectionModeReproject">
            <summary>
            Gets or sets the PromptMode that determines how to warn users when attempting to add a layer with
            a coordinate system that is different from the current projection.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.ProjectionModeDefine">
            <summary>
            Gets or sets the PromptMode that determines how to warn users when attempting to add a layer without
            a projection to a map that has a projection.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.Layers">
            <summary>
            Gets or sets the layers
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFrame.View">
            <summary>
            gets or sets the rectangle in pixel coordinates that will be drawn to the entire screen.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapLayerCollection">
            <summary>
            IGeoLayerCollection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapLayerCollection.Add(System.String)">
            <summary>
            Adds the specified fileName to the map as a new layer.
            </summary>
            <param name="fileName">The string fileName to add as a layer.</param>
            <returns>An IMapLayer that is the layer handle for the specified file.</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapLayerCollection.Add(DotSpatial.Data.IDataSet)">
            <summary>
            Adds the dataset specified to the file.  Depending on whether this is a featureSet,
            Raster, or ImageData, this will return the appropriate layer for the map.
            </summary>
            <param name="dataSet">A dataset</param>
            <returns>The IMapLayer to add</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapLayerCollection.Add(DotSpatial.Data.IFeatureSet)">
            <summary>
            This overload automatically constructs a new MapLayer from the specified
            feature layer with the default drawing characteristics and returns a valid
            IMapLayer which can be further cast into a PointLayer, MapLineLayer or
            a PolygonLayer, depending on the data that is passed in.
            </summary>
            <param name="featureSet">Any valid IFeatureSet that does not yet have drawing characteristics</param>
            <returns>A newly created valid implementation of FeatureLayer which at least gives a few more common
            drawing related methods and can also be cast into the appropriate Point, Line or Polygon layer.</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapLayerCollection.Add(DotSpatial.Data.IRaster)">
            <summary>
            Adds the specified raster as a new layer
            </summary>
            <param name="raster">The raster to add as a layer</param>
            <returns>the MapRasterLayer interface</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapLayerCollection.Add(DotSpatial.Data.IImageData)">
            <summary>
            Adds the specified ImageData class to the map as a new layer and returns the newly created layer.
            </summary>
            <param name="image">The image being created</param>
            <returns>An interface to the newly created MapImageLayer</returns>
        </member>
        <member name="M:DotSpatial.Controls.IMapLayerCollection.UnusedName(System.String)">
            <summary>
            Given a base name, this increments a number for appending
            if the name already exists in the collection.
            </summary>
            <param name="baseName">The string base name to start with</param>
            <returns>The base name modified by a number making it unique in the collection</returns>
        </member>
        <member name="E:DotSpatial.Controls.IMapLayerCollection.BufferChanged">
            <summary>
            Occurs when a rectangular region of the buffer for any of the layers in this collection
            should be updated.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapLayerCollection.MapFrame">
            <summary>
            Gets or sets the map frame that this belongs to.  These are designed to only work with one map frame at a time.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapLayerCollection.ParentGroup">
            <summary>
            Gets or sets the ParentGroup for this layer collection, even if that parent group
            is not actually a map frame.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapLayerCollection.ProgressHandler">
            <summary>
            Gets or sets the progress handler to report progress for time consuming actions.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapLayerCollection.SelectedLayer">
            <summary>
            Gets or sets the currently active layer.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapLabelLayer">
            <summary>
            IGeoLabelLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapLabelLayer.Invalidate">
            <summary>
            Resolves ambiguity
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapLabelLayer.FeatureLayer">
            <summary>
            Gets or sets the feature layer that this label layer is attached to.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapDrawTextArgs">
            <summary>
            GeoDrawTextArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapDrawTextArgs.#ctor(DotSpatial.Controls.MapDrawArgs,DotSpatial.Symbology.ILabelSymbolizer)">
            <summary>
            Creates a new instance of GeoDrawTextArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapDrawTextArgs.Dispose">
            <summary>
            Disposes the font brush, border pen and background brush
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapDrawTextArgs.Symbolizer">
            <summary>
            Gets the TextSymbolizer for this
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapDrawTextArgs.DrawArgs">
            <summary>
            Gets the GeoDrawArgs
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapDrawTextArgs.BackBrush">
            <summary>
            Gets the brush for drawing the background.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapDrawTextArgs.BorderPen">
            <summary>
            Gets the border pen
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapDrawTextArgs.FontBrush">
            <summary>
            Gets the brush used for drawing fonts.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapLabelLayer">
            <summary>
            GeoLabelLayer
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MapLabelLayer.ExistingLabels">
            <summary>
            The existing labels, accessed for all map label layers, not just this instance
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.#ctor">
            <summary>
            Creates a new instance of GeoLabelLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.#ctor(DotSpatial.Data.IFeatureSet)">
            <summary>
            Creates a new label layer based on the specified featureset
            </summary>
            <param name="inFeatureSet"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.#ctor(DotSpatial.Symbology.IFeatureLayer)">
            <summary>
            Creates a new label layer based on the specified feature layer
            </summary>
            <param name="inFeatureLayer">The feature layer to build layers from</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.Clear(System.Collections.Generic.List{System.Drawing.Rectangle},System.Drawing.Color)">
            <summary>
            Call StartDrawing before using this.
            </summary>
            <param name="rectangles">The rectangular region in pixels to clear.</param>
            <param name= "color">The color to use when clearing.  Specifying transparent
            will replace content with transparent pixels.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This will draw any features that intersect this region.  To specify the features
            directly, use OnDrawFeatures.  This will not clear existing buffer content.
            For that call Initialize instead.
            </summary>
            <param name="args">A GeoArgs clarifying the transformation from geographic to image space</param>
            <param name="regions">The geographic regions to draw</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.DrawFeatures(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.IFeature},System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            If useChunks is true, then this method
            </summary>
            <param name="args">The GeoArgs that control how these features should be drawn.</param>
            <param name="features">The features that should be drawn.</param>
            <param name="clipRectangles">If an entire chunk is drawn and an update is specified, this clarifies the changed rectangles.</param>
            <param name="useChunks">Boolean, if true, this will refresh the buffer in chunks.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.DrawFeatures(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            If useChunks is true, then this method
            </summary>
            <param name="args">The GeoArgs that control how these features should be drawn.</param>
            <param name="features">The features that should be drawn.</param>
            <param name="clipRectangles">If an entire chunk is drawn and an update is specified, this clarifies the changed rectangles.</param>
            <param name="useChunks">Boolean, if true, this will refresh the buffer in chunks.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.DrawPolygonFeature(DotSpatial.Controls.MapArgs,System.Drawing.Graphics,DotSpatial.Data.IFeature,DotSpatial.Symbology.ILabelCategory,System.Boolean,System.Collections.Generic.List{System.Drawing.RectangleF})">
            <summary>
            Draws a label on a polygon with various different methods
            </summary>
            <param name="e"></param>
            <param name="g"></param>
            <param name="f"></param>
            <param name="category"></param>
            <param name="selected"></param>
            <param name="existingLabels"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.DrawPointFeature(DotSpatial.Controls.MapArgs,System.Drawing.Graphics,DotSpatial.Data.IFeature,DotSpatial.Symbology.ILabelCategory,System.Boolean,System.Collections.Generic.List{System.Drawing.RectangleF})">
            <summary>
            Draws a label on a point with various different methods
            </summary>
            <param name="e"></param>
            <param name="g"></param>
            <param name="f"></param>
            <param name="category"></param>
            <param name="selected"></param>
            <param name="existingLabels"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.DrawLineFeature(DotSpatial.Controls.MapArgs,System.Drawing.Graphics,DotSpatial.Data.IFeature,DotSpatial.Symbology.ILabelCategory,System.Boolean,System.Collections.Generic.List{System.Drawing.RectangleF})">
            <summary>
            Draws a label on a line with various different methods
            </summary>
            <param name="e"></param>
            <param name="g"></param>
            <param name="f"></param>
            <param name="category"></param>
            <param name="selected"></param>
            <param name="existingLabels"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.DrawLabel(System.Drawing.Graphics,System.String,System.Drawing.RectangleF,DotSpatial.Symbology.ILabelSymbolizer)">
            <summary>
            Draws labels in a specified rectangle
            </summary>
            <param name="g">The graphics object to draw to</param>
            <param name="labelText">The label text to draw</param>
            <param name="labelBounds">The rectangle of the label</param>
            <param name="symb">the Label Symbolizer to use when drawing the label</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.FinishDrawing">
            <summary>
            Indicates that the drawing process has been finalized and swaps the back buffer
            to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.StartDrawing(System.Boolean)">
            <summary>
            Copies any current content to the back buffer so that drawing should occur on the
            back buffer (instead of the fore-buffer).  Calling draw methods without
            calling this may cause exceptions.
            </summary>
            <param name="preserve">Boolean, true if the front buffer content should be copied to the back buffer
            where drawing will be taking place.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.OnBufferChanged(System.Collections.Generic.List{System.Drawing.Rectangle})">
            <summary>
            Fires the OnBufferChanged event
            </summary>
            <param name="clipRectangles">The Rectangle in pixels</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.OnFinishDrawing">
            <summary>
            Indiciates that whatever drawing is going to occur has finished and the contents
            are about to be flipped forward to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLabelLayer.OnStartDrawing">
            <summary>
            Occurs when a new drawing is started, but after the BackBuffer has been established.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapLabelLayer.BufferChanged">
            <summary>
            Fires an event that indicates to the parent map-frame that it should first
            redraw the specified clip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLabelLayer.BackBuffer">
            <summary>
            Gets or sets the back buffer that will be drawn to as part of the initialization process.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLabelLayer.Buffer">
            <summary>
            Gets the current buffer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLabelLayer.BufferEnvelope">
            <summary>
            Gets or sets the geographic region represented by the buffer
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLabelLayer.BufferRectangle">
            <summary>
            Gets or sets the rectangle in pixels to use as the back buffer.
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLabelLayer.ChunkSize">
            <summary>
            Gets or sets the maximum number of labels that will be rendered before
            refreshing the screen.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLabelLayer.FeatureLayer">
            <summary>
            Gets or sets the MapFeatureLayer that this label layer is attached to.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLabelLayer.IsInitialized">
            <summary>
            Gets or sets whether or not this layer has been initialized.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapArgs.#ctor(System.Drawing.Rectangle,DotSpatial.Data.Extent)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.MapArgs"/> class.
            </summary>
            <param name="bufferRectangle">The buffer rectangle.</param>
            <param name="bufferEnvelope">The buffer envelope.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapArgs.#ctor(System.Drawing.Rectangle,DotSpatial.Data.Extent,System.Drawing.Graphics)">
            <summary>
            Creates a new MapArgs, where the device is also specified, overriding the default buffering behavior.
            </summary>
            <param name="bufferRectangle"></param>
            <param name="bufferEnvelope"></param>
            <param name="g"></param>
        </member>
        <member name="P:DotSpatial.Controls.MapArgs.ImageRectangle">
            <summary>
            Gets the rectangle dimensions of what the buffer should be in pixels
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapArgs.GeographicExtents">
            <summary>
            Gets the geographic bounds of the content of the buffer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapArgs.Device">
            <summary>
            An optional parameter that specifies a device to use instead of the normal buffers.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapArgs.Dx">
            <summary>
            Gets the dX
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapArgs.Dy">
            <summary>
            Gets the double valued
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapArgs.MinX">
            <summary>
            Gets the minimum X value
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapArgs.MaxY">
            <summary>
            Gets the maximum Y value
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapDrawArgs">
            <summary>
            DrawArgs contains the parameters necessary for 2D drawing
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.IMapFrame)">
            <summary>
            Creates a new instance of DrawArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.MapArgs)">
            <summary>
            Creates a new instance of GeoDrawArgs
            </summary>
            <param name="inGraphics"></param>
            <param name="clipRectangle"></param>
            <param name="inGeoGraphics"></param>
        </member>
        <member name="P:DotSpatial.Controls.MapDrawArgs.Graphics">
            <summary>
            Gets a Graphics object that is useful for drawing in client coordinates.  Coordinates
            should be specified as though they were drawn to the client rectangle, even if
            a clip rectangle is specified.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapDrawArgs.GeoGraphics">
            <summary>
            Gets a GeoGraphics wrapper that makes it easy to draw things in geographic coordinates.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapDrawArgs.ClipRectangle">
            <summary>
            Gets the clip rectangle that defines the area on the region in client coordinates where drawing is taking place.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFrame">
            <summary>
            A MapFrame accomplishes two things.  Firstly, it organizes the layers to be drawn, and establishes the geographic
            extents.  Secondly, it hosts the back-buffer image that can be larger than the component that
            this map frame would normally be drawn to.  When it receives instructions to paint itself, the client rectangle
            will automatically end up behaving like a clip rectangle.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.#ctor">
            <summary>
            Creates the default map frame, allowing the control that it belongs to to be set later.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.#ctor(System.Windows.Forms.Control)">
            <summary>
            Creates a new instance of a MapFrame without specifying the extents.  The
            geographic extents of the world will be used.
            </summary>
            <param name="inParent">The parent control that should own this map frame.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.#ctor(System.Windows.Forms.Control,DotSpatial.Data.Extent)">
            <summary>
            Creates a new instance of MapFrame
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.IndexOf(DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Add(DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Clear">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Contains(DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Remove(DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Insert(System.Int32,DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.SuspendEvents">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ResumeEvents">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.OnCreateGroup">
            <summary>
            Overrides the group creation to make sure that the new group will cast its layers
            to the appropriate Layer type.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ResetExtents">
            <summary>
            This is not called during a resize, but rather after panning or zooming where the
            view is used as a guide to update the extents.  This will also call ResetBuffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ResetBuffer">
            <summary>
            Re-creates the buffer based on the size of the control without changing
            the geographic extents.  This is used after a resize operation.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Initialize(System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            Instructs the map frame to draw content from the specified regions to the buffer..
            </summary>
            <param name="regions">The regions to initialize.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.InitializeLabels(System.Collections.Generic.List{DotSpatial.Data.Extent},DotSpatial.Controls.MapArgs,DotSpatial.Symbology.IRenderable)">
            <summary>
            Draw label content for a Map Layer
            </summary>
            <param name="regions"></param>
            <param name="args"></param>
            <param name="layer"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Initialize">
            <summary>
            Uses the current buffer and envelope to force each of the contained layers
            to re-draw their content.  This is useful after a zoom or size change.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Pan(System.Drawing.Point)">
            <summary>
            Pans the image for this map frame.  Instead of drawing entirely new content, from all 5 zones,
            just the slivers of newly revealed area need to be re-drawn.
            </summary>
            <param name="shift">A Point showing the amount to shift in pixels</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Invalidate(DotSpatial.Data.Extent)">
            <summary>
            When content in a geographic region needs to be invalidated
            </summary>
            <param name="region"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.GetLayers">
            <summary>
            Converts the internal list of layers into a list of ILayer interfaces
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Print(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Instead of using the usual buffers, this bypasses any buffering and instructs the layers
            to draw directly to the specified target rectangle on the graphics object.  This is useful
            for doing vector drawing on much larger pages.  The result will be centered in the
            specified target rectangle bounds.
            </summary>
            <param name="device"></param>
            <param name="targetRectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Print(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Data.Extent)">
            <summary>
            Instead of using the usual buffers, this bypasses any buffering and instructs the layers
            to draw directly to the specified target rectangle on the graphics object.  This is useful
            for doing vector drawing on much larger pages.  The result will be centered in the
            specified target rectangle bounds.
            </summary>
            <param name="device"></param>
            <param name="targetRectangle"></param>
            <param name="targetEnvelope">the extents to draw to the target rectangle</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Invalidate">
            <summary>
            Forces this MapFrame to copy the buffers for its layers to the back-buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ParentToView(System.Drawing.Rectangle)">
            <summary>
            Obtains a rectangle relative to the background image by comparing
            the current View rectangle with the parent control's size.
            </summary>
            <param name="clip"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ZoomIn">
            <summary>
            Zooms in one notch, so that the scale becomes larger and the features become larger.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ZoomOut">
            <summary>
            Zooms out one notch so that the scale becomes smaller and the features become smaller.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ZoomToNext">
            <summary>
            Zooms to the next extent
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ZoomToPrevious">
            <summary>
            Zooms to the previous extent
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ResetAspectRatio(DotSpatial.Data.Extent)">
            <summary>
            If a BackBuffer.Extents exists, this will enlarge those extents to match the aspect ratio
            of the pixel view.  If one doesn't exist, the _mapFrame.Extents will be used instead.
            </summary>
            <param name="newEnv">The envelope to adjust</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ParentResize">
            <summary>
            When the control is being resized, the view needs to change in order to preserve the aspect ratio,
            even though we want to use the exact same extents.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Add(DotSpatial.Data.IFeatureSet)">
            <summary>
            This will create a new layer from the featureset and add it.
            </summary>
            <param name="featureSet">Any valid IFeatureSet that does not yet have drawing characteristics</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Draw(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws from the buffer.
            </summary>
            <param name="pe"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.OnScreenUpdated">
            <summary>
            Fires the ScreenUpdated event
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.OnFinishedRefresh">
            <summary>
            Fires the FinsihedRefresh event
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.BufferToProj(System.Drawing.Point)">
            <summary>
            Unlike PixelToProj, which works relative to the client control,
            BufferToProj takes a pixel coordinate on the buffer and
            converts it to geographic coordinates.
            </summary>
            <param name="position">A Point describing the pixel position on the back buffer</param>
            <returns>An ICoordinate describing the geographic position</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.BufferToProj(System.Drawing.Rectangle)">
            <summary>
            This projects a rectangle relative to the buffer into and IEnvelope in geographic coordinates.
            </summary>
            <param name="rect">A Rectangle</param>
            <returns>An IEnvelope interface</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ProjToBuffer(DotSpatial.Topology.Coordinate)">
            <summary>
            Converts a single geographic location into the equivalent point on the
            screen relative to the top left corner of the map.
            </summary>
            <param name="location">The geographic position to transform</param>
            <returns>A Point with the new location.</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.ProjToBuffer(DotSpatial.Data.Extent)">
            <summary>
            Converts a single geographic envelope into an equivalent Rectangle
            as it would be drawn on the screen.
            </summary>
            <param name="env">The geographic IEnvelope</param>
            <returns>A Rectangle</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.InvalidateLayers">
            <summary>
            This will cause an invalidation for each layer.  The actual rectangle to re-draw is not specified
            here, but rather this simply indicates that some re-calculation is necessary.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Handle_Layer_Events(DotSpatial.Symbology.ILayerEvents)">
            <summary>
            Wires each of the layer events that the MapFrame should be listening to.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Layers_ZoomToLayer(System.Object,DotSpatial.Symbology.EnvelopeArgs)">
            <summary>
            Modifies the ZoomToLayer behavior to account for the possibility of an expanded
            MapFrame.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Ignore_Layer_Events(DotSpatial.Symbology.ILayerEvents)">
            <summary>
            Unwires events from the layer collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.GeoLayerBufferChanged(System.Object,DotSpatial.Controls.ClipArgs)">
            <summary>
            When any region for the stencil of any layers is changed, we should update the
            image that we have in that region.  This activity will be suspended in the
            case of a large scale update for all the layers until they have all updated.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.OnBufferChanged(System.Object,DotSpatial.Controls.ClipArgs)">
            <summary>
            Fires the BufferChanged event.  This is fired even if the new content is not currently
            in the view rectangle.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.Projection_Click(System.Object,System.EventArgs)">
            <summary>
            When the Projection context menu is clicked
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFrame.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <inheritdoc />
        </member>
        <member name="E:DotSpatial.Controls.MapFrame.ScreenUpdated">
            <summary>
            Occurs after changes have been made to the back buffer that affect the viewing area of the screen,
            thereby requiring an invalidation.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapFrame.FinishedRefresh">
            <summary>
            Occurs after every one of the zones, chunks and stages has finished rendering to a stencil.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapFrame.BufferChanged">
            <summary>
            Occurs when the buffer content has been altered and any containing maps should quick-draw
            from the buffer, followed by the tool drawing.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.EventsSuspended">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.LegendItems">
            <summary>
            This is a different view of the layers cast as legend items.  This allows
            easier cycling in recursive legend code.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.CurrentChunk">
            <summary>
            Gets or sets the integer that specifies the chunk that is actively being drawn
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ClipRectangle">
            <summary>
            This gets or sets the first clipRegion.  If more than one region needs to be set,
            the ClipRegions list should be used instead.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ClipRegions">
            <summary>
            Gets or sets a set of rectangles that should be drawn during the next update
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.BufferExtents">
            <summary>
            Gets or sets the geographic extents to be drawn to a buffer.
            If "ExtendBuffer" is true, then these extents are larger
            than the geographic extents of the parent client,
            and care should be taken when using PixelToProj,
            as it will work differently.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ViewExtents">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.GeographicExtents">
            <summary>
            Gets the geographic extents
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ExtendBuffer">
            <summary>
            Gets or sets whether this map frame should define its buffer
            region to be the same size as the client, or three times larger.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.Height">
            <summary>
            Gets or sets the height
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.IsPanning">
            <summary>
            Gets or sets whether this map frame is currently in the process of redrawing the
            stencils after a pan operation.  Drawing should not take place if this is true.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.Layers">
            <summary>
            Gets or sets the layers
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ProjectionModeReproject">
            <summary>
            gets or sets the ReprojectMode that determines if new layers are reprojected when added to the map.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ProjectionModeDefine">
            <summary>
            Gets or sets the PromptMode that determines how to warn users when attempting to add a layer without
            a projection to a map that has a projection.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.View">
            <summary>
            gets or sets the rectangle in pixel coordinates that will be drawn to the entire screen.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.Width">
            <summary>
            Gets or sets the width in pixels for this map frame.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.BufferImage">
            <summary>
            Gets or sets the buffered image.  Mess with this at your own risk.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ClientRectangle">
            <summary>
            Gets or sets the client rectangle
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ImageRectangle">
            <summary>
            Gets or sets the ImageRectangle for drawing the buffer
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ProgressHandler">
            <summary>
            Gets or sets the progress handler to use.  Setting this will set the progress handler for
            each of the layers in this map frame.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.Parent">
            <summary>
            Gets or sets the parent control for this map frame.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.Right">
            <summary>
            The right in client rectangle coordinates
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.Bottom">
            <summary>
            The bottom (or height) of this client rectangle
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFrame.ParentMapFrame">
            <inheritdoc />
        </member>
        <member name="T:DotSpatial.Controls.MapGroup">
            <summary>
            GeoGroup
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.#ctor">
            <summary>
            Creates a new instance of GeoGroup
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.#ctor(DotSpatial.Controls.IMap,System.String)">
            <summary>
            Creates a new group for the specified map.  This will place the group at the root level on the MapFrame.
            </summary>
            <param name="map">The map to add this group to.</param>
            <param name="name">The name to appear in the legend text.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.#ctor(System.Collections.Generic.ICollection{DotSpatial.Controls.IMapLayer},DotSpatial.Controls.IMapFrame,DotSpatial.Data.IProgressHandler)">
            <summary>
            Creates a group that sits in a layer list and uses the specified progress handler
            </summary>
            <param name="container">the layer list</param>
            <param name="frame"></param>
            <param name="progressHandler">the progress handler</param>
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.IndexOf(DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.Add(DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.Remove(DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.Insert(System.Int32,DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.Clear">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.Contains(DotSpatial.Symbology.ILayer)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.CopyTo(DotSpatial.Symbology.ILayer[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.SuspendEvents">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.ResumeEvents">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This draws content from the specified geographic regions onto the specified graphics
            object specified by MapArgs.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.GetLayers">
            <summary>
            Gets the layers cast as ILayer without any information about the actual drawing methods.
            This is useful for handling methods that my come from various types of maps.
            </summary>
            <returns>An enumerable collection of ILayer</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.OnCreateGroup">
            <summary>
            Overrides the base CreateGroup method to ensure that new groups are GeoGroups.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapGroup.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapGroup.Count">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapGroup.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapGroup.EventsSuspended">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapGroup.Layers">
            <summary>
            Gets the collection of Geographic drawing layers.
            </summary>
            <summary>
            Gets or sets the layers
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapGroup.MapFrame">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapGroup.ParentMapFrame">
            <summary>
            Gets the MapFrame that this group ultimately belongs to.  This may not
            be the immediate parent of this group.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapGroup.LegendItems">
            <summary>
            This is a different view of the layers cast as legend items.  This allows
            easier cycling in recursive legend code.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapGroup.MapLayerEnumerator">
            <summary>
            Transforms an IMapLayer enumerator into an ILayer Enumerator
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.MapLayerEnumerator.#ctor(System.Collections.Generic.IEnumerator{DotSpatial.Controls.IMapLayer})">
            <summary>
            Creates a new instance of the MapLayerEnumerator
            </summary>
            <param name="subEnumerator"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.MapLayerEnumerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.MapLayerEnumerator.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:DotSpatial.Controls.MapGroup.MapLayerEnumerator.Reset">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapGroup.MapLayerEnumerator.Current">
            <inheritdoc />
        </member>
        <member name="T:DotSpatial.Controls.MapLayerCollection">
            <summary>
            GeoLayerCollection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.#ctor(DotSpatial.Controls.IMapFrame,DotSpatial.Data.IProgressHandler)">
            <summary>
            Creates a new blank instance of a MapLayer collection.  This is especially useful
            for tracking layers that can draw themselves.  This does not concern itself with
            view extents like a dataframe, but rather is a grouping of layers that is itself
            also an IMapLayer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.#ctor(DotSpatial.Controls.IMapFrame,DotSpatial.Controls.IMapGroup,DotSpatial.Data.IProgressHandler)">
            <summary>
            Creates the Collection in the situation where the map frame is not the immediate parent,
            but rather the group is the immediate parent, while frame is the ultimate map frame that
            contains this geo layer collection.
            </summary>
            <param name="frame"></param>
            <param name="group"></param>
            <param name="progressHandler"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.#ctor(DotSpatial.Controls.IMapFrame)">
            <summary>
            Creates a new blank instance of a MapLayer collection.  This is especially useful
            for tracking layers that can draw themselves.  This does not concern itself with
            view extents like a dataframe, but rather is a grouping of layers that is itself
            also an IMapLayer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.#ctor">
            <summary>
            Creates a new layer collection that is free-floating.  This will not be contained in a map frame.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.Add(DotSpatial.Controls.IMapLayer)">
            <summary>
            This overload automatically constructs a new MapLayer from the specified
            feature layer with the default drawing characteristics and returns a valid
            IMapLayer which can be further cast into a PointLayer, MapLineLayer or
            a PolygonLayer, depending on the data that is passed in.
            </summary>
            <param name="layer">A pre-existing FeatureLayer that has already been created from a featureSet</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.AddRange(System.Collections.Generic.IEnumerable{DotSpatial.Controls.IMapLayer})">
            <summary>
            Adds the elements of the specified collection to the end of the System.Collections.Generic.List&lt;T&gt;
            </summary>
            <param name="collection">collection: The collection whose elements should be added to the end of the
            System.Collections.Generic.List&lt;T&gt;. The collection itself cannot be null, but it can contain elements that are null,
            if type T is a reference type.</param>
            <exception cref="T:System.ApplicationException">Unable to add while the ReadOnly property is set to true.</exception>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.Add(System.String)">
            <summary>
            Adds the specified fileName to the map as a new layer.
            </summary>
            <param name="fileName">The string fileName to add as a layer.</param>
            <returns>An IMapLayer that is the layer handle for the specified file.</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.Add(DotSpatial.Data.IDataSet)">
            <summary>
            Adds the dataset specified to the file.  Depending on whether this is a featureSet,
            Raster, or ImageData, this will return the appropriate layer for the map.
            </summary>
            <param name="dataSet">A dataset</param>
            <returns>The IMapLayer to add</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.Add(DotSpatial.Data.IFeatureSet)">
            <summary>
            This overload automatically constructs a new MapLayer from the specified
            feature layer with the default drawing characteristics and returns a valid
            IMapLayer which can be further cast into a PointLayer, MapLineLayer or
            a PolygonLayer, depending on the data that is passed in.
            </summary>
            <param name="featureSet">Any valid IFeatureSet that does not yet have drawing characteristics</param>
            <returns>A newly created valid implementation of FeatureLayer which at least gives a few more common
            drawing related methods and can also be cast into the appropriate Point, Line or Polygon layer.</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.Add(DotSpatial.Data.IRaster)">
            <summary>
            Adds the raster to layer collection
            </summary>
            <param name="raster"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.Add(DotSpatial.Data.IImageData)">
            <summary>
            Adds the specified image data as a new layer to the map.
            </summary>
            <param name="image">The image to add as a layer</param>
            <returns>the IMapImageLayer interface for the layer that was added to the map.</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.CopyTo(DotSpatial.Controls.IMapLayer[],System.Int32)">
            <summary>
            This copies the members of this collection to the specified array index, but
            only if they match the IGeoLayer interface.  (Other kinds of layers can be
            added to this collection by casting it to a LayerCollection)
            </summary>
            <param name="inArray">The array of IGeoLayer interfaces to copy values to</param>
            <param name="arrayIndex">The zero-based integer index in the output array to start copying values to</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.Contains(DotSpatial.Controls.IMapLayer)">
            <summary>
            Tests to see if the specified IGeoLayer exists in the current collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.IndexOf(DotSpatial.Controls.IMapLayer)">
            <summary>
            Gets the zero-based integer index of the specified IGeoLayer in this collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.Insert(System.Int32,DotSpatial.Controls.IMapLayer)">
            <summary>
            Inserts an element into the System.Collections.Generic.List&lt;T&gt; at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is greater than System.Collections.Generic.List&lt;T&gt;.Count.</exception>
            <exception cref="T:System.ApplicationException">Unable to insert while the ReadOnly property is set to true.</exception>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{DotSpatial.Controls.IMapLayer})">
            <summary>
            Inserts the elements of a collection into the EventList&lt;T&gt; at the specified index.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="collection">The collection whose elements should be inserted into the EventList&lt;T&gt;. The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is greater than EventList&lt;T&gt;.Count.</exception>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
            <exception cref="T:System.ApplicationException">Unable to insert while the ReadOnly property is set to true.</exception>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.Remove(DotSpatial.Controls.IMapLayer)">
            <summary>
            Removes the first occurrence of a specific object from the System.Collections.Generic.List&lt;T&gt;.
            </summary>
            <param name="item">The object to remove from the System.Collections.Generic.List&lt;T&gt;. The value can be null for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not
            found in the System.Collections.Generic.List&lt;T&gt;.</returns>
            <exception cref="T:System.ApplicationException">Unable to remove while the ReadOnly property is set to true.</exception>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.GetEnumerator">
            <summary>
            An IEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLayerCollection.OnBufferChanged(System.Object,DotSpatial.Controls.ClipArgs)">
            <summary>
            This simply forwards the call from a layer to the container
            of this collection (like a MapFrame).
            </summary>
            <param name="sender">The layer that actually changed</param>
            <param name="e"></param>
        </member>
        <member name="E:DotSpatial.Controls.MapLayerCollection.BufferChanged">
            <summary>
            Occurs when the stencil for one of the layers has been updated in a specific region.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLayerCollection.MapFrame">
            <summary>
            Gets the map frame of this layer collection
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLayerCollection.Item(System.Int32)">
            <summary>
            The default, indexed value of type T
            </summary>
            <param name="index">The numeric index</param>
            <returns>An object of type T corresponding to the index value specified</returns>
        </member>
        <member name="P:DotSpatial.Controls.MapLayerCollection.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapLayerCollection.ParentGroup">
            <inheritdoc />
        </member>
        <member name="P:DotSpatial.Controls.MapLayerCollection.ProgressHandler">
            <summary>
            Gets or sets the progress handler to report progress for time consuming actions.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLayerCollection.SelectedLayer">
            <inheritdoc />
        </member>
        <member name="T:DotSpatial.Controls.MapLayerExt">
            <summary>
            GeoLayerEM
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.GeoLayerEnumerator">
            <summary>
            LayerEnumerator
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.GeoLayerEnumerator.#ctor(System.Collections.Generic.IEnumerator{DotSpatial.Symbology.ILayer})">
            <summary>
            Creates a new instance of LayerEnumerator
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.GeoLayerEnumerator.Dispose">
            <summary>
            Calls the Dispose method
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.GeoLayerEnumerator.MoveNext">
            <summary>
            Moves to the next member
            </summary>
            <returns>boolean, true if the enumerator was able to advance</returns>
        </member>
        <member name="M:DotSpatial.Controls.GeoLayerEnumerator.Reset">
            <summary>
            Resets to before the first member
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.GeoLayerEnumerator.Current">
            <summary>
            Retrieves the current member as an ILegendItem
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapRasterLayer">
            <summary>
            GeoImageLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapRasterLayer.Clear(System.Collections.Generic.List{System.Drawing.Rectangle},System.Drawing.Color)">
            <summary>
            Call StartDrawing before using this.
            </summary>
            <param name="rectangles">The rectangular region in pixels to clear.</param>
            <param name= "color">The color to use when clearing.  Specifying transparent
            will replace content with transparent pixels.</param>
        </member>
        <member name="M:DotSpatial.Controls.IMapRasterLayer.FinishDrawing">
            <summary>
            Indicates that the drawing process has been finalized and swaps the back buffer
            to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapRasterLayer.StartDrawing(System.Boolean)">
            <summary>
            Copies any current content to the back buffer so that drawing should occur on the
            back buffer (instead of the fore-buffer).  Calling draw methods without
            calling this may cause exceptions.
            </summary>
            <param name="preserve">Boolean, true if the front buffer content should be copied to the back buffer
            where drawing will be taking place.</param>
        </member>
        <member name="E:DotSpatial.Controls.IMapRasterLayer.BufferChanged">
            <summary>
            Fires an event that indicates to the parent map-frame that it should first
            redraw the specified clip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapRasterLayer.BackBuffer">
            <summary>
            Gets or sets the back buffer that will be drawn to as part of the initialization process.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapRasterLayer.Buffer">
            <summary>
            Gets the current buffer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapRasterLayer.BufferEnvelope">
            <summary>
            Gets or sets the geographic region represented by the buffer
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapRasterLayer.BufferRectangle">
            <summary>
            Gets or sets the rectangle in pixels to use as the back buffer.
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapRasterLayer.IsInitialized">
            <summary>
            Gets or sets whether the image layer is initialized
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapRasterLayer">
            <summary>
            GeoImageLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.#ctor(System.String,DotSpatial.Symbology.IRasterSymbolizer)">
            <summary>
            Creates a new raster layer from the specified fileName
            </summary>
            <param name="fileName"></param>
            <param name="symbolizer"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.#ctor(DotSpatial.Data.IRaster,DotSpatial.Data.ImageData)">
            <summary>
            Creates a new instance of a MapRasterLayer and the specified image data to use for rendering it.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.#ctor(DotSpatial.Data.IRaster)">
            <summary>
            Creates a new instance of a Raster layer, and will create a "FallLeaves" image based on the
            raster values.
            </summary>
            <param name="raster">The raster to use</param>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.Clear(System.Collections.Generic.List{System.Drawing.Rectangle},System.Drawing.Color)">
            <summary>
            Call StartDrawing before using this.
            </summary>
            <param name="rectangles">The rectangular region in pixels to clear.</param>
            <param name= "color">The color to use when clearing.  Specifying transparent
            will replace content with transparent pixels.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This will draw any features that intersect this region.  To specify the features
            directly, use OnDrawFeatures.  This will not clear existing buffer content.
            For that call Initialize instead.
            </summary>
            <param name="args">A GeoArgs clarifying the transformation from geographic to image space</param>
            <param name="regions">The geographic regions to draw</param>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.FinishDrawing">
            <summary>
            Indicates that the drawing process has been finalized and swaps the back buffer
            to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.StartDrawing(System.Boolean)">
            <summary>
            Copies any current content to the back buffer so that drawing should occur on the
            back buffer (instead of the fore-buffer).  Calling draw methods without
            calling this may cause exceptions.
            </summary>
            <param name="preserve">Boolean, true if the front buffer content should be copied to the back buffer
            where drawing will be taking place.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.OnBufferChanged(System.Collections.Generic.List{System.Drawing.Rectangle})">
            <summary>
            Fires the OnBufferChanged event
            </summary>
            <param name="clipRectangles">The Rectangle in pixels</param>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.OnFinishDrawing">
            <summary>
            Indicates that whatever drawing is going to occur has finished and the contents
            are about to be flipped forward to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.OnStartDrawing">
            <summary>
            Occurs when a new drawing is started, but after the BackBuffer has been established.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapRasterLayer.DrawWindows(DotSpatial.Controls.MapArgs,System.Collections.Generic.IList{DotSpatial.Data.Extent},System.Collections.Generic.IList{System.Drawing.Rectangle})">
            <summary>
            This draws to the back buffer.  If the back buffer doesn't exist, this will create one.
            This will not flip the back buffer to the front.
            </summary>
            <param name="args"></param>
            <param name="regions"></param>
            <param name="clipRectangles"></param>
        </member>
        <member name="E:DotSpatial.Controls.MapRasterLayer.BufferChanged">
            <summary>
            Fires an event that indicates to the parent map-frame that it should first
            redraw the specified clip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapRasterLayer.BackBuffer">
            <summary>
            Gets or sets the back buffer that will be drawn to as part of the initialization process.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapRasterLayer.Buffer">
            <summary>
            Gets the current buffer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapRasterLayer.BufferEnvelope">
            <summary>
            Gets or sets the geographic region represented by the buffer
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapRasterLayer.BufferRectangle">
            <summary>
            Gets or sets the rectangle in pixels to use as the back buffer.
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapRasterLayer.IsInitialized">
            <summary>
            Gets or sets whether the image layer is initialized
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonHeaderControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.#ctor(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Initializes a new instance of the RibbonHeader class.
            </summary>
            <param name="ribbon">
            </param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.Add(DotSpatial.Controls.Header.RootItem)">
            <summary>
            Adds the specified root item.
            </summary>
            <param name="item">
            The root item.
            </param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.Add(DotSpatial.Controls.Header.SeparatorItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.Add(DotSpatial.Controls.Header.MenuContainerItem)">
            <summary>
            Adds the item.
            </summary>
            <param name="item">
            The item.
            </param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.Add(DotSpatial.Controls.Header.TextEntryActionItem)">
            <summary>
            Adds the specified textbox item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.Add(DotSpatial.Controls.Header.DropDownActionItem)">
            <summary>
            Adds a combo box style item
            </summary>
            <param name="item">
            The item.
            </param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.Add(DotSpatial.Controls.Header.SimpleActionItem)">
            <summary>
            This will add a new item that will appear on the ribbon control.
            </summary>
            <param name="item">
            </param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.EnsureNonNullRoot(DotSpatial.Controls.Header.GroupedItem)">
            <summary>
            Make sure the root key is present or use a default.
            </summary>
            <param name="item">
            </param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.EnsureExtensionsTabExists">
            <summary>
            Ensure the extensions tab exists.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.GetExistingRibbonTab(System.String)">
            <summary>
            The get existing ribbon page.
            </summary>
            <param name="key">
            The key.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.UncheckButtonsExcept(DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Unchecks all toolstrip buttons except the current button
            </summary>
            <param name="checkedButton">
            The toolstrip button which should
            stay checked
            </param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.GetProductName(System.Reflection.Assembly)">
            <summary>
            Gets the name of the plugin. This must be called from one of the public override methods as it looks for the calling assembly.
            </summary>
            <value>
            The name of the plugin.
            </value>
            <param name="assembly">
            </param>
            <returns>
            The get product name.
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.Remove(System.String)">
            <summary>
            Remove item from the standard toolbar or ribbon control
            </summary>
            <param name="key">
            The string itemName to remove from the standard toolbar or ribbon control
            </param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.GetItem(System.String)">
            <summary>
            Get the item.
            </summary>
            <param name="key">
            The key.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHeaderControl.SelectRoot(System.String)">
            <summary>
            Selects the root.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="T:DotSpatial.Controls.SerializationManager">
            <summary>
            Used for opening and saving project files.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SerializationManager.#ctor(DotSpatial.Controls.AppManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DotSpatial.Controls.SerializationManager"/> class.
            </summary>
            <param name="applicationManager">The application manager.</param>
        </member>
        <member name="M:DotSpatial.Controls.SerializationManager.SaveProject(System.String)">
            <summary>
            Serializes portions of the map to file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:DotSpatial.Controls.SerializationManager.OpenProject(System.String)">
            <summary>
            Deserializes the map from a file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:DotSpatial.Controls.SerializationManager.OnDeserializing(DotSpatial.Controls.SerializingEventArgs)">
            <summary>
            Triggers the Deserializing event.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SerializationManager.OnSerializing(DotSpatial.Controls.SerializingEventArgs)">
            <summary>
            Triggers the Serializing event.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SerializationManager.GetCustomSetting``1(System.String,``0)">
            <summary>
            Gets the custom setting.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uniqueName">Name of the unique key.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.SerializationManager.SetCustomSetting(System.String,System.Object)">
            <summary>
            Sets the custom setting.
            </summary>
            <param name="uniqueName">Name of the unique key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:DotSpatial.Controls.SerializationManager.IsCustomSettingPresent(System.String)">
            <summary>
            Determines whether a uniqueName is already in use.
            </summary>
            <param name="uniqueName">Key to test.</param>
            <returns>
              <c>true</c> if uniqueName is already in use; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:DotSpatial.Controls.SerializationManager.New">
            <summary>
            Creates a new project.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.SerializationManager.OpenDialogFilterText">
            <summary>
            Filter text for an open project file dialog
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.SerializationManager.SaveDialogFilterText">
            <summary>
            Filter text for a save project as dialog
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.SerializationManager.CurrentProjectDirectory">
            <summary>
            Gets or sets the current project directory.
            </summary>
            <value>
            The current project directory.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.SerializationManager.CurrentProjectFile">
            <summary>
            Gets or sets the current project file.
            </summary>
            <value>
            The current project file.
            </value>
        </member>
        <member name="E:DotSpatial.Controls.SerializationManager.Serializing">
            <summary>
            Occurs when the appmanager is being serialized, allowing a plugin to view and modify custom settings that will be stored with the appmanager.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.SerializationManager.Deserializing">
            <summary>
            Occurs when the appmanager is being deserialized. allowing a plugin to deal with any custom settings that were deserialized.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.SerializingEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ShapefileLayerProvider">
            <summary>
            ShapefileLayerProvider
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ShapefileLayerProvider.CreateNew(System.String,DotSpatial.Topology.FeatureType,System.Boolean,System.Collections.Generic.ICollection{DotSpatial.Symbology.ILayer},DotSpatial.Data.IProgressHandler)">
            <summary>
            Not Implemented yet
            </summary>
            <param name="fileName"></param>
            <param name="featureType"></param>
            <param name="inRam"></param>
            <param name="container"></param>
            <param name="progressHandler"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.ShapefileLayerProvider.OpenLayer(System.String,System.Boolean,System.Collections.Generic.ICollection{DotSpatial.Symbology.ILayer},DotSpatial.Data.IProgressHandler)">
            <summary>
            Opens a shapefile, but returns it as a FeatureLayer
            </summary>
            <param name="fileName">The string fileName</param>
            <param name="inRam">Boolean, if this is true it will attempt to open the entire layer in memory.</param>
            <param name="container">A container to hold this layer.</param>
            <param name="progressHandler">The progress handler that should receive status messages</param>
            <returns>An IFeatureLayer</returns>
        </member>
        <member name="P:DotSpatial.Controls.ShapefileLayerProvider.DialogReadFilter">
            <summary>
            Gets a dialog read filter that lists each of the file type descriptions and file extensions, delimeted
            by the | symbol.  Each will appear in DotSpatial's open file dialog filter, preceeded by the name provided
            on this object.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ShapefileLayerProvider.DialogWriteFilter">
            <summary>
            Gets a dialog filter that lists each of the file type descriptions and extensions for a Save File Dialog.
            Each will appear in DotSpatial's open file dialog filter, preceeded by the name provided on this object.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ShapefileLayerProvider.Name">
            <summary>
            Gets a prefereably short name that identifies this data provider.  Example might be GDAL.
            This will be prepended to each of the DialogReadFilter members from this plugin.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ShapefileLayerProvider.Description">
            <summary>
            This is a basic description that will fall next to your plugin in the Add Other Data dialog.
            This will only be shown if your plugin does not supply a DialogReadFilter.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapTileLayer">
            <summary>
            MapTileLayer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapTileLayer.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This is a place holder for future stuff
            </summary>
            <param name="args"></param>
            <param name="regions"></param>
        </member>
        <member name="T:DotSpatial.Controls.ClipArgs">
            <summary>
            ClipArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ClipArgs.#ctor(System.Collections.Generic.List{System.Drawing.Rectangle})">
            <summary>
            Creates a new instance of ClipArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ClipArgs.#ctor(System.Drawing.Rectangle)">
            <summary>
            Creates a ClipArg from a single rectangle instead of a list of rectangles
            </summary>
            <param name="clipRectangle">The clip rectangle</param>
        </member>
        <member name="P:DotSpatial.Controls.ClipArgs.ClipRectangles">
            <summary>
            Gets the ClipRectangle for this event.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.DuplicationPreventer">
            <summary>
            DuplicationPreventer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.DuplicationPreventer.Clean(System.Collections.Generic.List{System.Drawing.PointF})">
            <summary>
            Cycles through the PointF points, where necessary and removes duplicate points
            that are found at the integer level.
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.DuplicationPreventer.Clean(System.Collections.Generic.List{System.Double[]})">
            <summary>
            Cleans the list of points by removing duplicates
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="T:DotSpatial.Controls.IMapFeatureLayer">
            <summary>
            This is should not be instantiated because it cannot in itself perform the necessary functions.
            Instead, most of the specified functionality must be implemented in the more specific classes.
            This is also why there is no direct constructor for this class.  You can use the static
            "FromFile" or "FromFeatureLayer" to create FeatureLayers from a file.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFeatureLayer.LabelLayer">
            <summary>
            Gets or sets the label layer that is associated with this feature layer.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapLineLayer">
            <summary>
            IGeoLineLayer
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapPointLayer">
            <summary>
            IGeoPointLayer
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapPolygonLayer">
            <summary>
            IGeoPolygonLayer
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapLineLayer">
            <summary>
            A layer with drawing characteristics for LineStrings
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.#ctor">
            <summary>
            Creates an empty line layer with a Line FeatureSet that has no members.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.#ctor(DotSpatial.Data.IFeatureSet)">
            <summary>
            Constructor
            </summary>
            <param name="inFeatureSet"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.#ctor(DotSpatial.Data.IFeatureSet,System.Collections.Generic.ICollection{DotSpatial.Symbology.ILayer})">
            <summary>
            Constructor that also shows progress
            </summary>
            <param name="featureSet">A featureset that contains lines</param>
            <param name="container">An IContainer that the line layer should be created in</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.#ctor(DotSpatial.Data.IFeatureSet,System.Collections.Generic.ICollection{DotSpatial.Symbology.ILayer},System.Boolean)">
            <summary>
            Creates a GeoLineLayer constructor, but passes the boolean notFinished variable to indicate
            whether or not this layer should fire the FinishedLoading event.
            </summary>
            <param name="featureSet"></param>
            <param name="container"></param>
            <param name="notFinished"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.Clear(System.Collections.Generic.List{System.Drawing.Rectangle},System.Drawing.Color)">
            <summary>
            Call StartDrawing before using this.
            </summary>
            <param name="rectangles">The rectangular region in pixels to clear.</param>
            <param name= "color">The color to use when clearing.  Specifying transparent
            will replace content with transparent pixels.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.CreateLayerFromSelectedFeatures(DotSpatial.Symbology.IFeatureLayer@)">
            <summary>
            This is testing the idea of using an input parameter type that is marked as out
            instead of a return type.
            </summary>
            <param name="result">The result of the creation</param>
            <returns>Boolean, true if a layer can be created</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.CreateLayerFromSelectedFeatures(DotSpatial.Controls.MapLineLayer@)">
            <summary>
            This is the strong typed version of the same process that is specific to geo point layers.
            </summary>
            <param name="result">The new GeoPointLayer to be created</param>
            <returns>Boolean, true if there were any values in the selection</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.DrawFeatures(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.IFeature},System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            If useChunks is true, then this method
            </summary>
            <param name="args">The GeoArgs that control how these features should be drawn.</param>
            <param name="features">The features that should be drawn.</param>
            <param name="clipRectangles">If an entire chunk is drawn and an update is specified, this clarifies the changed rectangles.</param>
            <param name="useChunks">Boolean, if true, this will refresh the buffer in chunks.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.DrawFeatures(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            If useChunks is true, then this method
            </summary>
            <param name="args">The GeoArgs that control how these features should be drawn.</param>
            <param name="indices">The features that should be drawn.</param>
            <param name="clipRectangles">If an entire chunk is drawn and an update is specified, this clarifies the changed rectangles.</param>
            <param name="useChunks">Boolean, if true, this will refresh the buffer in chunks.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This will draw any features that intersect this region.  To specify the features
            directly, use OnDrawFeatures.  This will not clear existing buffer content.
            For that call Initialize instead.
            </summary>
            <param name="args">A GeoArgs clarifying the transformation from geographic to image space</param>
            <param name="regions">The geographic regions to draw</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.BuildLineString(System.Drawing.Drawing2D.GraphicsPath,DotSpatial.Topology.IBasicLineString,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Builds a linestring into the graphics path, using minX, maxY, dx and dy for the transformations.
            </summary>
            <param name="path"></param>
            <param name="ls"></param>
            <param name="minX"></param>
            <param name="maxY"></param>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.OnBufferChanged(System.Collections.Generic.List{System.Drawing.Rectangle})">
            <summary>
            Fires the OnBufferChanged event
            </summary>
            <param name="clipRectangles">The Rectangle in pixels</param>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.OnFinishDrawing">
            <summary>
            Indiciates that whatever drawing is going to occur has finished and the contents
            are about to be flipped forward to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.OnCreateLabels">
            <summary>
            A default method to generate a label layer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapLineLayer.OnStartDrawing">
            <summary>
            Occurs when a new drawing is started, but after the BackBuffer has been established.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapLineLayer.BufferChanged">
            <summary>
            Fires an event that indicates to the parent map-frame that it should first
            redraw the specified clip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLineLayer.BackBuffer">
            <summary>
            Gets or sets the back buffer that will be drawn to as part of the initialization process.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLineLayer.Buffer">
            <summary>
            Gets the current buffer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLineLayer.BufferEnvelope">
            <summary>
            Gets or sets the geographic region represented by the buffer
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLineLayer.BufferRectangle">
            <summary>
            Gets or sets the rectangle in pixels to use as the back buffer.
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLineLayer.LabelLayer">
            <summary>
            Gets or sets the label layer that is associated with this line layer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapLineLayer.NumChunks">
            <summary>
            Gets an integer number of chunks for this layer.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapPointLayer">
            <summary>
            This is a specialized FeatureLayer that specifically handles point drawing
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.#ctor">
            <summary>
            This creates a blank MapPointLayer with the DataSet set to an empty new featureset of the Point featuretype.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.#ctor(DotSpatial.Data.IFeatureSet)">
            <summary>
            Creates a new instance of a GeoPointLayer without sending any status messages
            </summary>
            <param name="featureSet">The IFeatureLayer of data values to turn into a graphical GeoPointLayer</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.#ctor(DotSpatial.Data.IFeatureSet,System.Collections.Generic.ICollection{DotSpatial.Symbology.ILayer})">
            <summary>
            Creates a new instance of the point layer where the container is specified
            </summary>
            <param name="featureSet"></param>
            <param name="container"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.#ctor(DotSpatial.Data.IFeatureSet,System.Collections.Generic.ICollection{DotSpatial.Symbology.ILayer},System.Boolean)">
            <summary>
            Creates a new instance of the point layer where the container is specified
            </summary>
            <param name="featureSet"></param>
            <param name="container"></param>
            <param name="notFinished"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.Clear(System.Collections.Generic.List{System.Drawing.Rectangle},System.Drawing.Color)">
            <summary>
            Call StartDrawing before using this.
            </summary>
            <param name="rectangles">The rectangular region in pixels to clear.</param>
            <param name= "color">The color to use when clearing.  Specifying transparent
            will replace content with transparent pixels.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.CreateLayerFromSelectedFeatures(DotSpatial.Symbology.IFeatureLayer@)">
            <summary>
            This is testing the idea of using an input parameter type that is marked as out
            instead of a return type.
            </summary>
            <param name="result">The result of the creation</param>
            <returns>Boolean, true if a layer can be created</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.CreateLayerFromSelectedFeatures(DotSpatial.Controls.MapPointLayer@)">
            <summary>
            This is the strong typed version of the same process that is specific to geo point layers.
            </summary>
            <param name="result">The new GeoPointLayer to be created</param>
            <returns>Boolean, true if there were any values in the selection</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.DrawFeatures(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.IFeature},System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            If useChunks is true, then this method
            </summary>
            <param name="args">The GeoArgs that control how these features should be drawn.</param>
            <param name="features">The features that should be drawn.</param>
            <param name="clipRectangles">If an entire chunk is drawn and an update is specified, this clarifies the changed rectangles.</param>
            <param name="useChunks">Boolean, if true, this will refresh the buffer in chunks.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.DrawFeatures(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            If useChunks is true, then this method
            </summary>
            <param name="args">The GeoArgs that control how these features should be drawn.</param>
            <param name="indices">The features that should be drawn.</param>
            <param name="clipRectangles">If an entire chunk is drawn and an update is specified, this clarifies the changed rectangles.</param>
            <param name="useChunks">Boolean, if true, this will refresh the buffer in chunks.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This will draw any features that intersect this region.  To specify the features
            directly, use OnDrawFeatures.  This will not clear existing buffer content.
            For that call Initialize instead.
            </summary>
            <param name="args">A GeoArgs clarifying the transformation from geographic to image space</param>
            <param name="regions">The geographic regions to draw</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.FinishDrawing">
            <summary>
            Indicates that the drawing process has been finalized and swaps the back buffer
            to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.StartDrawing(System.Boolean)">
            <summary>
            Copies any current content to the back buffer so that drawing should occur on the
            back buffer (instead of the fore-buffer).  Calling draw methods without
            calling this may cause exceptions.
            </summary>
            <param name="preserve">Boolean, true if the front buffer content should be copied to the back buffer
            where drawing will be taking place.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.OnBufferChanged(System.Collections.Generic.List{System.Drawing.Rectangle})">
            <summary>
            Fires the OnBufferChanged event
            </summary>
            <param name="clipRectangles">The Rectangle in pixels</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.OnCreateLabels">
            <summary>
            A default method to generate a label layer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.OnFinishDrawing">
            <summary>
            Indiciates that whatever drawing is going to occur has finished and the contents
            are about to be flipped forward to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.OnStartDrawing">
            <summary>
            Occurs when a new drawing is started, but after the BackBuffer has been established.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.OpenFile(System.String,DotSpatial.Data.IProgressHandler)">
            <summary>
            Attempts to create a new GeoPointLayer using the specified file.  If the filetype is not
            does not generate a point layer, an exception will be thrown.
            </summary>
            <param name="fileName">A string fileName to create a point layer for.</param>
            <param name="progressHandler">Any valid implementation of IProgressHandler for receiving progress messages</param>
            <returns>A GeoPointLayer created from the specified fileName.</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapPointLayer.OpenFile(System.String)">
            <summary>
            Attempts to create a new GeoPointLayer using the specified file.  If the filetype is not
            does not generate a point layer, an exception will be thrown.
            </summary>
            <param name="fileName">A string fileName to create a point layer for.</param>
            <returns>A GeoPointLayer created from the specified fileName.</returns>
        </member>
        <member name="E:DotSpatial.Controls.MapPointLayer.BufferChanged">
            <summary>
            Occurs when drawing content has changed on the buffer for this layer
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPointLayer.BackBuffer">
            <summary>
            Gets or sets the back buffer that will be drawn to as part of the initialization process.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPointLayer.Buffer">
            <summary>
            Gets the current buffer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPointLayer.BufferEnvelope">
            <summary>
            Gets or sets the geographic region represented by the buffer
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPointLayer.BufferRectangle">
            <summary>
            Gets or sets the rectangle in pixels to use as the back buffer.
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPointLayer.LabelLayer">
            <summary>
            Gets or sets the label layer that is associated with this point layer.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapPolygonLayer">
            <summary>
            A layer with drawing characteristics for LineStrings
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.#ctor">
            <summary>
            Creates a new empty MapPolygonLayer with an empty FeatureSet of FeatureType Polygon
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.#ctor(DotSpatial.Data.IFeatureSet)">
            <summary>
            Constructor
            </summary>
            <param name="inFeatureSet"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.#ctor(DotSpatial.Data.IFeatureSet,System.Collections.Generic.ICollection{DotSpatial.Symbology.ILayer})">
            <summary>
            Constructor that also shows progress
            </summary>
            <param name="featureSet">A featureset that contains lines</param>
            <param name="container">An IContainer that the line layer should be created in</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.#ctor(DotSpatial.Data.IFeatureSet,System.Collections.Generic.ICollection{DotSpatial.Symbology.ILayer},System.Boolean)">
            <summary>
            Constructor that also shows progress
            </summary>
            <param name="featureSet">A featureset that contains lines</param>
            <param name="container">An IContainer that the line layer should be created in</param>
            <param name="notFinished"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.Clear(System.Collections.Generic.List{System.Drawing.Rectangle},System.Drawing.Color)">
            <summary>
            Call StartDrawing before using this.
            </summary>
            <param name="rectangles">The rectangular region in pixels to clear.</param>
            <param name= "color">The color to use when clearing.  Specifying transparent
            will replace content with transparent pixels.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.CreateLayerFromSelectedFeatures(DotSpatial.Symbology.IFeatureLayer@)">
            <summary>
            This is testing the idea of using an input parameter type that is marked as out
            instead of a return type.
            </summary>
            <param name="result">The result of the creation</param>
            <returns>Boolean, true if a layer can be created</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.CreateLayerFromSelectedFeatures(DotSpatial.Controls.MapPolygonLayer@)">
            <summary>
            This is the strong typed version of the same process that is specific to geo point layers.
            </summary>
            <param name="result">The new GeoPointLayer to be created</param>
            <returns>Boolean, true if there were any values in the selection</returns>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.DrawFeatures(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.IFeature},System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            If useChunks is true, then this method
            </summary>
            <param name="args">The GeoArgs that control how these features should be drawn.</param>
            <param name="features">The features that should be drawn.</param>
            <param name="clipRectangles">If an entire chunk is drawn and an update is specified,
             this clarifies the changed rectangles.</param>
            <param name="useChunks">Boolean, if true, this will refresh the buffer in chunks.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.DrawFeatures(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
            <summary>
            If useChunks is true, then this method
            </summary>
            <param name="args">The GeoArgs that control how these features should be drawn.</param>
            <param name="indices">The features that should be drawn.</param>
            <param name="clipRectangles">If an entire chunk is drawn and an update is specified, this clarifies the changed rectangles.</param>
            <param name="useChunks">Boolean, if true, this will refresh the buffer in chunks.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.DrawRegions(DotSpatial.Controls.MapArgs,System.Collections.Generic.List{DotSpatial.Data.Extent})">
            <summary>
            This will draw any features that intersect this region.  To specify the features
            directly, use OnDrawFeatures.  This will not clear existing buffer content.
            For that call Initialize instead.
            </summary>
            <param name="args">A GeoArgs clarifying the transformation from geographic to image space</param>
            <param name="regions">The geographic regions to draw</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.FinishDrawing">
            <summary>
            Indicates that the drawing process has been finalized and swaps the back buffer
            to the front buffer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.StartDrawing(System.Boolean)">
            <summary>
            Copies any current content to the back buffer so that drawing should occur on the
            back buffer (instead of the fore-buffer).  Calling draw methods without
            calling this may cause exceptions.
            </summary>
            <param name="preserve">Boolean, true if the front buffer content should be copied to the back buffer
            where drawing will be taking place.</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.OnBufferChanged(System.Collections.Generic.List{System.Drawing.Rectangle})">
            <summary>
            Fires the OnBufferChanged event
            </summary>
            <param name="clipRectangles">The Rectangle in pixels</param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.OnCreateLabels">
            <summary>
            A default method to generate a label layer.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.OnStartDrawing">
            <summary>
            Occurs when a new drawing is started, but after the BackBuffer has been established.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.DrawPaths(DotSpatial.Controls.MapArgs,System.Collections.Generic.IList{System.Drawing.Drawing2D.GraphicsPath})">
            <summary>
            Draws the GraphicsPaths.  Before we were effectively "re-creating" the same geometric
            </summary>
            <param name="e"></param>
            <param name="paths"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapPolygonLayer.BuildPolygon(System.Double[],DotSpatial.Data.ShapeRange,System.Drawing.Drawing2D.GraphicsPath,DotSpatial.Controls.MapArgs,DotSpatial.Controls.SoutherlandHodgman)">
            <summary>
            Appends the specified polygon to the graphics path.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapPolygonLayer.BufferChanged">
            <summary>
            Fires an event that indicates to the parent map-frame that it should first
            redraw the specified clip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPolygonLayer.BackBuffer">
            <summary>
            Gets or sets the back buffer that will be drawn to as part of the initialization process.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPolygonLayer.Buffer">
            <summary>
            Gets the current buffer.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPolygonLayer.BufferEnvelope">
            <summary>
            Gets or sets the geographic region represented by the buffer
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPolygonLayer.BufferRectangle">
            <summary>
            Gets or sets the rectangle in pixels to use as the back buffer.
            Calling Initialize will set this automatically.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapPolygonLayer.LabelLayer">
            <summary>
            Gets or sets the label layer that is associated with this polygon layer.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.SoutherlandHodgman">
            <summary>
            DoutherlandHodgmanClipper
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SoutherlandHodgman.#ctor(System.Drawing.Rectangle)">
            <summary>
            Create SoutherlandHodgman polygon clipper with clipping rectangle
            </summary>
            <param name="clipRect"></param>
        </member>
        <member name="M:DotSpatial.Controls.SoutherlandHodgman.#ctor">
            <summary>
            Create southerlandHodgman polygon clipper with default clipping rectangle
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SoutherlandHodgman.Clip(System.Collections.Generic.List{System.Drawing.PointF})">
            <summary>
            Calculates the Southerland-Hodgman clip using the actual drawing coordinates.
            This hopefully will be much faster than NTS which seems unncessarilly slow to calculate.
            http://www.codeguru.com/cpp/misc/misc/graphics/article.php/c8965
            </summary>
            <param name="points"></param>
            <returns>A modified list of points that has been clipped to the drawing bounds</returns>
        </member>
        <member name="M:DotSpatial.Controls.SoutherlandHodgman.Clip(System.Collections.Generic.List{System.Double[]})">
            <summary>
            Calculates the Southerland-Hodgman clip using the actual drawing coordinates.
            This specific overload works with arrays of doubles instead of PointF structures.
            This hopefully will be much faster than NTS which seems unncessarilly slow to calculate.
            http://www.codeguru.com/cpp/misc/misc/graphics/article.php/c8965
            </summary>
            <param name="vertexValues">The list of arrays of doubles where the X index is 0 and the Y index is 1.</param>
            <returns>A modified list of points that has been clipped to the drawing bounds</returns>
        </member>
        <member name="P:DotSpatial.Controls.SoutherlandHodgman.ClippingRectangle">
            <summary>
            Get or set the clipping rectangle used in subsequent Clip calls.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFunctionClickZoom">
            <summary>
            A MapFunction that can zoom into the map using clicks or rectangle dragging.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFunction">
            <summary>
            Tool
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IMapFunction">
            <summary>
            ITool
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.Activate">
            <summary>
            Forces activation
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.Deactivate">
            <summary>
            Forces deactivation.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.Draw(DotSpatial.Controls.MapDrawArgs)">
            <summary>
            This is the method that is called by the drawPanel.  The graphics coordinates are
            in pixels relative to the image being edited.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.DoMouseDoubleClick(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Forces this tool to execute whatever behavior should occur during a double click even on the panel
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.DoMouseDown(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Instructs this tool to perform any actions that should occur on the MouseDown event
            </summary>
            <param name="e">A MouseEventArgs relative to the drawing panel</param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.DoMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Instructs this tool to perform any actions that should occur on the MouseUp event
            </summary>
            <param name="e">A MouseEventArgs relative to the drawing panel</param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.DoMouseMove(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Instructs this tool to perform any actions that should occur on the MouseMove event
            </summary>
            <param name="e">A MouseEventArgs relative to the drawing panel</param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.DoMouseWheel(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Instructs this tool to perform any actions that should occur on the MouseWheel event
            </summary>
            <param name="e">A MouseEventArgs relative to the drawing panel</param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.Unload">
            <summary>
            Here, the entire plugin is unloading, so if there are any residual states
            that are not taken care of, this should remove them.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.DoKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            When a key is pressed while the map has the focus, this occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.DoKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            When a key returns to the up position, this occurs.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.IMapFunction.Init(DotSpatial.Controls.IMap)">
            <summary>
            Organizes the map that this tool will work with.
            </summary>
            <param name="inMap"></param>
        </member>
        <member name="E:DotSpatial.Controls.IMapFunction.FunctionActivated">
            <summary>
            Occurs when the function is activated
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.IMapFunction.FunctionDeactivated">
            <summary>
            Occurs when the function is deactivated.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFunction.CursorBitmap">
            <summary>
            This controls the cursor that this tool uses, unless the action has been cancelled by attempting
            to use the tool outside the bounds of the image.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFunction.PreventBackBuffer">
            <summary>
            If this is false, then the typical contents from the map's back buffer are drawn first,
            followed by the contents of this tool.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFunction.Enabled">
            <summary>
            Gets or sets a boolean that is true if this tool should be active.  If it is false,
            then this tool will not be sent mouse movement information.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFunction.YieldStyle">
            <summary>
            Different Pathways that allow functions to deactivate if another function that uses
            the specified UI domain activates.  This allows a scrolling zoom function to stay
            active while changing between pan and select functions which use the left mouse
            button.  The enumeration is flagged, and so can support multiple options.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFunction.ButtonImage">
            <summary>
            Describes a button image
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFunction.Map">
            <summary>
            Gets or sets the basic map that this tool interacts with.  This can alternately be set using
            the Init method.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IMapFunction.Name">
            <summary>
            Gets or sets the name that attempts to identify this plugin uniquely.  If the
            name is already in the tools list, this will modify the name set here by
            appending a number.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.#ctor">
            <summary>
            Creates a new instance of the map function.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Combines the constructor with an automatic call to the init method.  If you use this constructor
            overload, then it is not necessary to also call the init method.  The init method is supported
            because constructors cannot be specified through an interface.
            </summary>
            <param name="inMap">Any valid IMap interface</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.DoKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Instructs this tool to
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.DoMouseDoubleClick(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Forces this tool to execute whatever behavior should occur during a double click even on the panel
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.DoMouseDown(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Instructs this tool to perform any actions that should occur on the MouseDown event
            </summary>
            <param name="e">A MouseEventArgs relative to the drawing panel</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.DoMouseMove(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Instructs this tool to perform any actions that should occur on the MouseMove event
            </summary>
            <param name="e">A MouseEventArgs relative to the drawing panel</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.DoMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Instructs this tool to perform any actions that should occur on the MouseUp event
            </summary>
            <param name="e">A MouseEventArgs relative to the drawing panel</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.DoMouseWheel(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Instructs this tool to perform any actions that should occur on the MouseWheel event
            </summary>
            <param name="e">A MouseEventArgs relative to the drawing panel</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.Draw(DotSpatial.Controls.MapDrawArgs)">
            <summary>
            This is the method that is called by the drawPanel.  The graphics coordinates are
            in pixels relative to the image being edited.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.Init(DotSpatial.Controls.IMap)">
            <summary>
            Organizes the map that this tool will work with.
            </summary>
            <param name="inMap"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.Cancel">
            <summary>
            Cancels whatever drawing was being done by the tool and resets the cursor to an arrow.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.GetAvailableName(System.String)">
            <summary>
            Gets an available name given the base name.
            </summary>
            <param name="baseName"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnDraw(DotSpatial.Controls.MapDrawArgs)">
            <summary>
            This allows sub-classes to customize the drawing that occurs.  All drawing is done
            in the image coordinate space, where 0, 0 is the upper left corner of the image.
            </summary>
            <param name="e">A PaintEventArgs where the graphics object is already in image coordinates</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            fires the KeyUp event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnMouseDoubleClick(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Fires the DoubleClick event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnMouseDown(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            fires the MouseDown event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnMouseMove(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            allows for inheriting tools to control OnMouseMove
            </summary>
            <param name="e">A GeoMouseArgs parameter</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Fires the MouseUP event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnMouseWheel(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Allows for inheriting tools to override the behavior
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.Activate">
            <summary>
            Forces activation
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.Deactivate">
            <summary>
            Deactivate is like when someone clicks on a different button.  It may not
            involve the whole plugin being unloaded.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.Unload">
            <summary>
            Here, the entire plugin is unloading, so if there are any residual states
            that are not taken care of, this should remove them.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnActivate">
            <summary>
            This is fired when enabled is set to true, and firing this will set enabled to true
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnDeactivate">
            <summary>
            this is fired when enabled is set to false, and firing this will set enabled to false.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.OnUnload">
            <summary>
            This occurs when the entire plugin is being unloaded.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunction.DoKeyDown(System.Windows.Forms.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="E:DotSpatial.Controls.MapFunction.FunctionActivated">
            <summary>
            Occurs when the function is activated
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapFunction.FunctionDeactivated">
            <summary>
            Occurs when the function is deactivated.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapFunction.MouseDown">
            <summary>
            Occurs during a mouse down event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapFunction.MouseMove">
            <summary>
            Occurs during a mouse move event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapFunction.MouseUp">
            <summary>
            Occurs during a mouse up event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapFunction.MouseWheel">
            <summary>
            Occurs during a mousewheel event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapFunction.MouseDoubleClick">
            <summary>
            Occurs during a double click event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MapFunction.KeyUp">
            <summary>
            Occurs during a key up event
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunction.ButtonImage">
            <summary>
            Describes a button image
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunction.CursorBitmap">
            <summary>
            This controls the cursor that this tool uses, unless the action has been cancelled by attempting
            to use the tool outside the bounds of the image.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunction.Enabled">
            <summary>
            Gets or sets a boolean that is true if this tool should be handed drawing instructions
            from the screen.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunction.Map">
            <summary>
            Gets or sets the basic map that this tool interacts with.  This can alternately be set using
            the Init method.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunction.Name">
            <summary>
            Gets or sets the name that attempts to identify this plugin uniquely.  If the
            name is already in the tools list, this will modify the name stored here.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunction.PreventBackBuffer">
            <summary>
            If this is false, then the typical contents from the map's back buffer are drawn first,
            followed by the contents of this tool.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunction.YieldStyle">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionClickZoom.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Creates a new instance of SelectTool
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionClickZoom.OnDraw(DotSpatial.Controls.MapDrawArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionClickZoom.OnMouseDown(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the MouseDown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionClickZoom.OnMouseMove(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles MouseMove
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionClickZoom.OnMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the Mouse Up situation
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:DotSpatial.Controls.FunctionMode">
            <summary>
            DefaultTools
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.FunctionMode.Info">
            <summary>
            Mousewheel still zooms the map, but left clicking brings items into the view.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.FunctionMode.ZoomIn">
            <summary>
            Zooms into the map with the left mouse button and zooms out with the right mouse button.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.FunctionMode.ZoomOut">
            <summary>
            Zooms out by clicking the left mouse button.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.FunctionMode.Pan">
            <summary>
            Pans the map with the left mouse button, context with the right and zooms with the mouse wheel
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.FunctionMode.Select">
            <summary>
            Selects shapes with the left mouse button, context with the right and zooms with the mouse wheel
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.FunctionMode.Label">
            <summary>
            Left button selects, moves or edits, right produces a context menu
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.FunctionMode.Measure">
            <summary>
            Left clicking builds either a linestring or a polygon while a dialog shows distances.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.FunctionMode.None">
            <summary>
            Disables all the tools
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.GeoMouseArgs">
            <summary>
            MouseArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.GeoMouseArgs.#ctor(System.Windows.Forms.MouseEventArgs,DotSpatial.Controls.IMap)">
            <summary>
            Creates a new instance of MouseArgs
            </summary>
            <param name="e"></param>
            <param name="inMap"></param>
        </member>
        <member name="P:DotSpatial.Controls.GeoMouseArgs.GeographicLocation">
            <summary>
            Gets the position of the Mouse Event in geographic coordinates
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.GeoMouseArgs.Map">
            <summary>
            Gets a simple interface for the map where these events were generated
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.GeoMouseArgs.Handled">
            <summary>
            Gets or sets a handled.  If this is set to true, then the mouse event is considered to
            be handled and will not be passed to any other functions in the stack.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFunctionGlyph">
            <summary>
            This is a glyph on the map that if you click on it, it will launch the PluginDialog.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MapFunctionGlyph._previousCursor">
            <summary>
            This is the cursor that was the cursor before we did anything.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.#ctor">
            <summary>
            Creates a new instance of the GlyphFunction
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.#ctor(DotSpatial.Controls.Map)">
            <summary>
            Creates a new instance of a GLyphFunction with the specified Map
            </summary>
            <param name="map"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.OnDraw(DotSpatial.Controls.MapDrawArgs)">
            <summary>
            Draws the glyph on the map.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.OnDrawGlyph(System.Windows.Forms.PaintEventArgs)">
            <summary>
            The drawing space is only the size of the GlyphBounds.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.OnDrawGlyphLit(System.Windows.Forms.PaintEventArgs)">
            <summary>
            When the mouse moves over a glyph, it should light up or change to show it is clickable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.OnGlpyhClick(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Occurs when the mouse clicks on the glyph
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.OnGlyphMouseEnter(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Occurs when the mouse leaves the glyph
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.OnGlyphMouseLeave(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Occurs when the mouse enters the glyph
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.OnMouseDown(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Even though we don't take action here, we need to indicate that we handled the event so that the other
            functions that my be active don't do anything for this part.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.OnMouseMove(DotSpatial.Controls.GeoMouseArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionGlyph.OnMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionGlyph.Cursor">
            <summary>
            The cursor to use when the mouse is over this glyph.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionGlyph.GlpyhBounds">
            <summary>
            This should be overridden by the specific glyph so they don't overlap and appear where they should.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionGlyph.HasMouse">
            <summary>
            Gets or sets a Boolean indicating whether or not this glyph currently holds the mouse
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionGlyph.LitImage">
            <summary>
            Unless the OnDrawGlyphLit method is overridden, this is drawn when the mouse is over the image.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionGlyph.NormalImage">
            <summary>
            Unless the OnDrawGlyph method is overridden, this is drawn.  If no LitImage is specified,
            then this image will be drawn also for the LitImage case.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFunctionIdentify">
            <summary>
            IdentifyFunction
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionIdentify.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Creates a new instance of IdentifyFunction
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionIdentify.OnMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Overrides the OnMouseUp event to handle the situation where we are trying to
            identify the vector features in the specified area.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:DotSpatial.Controls.MapFunctionLabelSelect">
            <summary>
            A MapFunction that allows labels to be selected.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionLabelSelect.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Initializes a new instance of the MapFunctionLabelSelect class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionLabelSelect.OnDraw(DotSpatial.Controls.MapDrawArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionLabelSelect.OnMouseDown(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the MouseDown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionLabelSelect.OnMouseMove(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles MouseMove
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionLabelSelect.OnMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the Mouse Up situation
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionLabelSelect.SelectionEnvelope">
            <summary>
            Selection envelope
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MeasureDialog">
            <summary>
            MeasureDialog
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MeasureDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MeasureDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MeasureDialog.#ctor">
            <summary>
            Creates a new instance of MeasureDialog
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MeasureDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="E:DotSpatial.Controls.MeasureDialog.MeasureModeChanged">
            <summary>
            Occurs when the measuring mode has been changed.
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.MeasureDialog.MeasurementsCleared">
            <summary>
            Occurs when the clear button has been pressed.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MeasureDialog.Distance">
            <summary>
            Gets the distance in meters of just one segment
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MeasureDialog.TotalDistance">
            <summary>
            The total distance across all segments in meters
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MeasureDialog.Area">
            <summary>
            Gets the current area being calculated in square meters
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MeasureDialog.TotalArea">
            <summary>
            Gets or sets the total area in square meters
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MeasureDialog.MeasureMode">
            <summary>
            Gets or sets whether to display the distances or areas.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFunctionMeasure">
            <summary>
            A MapFunction that allows measuring the distance on the map.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionMeasure.#ctor">
            <summary>
            Initializes a new instance of the MapFunctionMeasure class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionMeasure.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Creates a new instance of AddShapeFunction, but specifies
            the Map that this function should be applied to.
            </summary>
            <param name="map"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionMeasure.OnActivate">
            <summary>
            Forces this function to begin collecting points for building a new shape.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionMeasure.OnDeactivate">
            <summary>
            Allows for new behavior during deactivation.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionMeasure.OnDraw(DotSpatial.Controls.MapDrawArgs)">
            <summary>
            Handles drawing of editing features
            </summary>
            <param name="e">The drawing args</param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionMeasure.OnMouseMove(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            updates the auto-filling X and Y coordinates
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionMeasure.OnMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the Mouse-Up situation
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionMeasure.OnUnload">
            <summary>
            Occurs when this function is removed.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionMeasure.FeatureSet">
            <summary>
            Gets or sets the featureset to modify
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MeasureMode">
            <summary>
            MeasureModes
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MeasureMode.Distance">
            <summary>
            Measuring linear distance
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.MeasureMode.Area">
            <summary>
            Measuring square area
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFunctionPan">
            <summary>
            A MapFunction that can pan the map.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionPan.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Initializes a new instance of the MapFunctionPan class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionPan.OnMouseDown(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the actions that the tool controls during the OnMouseDown event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionPan.OnMouseMove(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the mouse move event, changing the viewing extents to match the movements
            of the mouse if the left mouse button is down.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionPan.OnMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Mouse Up
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionPan.IsDragging">
            <summary>
            This indicates that this tool is currently being used.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFunctionSelect">
            <summary>
            SelectTool
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionSelect.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Creates a new instance of SelectTool
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionSelect.OnDraw(DotSpatial.Controls.MapDrawArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionSelect.OnMouseDown(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the MouseDown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionSelect.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles pressing the delete key to remove features from the specified layer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionSelect.OnMouseMove(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles MouseMove
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionSelect.OnMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the Mouse Up situation
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:DotSpatial.Controls.YieldStyles">
            <summary>
            Describe different behaviors that map functions can have when working with
            respect to other map-functions.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.YieldStyles.None">
            <summary>
            This is a null state for testing, and should not be used directly.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.YieldStyles.LeftButton">
            <summary>
            This function will deactivate if another LeftButton function activates.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.YieldStyles.RightButton">
            <summary>
            This function will deactivate if another RightButton function activates.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.YieldStyles.Scroll">
            <summary>
            This function will deactivate if another scroll function activates.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.YieldStyles.Keyboard">
            <summary>
            This function will deactivate if another keyboard function activates.
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.YieldStyles.AlwaysOn">
            <summary>
            This function is like a glyph and never yields to other functions.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFunctionZoom">
            <summary>
            A MapFunction that can zoom the map using the scroll wheel.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionZoom.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Initializes a new instance of the MapFunctionZoom class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionZoom.OnMouseWheel(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Mouse Wheel
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionZoom.Sensitivity">
            <summary>
            Gets or sets the wheel zoom sensitivity.  Increasing makes it more sensitive.  Maximum is 0.5, Minimum is 0.01
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionZoom.ForwardZoomsIn">
            <summary>
            Controls the sense (direction) of zoom (in or out) as you roll the mouse wheel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.MapFunctionZoom.TimerInterval">
            <summary>
            Gets or sets the full refresh timeout value in milliseconds
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.MapFunctionZoomOut">
            <summary>
            A MapFunction that can zoom the map out based on mouse clicks.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionZoomOut.#ctor(DotSpatial.Controls.IMap)">
            <summary>
            Creates a new instance of SelectTool
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.MapFunctionZoomOut.OnMouseUp(DotSpatial.Controls.GeoMouseArgs)">
            <summary>
            Handles the Mouse Up situation
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:DotSpatial.Controls.Modeler">
            <summary>
            A modeler form which allows users to create models with visual representations of tools
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.#ctor">
            <summary>
            Creates an instance of the spatial modeler Element
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.PixelToVirtual(System.Drawing.Point)">
            <summary>
            Translates between pixel location and virtual location
            </summary>
            <param name="pt">A point in pixel coordinantes. 0, 0 is the top left of the modeler</param>
            <returns>A point in the virtual model coordinantes</returns>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.PixelToVirtual(System.Int32,System.Int32)">
            <summary>
            Translates between pixel location and virtual location
            </summary>
            <param name="x">the X location in pixel coordinantes</param>
            <param name="y">the Y location in pixel coordinantes</param>
            <returns>A point in the virtual model coordinantes</returns>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.PixelRectToVirtualRect(System.Drawing.Rectangle)">
            <summary>
            Returns a rectangle in virtual coordinantes based on a pixel rectangle
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.VirtualToPixel(System.Drawing.Point)">
            <summary>
            Translates between virtual model coords and pixels
            </summary>
            <param name="pt">A point in the virtual model coordinantes</param>
            <returns>A point in pixel coordinantes. 0, 0 is the top left of the modeler</returns>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.VirtualToPixel(System.Int32,System.Int32)">
            <summary>
            Translates between virtual model coords and pixels
            </summary>
            <param name="x">the X location in virtual model coordinantes</param>
            <param name="y">the Y location in virtual model coordinantes</param>
            <returns>A point in pixel coordinantes. 0, 0 is the top left of the modeler</returns>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.AddData(DotSpatial.Modeling.Forms.Parameter,System.Drawing.Point)">
            <summary>
            Adds a data element to the modeler based on a parameter descrition
            </summary>
            <param name="par">The parameter to add to the modeler</param>
            <param name="location">A point representing the virtual location of the element</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.AddData(DotSpatial.Modeling.Forms.Parameter,System.Drawing.Point,System.String)">
            <summary>
            Adds a data element to the modeler
            </summary>
            <param name="par">The data set to add to the modeler</param>
            <param name="location">A point representing the virtual location of the data element</param>
            <param name="name">The name to give the element</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.AddArrow(DotSpatial.Modeling.Forms.ModelElement,DotSpatial.Modeling.Forms.ModelElement)">
            <summary>
            Adds an arrow element given a source and destination element
            </summary>
            <param name="sourceElement"></param>
            <param name="destElement"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.AddElement(DotSpatial.Modeling.Forms.ModelElement,System.Drawing.Point)">
            <summary>
            Adds a element to the model
            </summary>
            <param name="element">The new model Element to add to the model form</param>
            <param name="location">A point representing the virtual location of the element</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.ClearSelectedElements">
            <summary>
            Clears all the elements in the _selectedElements list, removes their highlights and puts them back in the _modelElements list
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.RemoveSelectedElement(DotSpatial.Modeling.Forms.ModelElement)">
            <summary>
            Removes the specified element from the _selectedElements list
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.AddSelectedElement(DotSpatial.Modeling.Forms.ModelElement)">
            <summary>
            Adds an element to the _modelElementsSelected Array and highlights it
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.DeleteElement(DotSpatial.Modeling.Forms.ModelElement)">
            <summary>
            Removes a specific element from the model clearing any links it has to other elements
            </summary>
            <param name="element">The element to remove</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.AddTool(DotSpatial.Modeling.Forms.ITool,System.Drawing.Point)">
            <summary>
            Adds a tool to the Modeler
            </summary>
            <param name="tool">the tool to add to the modeler</param>
            <param name="location">A point representing the virtual location of the tool</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.AddTool(DotSpatial.Modeling.Forms.ITool,System.String,System.Drawing.Point)">
            <summary>
            Adds a tool to the Modeler
            </summary>
            <param name="tool">the tool to add to the modeler</param>
            <param name="modelName"></param>
            <param name="location">A point representing the virtual location of the tool</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.SaveModel">
            <summary>
            Saves the current project, prompting the user to save as if the project is new.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.SaveModel(System.Boolean,System.Boolean)">
            <summary>
            Saves the current project to disk.
            </summary>
            <param name="promptOverwrite">True to prompt for overwrite if file exists</param>
            <param name="promptSaveAs">True show save as dialog</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.SaveModel(System.String)">
            <summary>
            Saves a copy of the model to the selected file without renaming the current project
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.LoadModel">
            <summary>
            Prompts the user to load a model and asks them if they want to save the current model first
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.LoadModel(System.String)">
            <summary>
            Loads a model from file closing the existing model without saving it
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.CreateNewModel(System.Boolean)">
            <summary>
            Creates a new model
            </summary>
            <param name="promptSave">if true prompts user to save current model if it is not saved</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.DeleteSelectedElements">
            <summary>
            Deletes all of the selected elements if it is allowed
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.ZoomIn">
            <summary>
            Zooms the model in 20%
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.ZoomOut">
            <summary>
            Zooms the model out 20%
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.CenterModelerOnPoint(System.Drawing.Point)">
            <summary>
            Centers the map on a given point
            </summary>
            <param name="centerPoint">A Point in the modelers virtual coordinant system</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.ZoomFullExtent">
            <summary>
            Zooms to the extent of all elements in the model and centers the modeler on them
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.GenerateDefaultOutput(DotSpatial.Modeling.Forms.Parameter)">
            <summary>
            Creates a default output locations for tools.
            </summary>
            <param name="par"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.ExecuteModel(System.String@)">
            <summary>
            Executes a model after verifying that it is ready
            </summary>
            <param name="error">A string parameter which will contains a error string if one is generated</param>
            <returns>Returns true if it executed succesfully</returns>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            On Key Up
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            When the users clicks the mouse this event fires
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            When the mouse is moved this event fires
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            When the user mouses up after a single click this event fires
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnMouseLeave(System.EventArgs)">
            <summary>
            Occurs when the mouse leaves.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnDoubleClick(System.EventArgs)">
            <summary>
            When the user double clicks on the model this event fires
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Adds a tool to the modeler
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Allows a drag into the modeler
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.UpdateBackBuffer">
            <summary>
            Paints the elements to the backbuffer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            When the element is called on to be painted this method is called
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            When the form draws the background do nothing
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnResize(System.EventArgs)">
            <summary>
            Redraws the background when the form is resized
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:DotSpatial.Controls.Modeler.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.Modeler.OnModelFilenameChanged(System.EventArgs)">
            <summary>
            Fires when the Filename of the project is changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:DotSpatial.Controls.Modeler.ModelFilenameChanged">
            <summary>
            Occurs when the model fileName has changed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.MaxExecutionThreads">
            <summary>
            The maximum number of processes to execute at the same time
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.EnableLinking">
            <summary>
            Turns linking by mouse on and off
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.DrawingQuality">
            <summary>
            Gets or Sets the drawing quality for the toolbox
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.DataFont">
            <summary>
            Gets or sets the font that will be used to label the data in the modeler
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.DataColor">
            <summary>
            Gets or sets the color that data should have in the modeler
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.DataShape">
            <summary>
            Gets or sets the shape that data should be represented with in the modeler
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.ToolFont">
            <summary>
            Gets or sets the font that will be used to label the tools in the modeler
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.ToolColor">
            <summary>
            Gets or sets the color that tools should have in the modeler
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.ToolShape">
            <summary>
            Gets or sets the shape that tools should be represented with in the modeler
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.ShowWaterMark">
            <summary>
            Turns the DotSpatial watermark in the lower right hand corner on or off. Defautl true.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.ToolManager">
            <summary>
            Sets the toolManager used to create instances of all the tools.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.IsInitialized">
            <summary>
            Gets or Sets if the model drawing needs to be initialized
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.ZoomFactor">
            <summary>
            Gets or sets the zoom factor of the map values below 0 zoom out, values above 1 zoom in. 1 = no zoom
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.ModelFilename">
            <summary>
            Gets or sets the fileName of the current model
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.DefaultFileExtension">
            <summary>
            Gets or sets the extension used by default for opening, saving and creating new models. ex "mwm"
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Modeler.WorkingPath">
            <summary>
            Gets or sets the working path for the model
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ModelerForm">
            <summary>
            A form used in Brian's toolkit code
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ModelerForm.#ctor">
            <summary>
            Creates a new instance of the modeler's form
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.ModelerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ModelerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Controls.ModelerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ModelerForm.Modeler">
            <summary>
            Gets modeler in the form
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ModelerToolStrip">
            <summary>
            A Brian Marchioni original toolstrip... preloaded with content.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ModelerToolStrip.#ctor">
            <summary>
            Creates an instance of the toolstrip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ModelerToolStrip.Modeler">
            <summary>
            Gets or sets the modeler currently associated with the toolstrip
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.PageSetupForm">
            <summary>
            A dialog that allows users to modify the size of the layout paper and margins
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.PageSetupForm.#ctor(System.Drawing.Printing.PrinterSettings)">
            <summary>
             Creates a new instance of the Page Setup Form
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:DotSpatial.Controls.PageSetupForm.IsValidMargin(System.String)">
            <summary>
            Takes a string and returns true if it can be converted to a double
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.PageSetupForm.OK_Button_Click(System.Object,System.EventArgs)">
            <summary>
            Sets the printerSettings to the new settings and sets the result to OK
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.PageSetupForm.Cancel_Button_Click(System.Object,System.EventArgs)">
            <summary>
            Disgards the settings and sets dialogresult to cancel
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.PageSetupForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.PageSetupForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Controls.PageSetupForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.IconMenuItem">
            <summary>
            Handles drawing by adding an icon to the mix.
            Owner draw must be set to true for this to work.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.IconMenuItem.#ctor(System.String,System.Drawing.Icon,System.EventHandler)">
            <summary>
            Creates a new instance of the Icon Menu Item with the specified name
            </summary>
            <param name="name"></param>
            <param name="icon"></param>
            <param name="onClick"></param>
        </member>
        <member name="M:DotSpatial.Controls.IconMenuItem.#ctor(System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            Creates a new instance of the Icon Menu Item with the specified name
            </summary>
            <param name="name"></param>
            <param name="image"></param>
            <param name="onClick"></param>
        </member>
        <member name="M:DotSpatial.Controls.IconMenuItem.#ctor(System.String,System.EventHandler)">
            <summary>
            Creates a new instance of the Icon Menu Item with the specified name
            </summary>
            <param name="name"></param>
            <param name="onClick"></param>
        </member>
        <member name="M:DotSpatial.Controls.IconMenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.IconMenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.IconMenuItem.Icon">
            <summary>
            Gets or sets the icon to be drawn to the left of this menu item.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.IconMenuItem.Image">
            <summary>
            Gets or sets the image to be drawn to the left of this menu item
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.Icons">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Icons.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.Icons.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.IContainsRibbonComponents">
            <summary>
            Used to extract all child components from RibbonItem objects
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.IContainsRibbonComponents.GetAllChildComponents">
            <summary>
            Gets all the Child Components
            </summary>
            <returns></returns>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.IContainsSelectableRibbonItems">
            <summary>
            Exposes GetItems, to indicate that the type contains a collection of RibbonItems
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.IContainsSelectableRibbonItems.GetItems">
            <summary>
            When implemented, must return an  enumerator to acces the items inside the type
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.IContainsSelectableRibbonItems.GetContentBounds">
            <summary>
            When implemented, must return the bounds of the content where items are displayed
            </summary>
            <returns></returns>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.IDropDownRibbonItem">
            <summary>
            This interface controls the properties for drop down ribbon items
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.IDropDownRibbonItem.DropDownItems">
            <summary>
            Gets the collection of drop down items
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.IDropDownRibbonItem.DropDownButtonBounds">
            <summary>
            Gets the bounds of the entire collection of drop-down items
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.IDropDownRibbonItem.DropDownButtonVisible">
            <summary>
            Gets a boolean that is true if the drop down button is visible.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.IDropDownRibbonItem.DropDownButtonSelected">
            <summary>
            Gets a boolean that is true if the drop down button is selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.IDropDownRibbonItem.DropDownButtonPressed">
            <summary>
            Gets a boolean that is true if the drop down button is pressed
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.IRibbonElement">
            <summary>
            Interface that every drawable ribbon element must implement
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.IRibbonElement.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <summary>
            Called on every element when its time to draw itself
            </summary>
            <param name="sender">Object that is invoking the paint element</param>
            <param name="e">Paint event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.IRibbonElement.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Gets the size in pixels needed for the element in the specified mode
            </summary>
            <param name="sender">Object that sends the measure message</param>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.IRibbonElement.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Called to make the element aware of its actual bounds on the control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.IRibbonElement.Bounds">
            <summary>
            Gets the bounds of the item
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.IScrollableRibbonItem">
            <summary>
            Implemented by Ribbon items that has scrollable content
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.IScrollableRibbonItem.ScrollUp">
            <summary>
            Scrolls the content up
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.IScrollableRibbonItem.ScrollDown">
            <summary>
            Scrolls the content down
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.IScrollableRibbonItem.ContentBounds">
            <summary>
            Gets the bounds of the content (without scrolling controls)
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.Ribbon">
            <summary>
            Provides a Ribbon toolbar
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.Ribbon.CAPTION_BAR_HEIGHT">
            <summary>
            CaptionBarHeight
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.#ctor">
            <summary>
            Creates a new Ribbon control
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.MouseHookMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Resends the mousedown to PopupManager
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon._mouseHook_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Checks if MouseWheel should be raised
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnOrbClicked(System.EventArgs)">
            <summary>
            Raises the OrbClicked event
            </summary>
            <param name="e">event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnOrbDoubleClicked(System.EventArgs)">
            <summary>
            Raises the OrbDoubleClicked
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.SetUpHooks">
            <summary>
            Initializes hooks
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.Ribbon_Disposed(System.Object,System.EventArgs)">
            <summary>
            Catches the disposal of the ribbon
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.ShowOrbDropDown">
            <summary>
            Shows the Orb's dropdown
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.ShowOrbDropDown(System.Drawing.Point)">
            <summary>
            Shows the Orb's dropdown at the specified point.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.RenewSensor">
            <summary>
            Drops out the old sensor and creates a new one
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.SetActualBorderMode(DotSpatial.Controls.RibbonControls.RibbonWindowMode)">
            <summary>
            Sets the value of the <see cref="P:DotSpatial.Controls.RibbonControls.Ribbon.BorderMode"/> property
            </summary>
            <param name="borderMode">Actual border mode accquired</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.SetCaptionButtonsVisible(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:DotSpatial.Controls.RibbonControls.Ribbon.CaptionButtonsVisible"/> property
            </summary>
            <param name="visible">Value to set to the caption buttons</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.SuspendUpdating">
            <summary>
            Suspends any drawing/regions update operation
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.ResumeUpdating">
            <summary>
            Resumes any drawing/regions update operation
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.ResumeUpdating(System.Boolean)">
            <summary>
            Resumes any drawing/regions update operation
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.RemoveHelperControls">
            <summary>
            Removes all helper controls placed by any reason.
            Contol's visibility is set to false before removed.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.TabHitTest(System.Int32,System.Int32)">
            <summary>
            Hittest on tab
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>true if a tab has been clicked</returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.UpdateRegions">
            <summary>
            Updates the regions of the tabs and the tab content bounds of the active tab
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.UpdateRegions(System.Drawing.Graphics)">
            <summary>
            Updates the regions of the tabs and the tab content bounds of the active tab
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnRegionsChanged">
            <summary>
            Called when the tabs collection has changed (Tabs has been added or removed)
            and region re-measuring is necessary
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.RedrawTab(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Redraws the specified tab
            </summary>
            <param name="tab"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.SetSelectedTab(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Sets the currently selected tab
            </summary>
            <param name="tab"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.SuspendSensor">
            <summary>
            Suspends the sensor activity
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.ResumeSensor">
            <summary>
            Resumes the sensor activity
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.RedrawArea(System.Drawing.Rectangle)">
            <summary>
            Redraws the specified area on the sensor's control
            </summary>
            <param name="area"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.ActivateNextTab">
            <summary>
            Activates the next tab available
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.ActivatePreviousTab">
            <summary>
            Activates the previous tab available
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OrbMouseDown">
            <summary>
            Handles the mouse down on the orb area
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.PaintOn(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the Ribbon on the specified device
            </summary>
            <param name="g">Device where to paint on</param>
            <param name="clip">Clip rectangle</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnActiveTabChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.Ribbon.ActiveTabChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnActualBorderModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="P:DotSpatial.Controls.RibbonControls.Ribbon.ActualBorderMode"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnCaptionButtonsVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.Ribbon.CaptionButtonsVisibleChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overriden. Raises the Paint event and draws all the Ribbon content
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden. Raises the MouseMove event and tunnels the message to child elements
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden. Raises the MouseDown event and tunnels the message to child elements
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse wheel
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnSizeChanged(System.EventArgs)">
            <summary>
            Overriden. Raises the OnSizeChanged event and performs layout calculations
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.Ribbon.OnParentChanged(System.EventArgs)">
            <summary>
            Handles when its parent has changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.Ribbon.OrbClicked">
            <summary>
            Occours when the Orb is clicked
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.Ribbon.OrbDoubleClick">
            <summary>
            Occours when the Orb is double-clicked
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.Ribbon.ActiveTabChanged">
            <summary>
            Occours when the <see cref="P:DotSpatial.Controls.RibbonControls.Ribbon.ActiveTab"/> property value has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.Ribbon.ActualBorderModeChanged">
            <summary>
            Occours when the <see cref="P:DotSpatial.Controls.RibbonControls.Ribbon.ActualBorderMode"/> property has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.Ribbon.CaptionButtonsVisibleChanged">
            <summary>
            Occours when the <see cref="P:DotSpatial.Controls.RibbonControls.Ribbon.CaptionButtonsVisible"/> property value has changed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.Size">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.CaptionButtonsVisible">
            <summary>
            Gets if the caption buttons are currently visible, according to the value specified in <see cref="P:DotSpatial.Controls.RibbonControls.Ribbon.BorderMode"/>
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.CloseButton">
            <summary>
            Gets the Ribbon's close button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.MaximizeRestoreButton">
            <summary>
            Gets the Ribbon's maximize-restore button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.MinimizeButton">
            <summary>
            Gets the Ribbon's minimize button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.ActualBorderMode">
            <summary>
            Gets the actual <see cref="T:DotSpatial.Controls.RibbonControls.RibbonWindowMode"/> that the ribbon has.
            It's value may vary from <see cref="P:DotSpatial.Controls.RibbonControls.Ribbon.BorderMode"/>
            because of computer and operative system capabilities.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.BorderMode">
            <summary>
            Gets or sets the border mode of the ribbon relative to the window where it is contained
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.OrbDropDown">
            <summary>
            Gets the Orb's DropDown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.QuickAcessToolbar">
            <summary>
            Gets  the QuickAcessToolbar
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.OrbImage">
            <summary>
            Gets or sets the Image of the orb
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.OrbVisible">
            <summary>
            Gets or sets if the Ribbon should show an orb on the corner
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.OrbSelected">
            <summary>
            Gets or sets if the Orb is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.OrbPressed">
            <summary>
            Gets or sets if the Orb is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.CaptionBarSize">
            <summary>
            Gets the Height of the caption bar
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.OrbBounds">
            <summary>
            Gets the bounds of the orb
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.NextTab">
            <summary>
            Gets the next tab to be activated
            </summary>
            <returns></returns>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.PreviousTab">
            <summary>
            Gets the next tab to be activated
            </summary>
            <returns></returns>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.TabTextMargin">
            <summary>
            Gets or sets the internal spacing between the tab and its text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.DropDownMargin">
            <summary>
            Gets or sets the margis of the DropDowns shown by the Ribbon
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.ItemPadding">
            <summary>
            Gets or sets the external spacing of items on panels
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.ItemMargin">
            <summary>
            Gets or sets the internal spacing of items
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.ActiveTab">
            <summary>
            Gets or sets the tab that is currently active
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.PanelSpacing">
            <summary>
            Gets or sets the spacing leaded between panels
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.PanelPadding">
            <summary>
            Gets or sets the external spacing of panels inside of tabs
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.PanelMargin">
            <summary>
            Gets or sets the internal spacing of panels inside of tabs
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.TabSpacing">
            <summary>
            Gets or sets the spacing between tabs
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.Tabs">
            <summary>
            Gets the collection of RibbonTab tabs
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.Minimized">
            <summary>
            Gets or sets a value indicating if the Ribbon is currently minimized
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.Contexts">
            <summary>
            Gets the collection of Contexts of this Ribbon
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.Renderer">
            <summary>
            Gets or sets the Renderer for this Ribbon control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.TabContentMargin">
            <summary>
            Gets or sets the internal spacing of the tab content pane
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.TabContentPadding">
            <summary>
            Gets or sets the external spacing of the tabs content pane
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.TabsMargin">
            <summary>
            Gets a value indicating the external spacing of tabs
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.TabsPadding">
            <summary>
            Gets a value indicating the internal spacing of tabs
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.MaximumSize">
            <summary>
            Overriden. The maximum size is fixed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.MinimumSize">
            <summary>
            Overriden. The minimum size is fixed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.Dock">
            <summary>
            Overriden. The default dock of the ribbon is top
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.Sensor">
            <summary>
            Gets or sets the current panel sensor for this ribbon
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.RightToLeft">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.Ribbon.CaptionBarVisible">
            <summary>
            sets or gets the visibility of the caption bar
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonArrowDirection">
            <summary>
            Represents the directions that arrows can have
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonArrowDirection.Up">
            <summary>
            The arrow points up
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonArrowDirection.Down">
            <summary>
            The arrow points down
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonArrowDirection.Right">
            <summary>
            The arrow points right
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonArrowDirection.Left">
            <summary>
            The arrow points left
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonButton">
            <summary>
            Ribbon Button Class
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItem">
            <summary>
            Ribbon Item class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.#ctor">
            <summary>
            Creates a new Ribbon Item
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.RibbonItem_Click(System.Object,System.EventArgs)">
            <summary>
            Selects the item when in a dropdown, in design mode
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.ClosesDropDownAt(System.Drawing.Point)">
            <summary>
            Gets if onwer dropdown must be closed when the item is clicked on the specified point
            </summary>
            <param name="p">Point to test.</param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.NotifyOwnerRegionsChanged">
            <summary>
            Forces the owner Ribbon to update its regions
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetOwnerItem(DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Sets the value of the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonItem.OwnerItem"/> property
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Sets the Ribbon that owns this item
            </summary>
            <param name="owner">Ribbon that owns this item</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetOwnerPanel(DotSpatial.Controls.RibbonControls.RibbonPanel)">
            <summary>
            Sets the value of the OwnerPanel property
            </summary>
            <param name="ownerPanel">RibbonPanel where this item is located</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetSelected(System.Boolean)">
            <summary>
            Sets the value of the Selected property
            </summary>
            <param name="selected">Value that indicates if the element is selected</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetPressed(System.Boolean)">
            <summary>
            Sets the value of the Pressed property
            </summary>
            <param name="pressed">Value that indicates if the element is pressed</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetOwnerTab(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Sets the value of the OwnerTab property
            </summary>
            <param name="ownerTab">RibbonTab where this item is located</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetOwnerGroup(DotSpatial.Controls.RibbonControls.RibbonItemGroup)">
            <summary>
            Sets the value of the OwnerList property
            </summary>
            <param name="ownerGroup"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.GetNearestSize(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Gets the size applying the rules of MaxSizeMode and MinSizeMode properties
            </summary>
            <param name="sizeMode">Suggested sizeMode</param>
            <returns>The nearest size to the specified one</returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetLastMeasuredSize(System.Drawing.Size)">
            <summary>
            Sets the value of the LastMeasuredSize property
            </summary>
            <param name="size">Size to set to the property</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetSizeMode(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Sets the value of the SizeMode property
            </summary>
            <param name="sizeMode"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnCanvasChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonItem.CanvasChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnOwnerChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonItem.OwnerChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseEnter event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.RedrawItem">
            <summary>
            Redraws the item area on the Onwer Ribbon
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetCanvas(System.Windows.Forms.Control)">
            <summary>
            Sets the canvas of the item
            </summary>
            <param name="canvas"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetCanvas(DotSpatial.Controls.RibbonControls.IContainsSelectableRibbonItems,System.Windows.Forms.Control)">
            <summary>
            Recurse on setting the canvas
            </summary>
            <param name="parent"></param>
            <param name="canvas"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Set Bounds
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItem.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measure Size
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonItem.DoubleClick">
            <summary>
            Double Click
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonItem.Click">
            <summary>
            Click Event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonItem.MouseUp">
            <summary>
            Mouse Up Event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonItem.MouseMove">
            <summary>
            Mouse Move Event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonItem.MouseDown">
            <summary>
            Mouse down event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonItem.MouseEnter">
            <summary>
            Mouse enter
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonItem.MouseLeave">
            <summary>
            Mouse Leave event
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonItem.CanvasChanged">
            <summary>
            Occurs after the Chanvas changes
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonItem.OwnerChanged">
            <summary>
            Occurs after the owner changes
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.ContentBounds">
            <summary>
            Gets the bounds of the item's content. (It takes the Ribbon.ItemMargin)
            </summary>
            <remarks>
            Although this is the regular item content bounds, it depends on the logic of the item
            and how each item handles its own content.
            </remarks>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Canvas">
            <summary>
            Gets the control where the item is currently being dawn
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.OwnerItem">
            <summary>
            Gets the RibbonItemGroup that owns the item (If any)
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Text">
            <summary>
            Gets or sets the text that is to be displayed on the item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Image">
            <summary>
            Gets or sets the image to be displayed on the item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Visible">
            <summary>
            Gets or sets the Visibility of this item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.ToolTip">
            <summary>
            Gets or sets the tool tip text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Checked">
            <summary>
            Gets or sets a value indicating if the item is currently checked
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.SizeMode">
            <summary>
            Gets the item's current SizeMode
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Selected">
            <summary>
            Gets a value indicating whether the item is selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Pressed">
            <summary>
            Gets a value indicating whether the state of the item is pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Owner">
            <summary>
            Gets the Ribbon owner of this item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Bounds">
            <summary>
            Gets the bounds of the element relative to the Ribbon control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Enabled">
            <summary>
            Gets or sets a value indicating if the item is currently enabled
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.ToolTipTitle">
            <summary>
            Gets or sets the tool tip title
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.ToolTipImage">
            <summary>
            Gets or sets the image of the tool tip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Tag">
            <summary>
            Gets or sets the custom object data associated with this control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.Value">
            <summary>
            Gets or sets the custom string data associated with this control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.AltKey">
            <summary>
            Gets or sets the key combination that activates this element when the Alt key was pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.OwnerTab">
            <summary>
            Gets the RibbonTab that contains this item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.OwnerPanel">
            <summary>
            Gets the RibbonPanel where this item is located
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.MaxSizeMode">
            <summary>
            Gets or sets the maximum size mode of the element
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.MinSizeMode">
            <summary>
            Gets or sets the minimum size mode of the element
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.LastMeasuredSize">
            <summary>
            Gets the last result of  MeasureSize
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItem.TextAlignment">
            <summary>
            Sets the alignment of the label text if it exists
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItem.RibbonItemTextAlignment">
            <summary>
            Ribbon Item Txt Alignment
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonItem.RibbonItemTextAlignment.Left">
            <summary>
            Left (Near)
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonItem.RibbonItemTextAlignment.Right">
            <summary>
            Right (far)
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonItem.RibbonItemTextAlignment.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.#ctor">
            <summary>
            Creates a new, default button
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.#ctor(System.String)">
            <summary>
            Creates a new button with the specified text
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.#ctor(System.Drawing.Image)">
            <summary>
            Creates a new button with the specified image
            </summary>
            <param name="smallImage">The image to use</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.PerformClick">
            <summary>
            Performs a click on the button
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.CreateImage(System.Int32)">
            <summary>
            Creates a new Transparent, empty image
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.CreateDropDown">
            <summary>
            Creates the DropDown menu
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnPaintText(DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <summary>
            Renders text of the button
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnPaintImage(DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <summary>
            Renders the image of the button
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnPaintBackground(DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <summary>
            Renders the background of the buton
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the button
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnGetImageBounds(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode,System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the image of the button when SetBounds is called.
            Override this method to change image bounds
            </summary>
            <param name="sMode">Mode which is being measured</param>
            <param name="bounds"></param>
            <remarks>
            The measuring occours in the following order:
            <list type="">
            <item>OnSetImageBounds</item>
            <item>OnSetTextBounds</item>
            <item>OnSetDropDownBounds</item>
            <item>OnSetButtonFaceBounds</item>
            </list>
            </remarks>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnGetTextBounds(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode,System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the text of the button when SetBounds is called.
            Override this method to change image bounds
            </summary>
            <param name="sMode">Mode which is being measured</param>
            <param name="bounds">Bounds</param>
            <remarks>
            The measuring occours in the following order:
            <list type="">
            <item>OnSetImageBounds</item>
            <item>OnSetTextBounds</item>
            <item>OnSetDropDownBounds</item>
            <item>OnSetButtonFaceBounds</item>
            </list>
            </remarks>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnGetDropDownBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the dropdown part of the button when SetBounds is called.
            Override this method to change image bounds
            </summary>
            <param name="bounds">Bounds of the button</param>
            <remarks>
            The measuring occours in the following order:
            <list type="">
            <item>OnSetImageBounds</item>
            <item>OnSetTextBounds</item>
            <item>OnSetDropDownBounds</item>
            <item>OnSetButtonFaceBounds</item>
            </list>
            </remarks>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnGetButtonFaceBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the button face part of the button when SetBounds is called.
            Override this method to change image bounds
            </summary>
            <param name="bounds">Bounds of the button</param>
            <remarks>
            The measuring occours in the following order:
            <list type="">
            <item>OnSetImageBounds</item>
            <item>OnSetTextBounds</item>
            <item>OnSetDropDownBounds</item>
            <item>OnSetButtonFaceBounds</item>
            </list>
            </remarks>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.MeasureStringLargeSize(System.Drawing.Graphics,System.String,System.Drawing.Font)">
            <summary>
            Measures the string for the large size
            </summary>
            <param name="g"></param>
            <param name="text"></param>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.SetDropDownPressed(System.Boolean)">
            <summary>
            Sets the value of the DropDownPressed property
            </summary>
            <param name="pressed">Value that indicates if the dropdown button is pressed</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.SetDropDownSelected(System.Boolean)">
            <summary>
            Sets the value of the DropDownSelected property
            </summary>
            <param name="selected">Value that indicates if the dropdown part of the button is selected</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.ShowDropDown">
            <summary>
            Shows the drop down items of the button, as if the dropdown part has been clicked
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnGetDropDownMenuLocation">
            <summary>
            Gets the location where the dropdown menu will be shown
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnGetDropDownMenuSize">
            <summary>
            Gets the size of the dropdown. If Size.Empty is returned,
            size will be measured automatically
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton._dropDown_Closed(System.Object,System.EventArgs)">
            <summary>
            Handles the closing of the dropdown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.CloseDropDown">
            <summary>
            Closes the DropDown if opened
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.ToString">
            <summary>
            Overriden. Informs the button text
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.SetDropDownVisible(System.Boolean)">
            <summary>
            Sets the value of DropDownVisible
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnDropDownShowing(System.EventArgs)">
            <summary>
            Raises the DropDownShowing event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnCanvasChanged(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.ClosesDropDownAt(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.SetSizeMode(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.SetSelected(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.OnClick(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.GetItems">
            <summary>
            Returns the DropDownItems
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButton.GetAllChildComponents">
            <inheritdoc/>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonButton.DropDownShowing">
            <summary>
            Occurs when the dropdown is about to be displayed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.DropDown">
            <summary>
            Gets the DropDown of the button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.CheckOnClick">
            <summary>
            Gets or sets a value indicating if the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonItem.Checked"/> property should be toggled
            when button is clicked
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.DropDownResizable">
            <summary>
            Gets or sets a value indicating if the DropDown should be resizable
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.ImageBounds">
            <summary>
            Gets the bounds where the <see cref="T:System.Drawing.Image"/> or <see cref="P:DotSpatial.Controls.RibbonControls.RibbonButton.SmallImage"/> will be drawn.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.TextBounds">
            <summary>
            Gets the bounds where the <see cref="T:System.Net.Mime.MediaTypeNames.Text"/> of the button will be drawn
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.DropDownVisible">
            <summary>
            Gets if the DropDown is currently visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.DropDownArrowSize">
            <summary>
            Gets or sets the size of the dropdown arrow
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.DropDownArrowDirection">
            <summary>
            Gets or sets the direction where drop down's arrow should be pointing to
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.Style">
            <summary>
            Gets the style of the button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.DropDownItems">
            <summary>
            Gets the collection of items shown on the dropdown pop-up when Style allows it
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.ButtonFaceBounds">
            <summary>
            Gets the bounds of the button face
            </summary>
            <remarks>When Style is different from SplitDropDown and SplitBottomDropDown, ButtonFaceBounds is the same area than DropDownBounds</remarks>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.DropDownBounds">
            <summary>
            Gets the bounds of the dropdown button
            </summary>
            <remarks>When Style is different from SplitDropDown and SplitBottomDropDown, ButtonFaceBounds is the same area than DropDownBounds</remarks>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.DropDownSelected">
            <summary>
            Gets if the dropdown part of the button is selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.DropDownPressed">
            <summary>
            Gets if the dropdown part of the button is pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButton.SmallImage">
            <summary>
            Gets or sets the image of the button when in compact of medium size mode
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonButtonCollection">
            <summary>
            RibbonButtonCollection
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItemCollection">
            <summary>
            Ribbon Item Collection Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.#ctor">
            <summary>
            Creates a new ribbon item collection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.Add(DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.AddRange(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Adds the specified range of items
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.Insert(System.Int32,DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Inserts the specified item at the desired index
            </summary>
            <param name="index">Desired index of the item</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsLeft(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Gets the left of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsRight(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Gets the right of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsTop(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Gets the top of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsBottom(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Gets the bottom of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsWidth(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Gets the width of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsHeight(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Gets the height of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsBounds(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Gets the bounds of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsLeft">
            <summary>
            Gets the left of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsRight">
            <summary>
            Gets the right of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsTop">
            <summary>
            Gets the top of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsBottom">
            <summary>
            Gets the bottom of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsWidth">
            <summary>
            Gets the width of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsHeight">
            <summary>
            Gets the height of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.GetItemsBounds">
            <summary>
            Gets the bounds of items as a group of shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.MoveTo(System.Drawing.Point)">
            <summary>
            Moves the bounds of items as a group of shapes
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.MoveTo(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem},System.Drawing.Point)">
            <summary>
            Moves the bounds of items as a group of shapes
            </summary>
            <param name="items"></param>
            <param name="p"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.CenterItemsInto(System.Drawing.Rectangle)">
            <summary>
            Centers the items on the specified rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.CenterItemsVerticallyInto(System.Drawing.Rectangle)">
            <summary>
            Centers the items vertically on the specified rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.CenterItemsHorizontallyInto(System.Drawing.Rectangle)">
            <summary>
            Centers the items horizontally on the specified rectangle
            </summary>
            <param name="rectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.CenterItemsInto(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem},System.Drawing.Rectangle)">
            <summary>
            Centers the items on the specified rectangle
            </summary>
            <param name="items"></param>
            <param name="rectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.CenterItemsVerticallyInto(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem},System.Drawing.Rectangle)">
            <summary>
            Centers the items vertically on the specified rectangle
            </summary>
            <param name="items"></param>
            <param name="rectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.CenterItemsHorizontallyInto(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem},System.Drawing.Rectangle)">
            <summary>
            Centers the items horizontally on the specified rectangle
            </summary>
            <param name="items"></param>
            <param name="rectangle"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Sets the owner Ribbon of the collection
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.SetOwnerTab(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Sets the owner Tab of the collection
            </summary>
            <param name="tab"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollection.SetOwnerPanel(DotSpatial.Controls.RibbonControls.RibbonPanel)">
            <summary>
            Sets the owner panel of the collection
            </summary>
            <param name="panel"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemCollection.Owner">
            <summary>
            Gets the Ribbon owner of this collection
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemCollection.OwnerPanel">
            <summary>
            Gets the RibbonPanel where this item is located
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemCollection.OwnerTab">
            <summary>
            Gets the RibbonTab that contains this item
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonCollection.CheckRestrictions(DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Checks for the restrictions that buttons should have on the RibbonButton List
            </summary>
            <param name="button"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonCollection.Add(DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonCollection.AddRange(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Adds the specified range of items
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonCollection.Insert(System.Int32,DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Inserts the specified item at the desired index
            </summary>
            <param name="index">Desired index of the item</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonCollection.OwnerList">
            <summary>
            Gets the list that owns the collection (If any)
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonElementWithItemCollectionDesigner.OnGetVerbs">
            <summary>
            Called when verbs must be retrieved
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonElementWithItemCollectionDesigner.CreateItem(System.Type)">
            <summary>
            Creates an item of the speciifed type
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonElementWithItemCollectionDesigner.CreateItem(DotSpatial.Controls.RibbonControls.Ribbon,DotSpatial.Controls.RibbonControls.RibbonItemCollection,System.Type)">
            <summary>
            Creates an item of the specified type and adds it to the specified collection
            </summary>
            <param name="ribbon"></param>
            <param name="collection"></param>
            <param name="t"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonElementWithItemCollectionDesigner.Ribbon">
            <summary>
            Gets a reference to the Ribbon that owns the item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonElementWithItemCollectionDesigner.Collection">
            <summary>
            Gets the collection of items hosted by this item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonElementWithItemCollectionDesigner.Verbs">
            <summary>
            Overriden. Passes the verbs to the designer
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonButtonList">
            <summary>
            Represents a list of buttons that can be navigated
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.#ctor">
            <summary>
            Creates a new RibbonButtonList
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.#ctor(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonButton},System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Creates a new RibbonButtonList
            </summary>
            <param name="buttons"></param>
            <param name="dropDownItems"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.RedrawScroll">
            <summary>
            Redraws the scroll part of the list
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.IgnoreDeactivation">
            <summary>
            Ignores deactivation of canvas if it is a volatile window
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.RedrawControlButtons">
            <summary>
            Redraws the control buttons: up, down and dropdown
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollOffset(System.Int32)">
            <summary>
            Pushes the amount of _offset of the top of items
            </summary>
            <param name="amount"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollTo(System.Int32)">
            <summary>
            Scrolls the content to the specified offset
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollDown">
            <summary>
            Scrolls the list down
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollUp">
            <summary>
            Scrolls the list up
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.ShowDropDown">
            <summary>
            Shows the drop down items of the button, as if the dropdown part has been clicked
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.CloseDropDown">
            <summary>
            Closes the DropDown if opened
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.SetDropDownVisible(System.Boolean)">
            <summary>
            Sets the value of DropDownVisible
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.OnCanvasChanged(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.ClosesDropDownAt(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.SetOwnerPanel(DotSpatial.Controls.RibbonControls.RibbonPanel)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.SetOwnerTab(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.SetBounds(System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.UpdateThumbPos">
            <summary>
            Updates the position of the scroll thumb depending on the current offset
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.SetSizeMode(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.GetItems">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.GetContentBounds">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonButtonList.GetAllChildComponents">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.FlowToBottom">
            <summary>
            If activated, buttons will flow to bottom inside the list
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollBarBounds">
            <summary>
            Scroll Bar Bounds
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollBarEnabled">
            <summary>
            Scrol Bar Enabled
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollType">
            <summary>
            Scroll type
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrolledPercent">
            <summary>
            Gets the percent of scrolled content
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollMinimum">
            <summary>
            Scroll Minimum
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollMaximum">
            <summary>
            Scroll Maximum
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ScrollValue">
            <summary>
            Scroll Value
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ThumbSelected">
            <summary>
            Gets if the scrollbar thumb is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ThumbPressed">
            <summary>
            Gets if the scrollbar thumb is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ThumbBounds">
            <summary>
            Gets the bounds of the scrollbar thumb
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonDropDownPresent">
            <summary>
            Gets if the DropDown button is present on thelist
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.DropDownItems">
            <summary>
            Gets the collection of items shown on the dropdown pop-up when Style allows it
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonsSizeMode">
            <summary>
            Gets or sets the size that the buttons on the list should be
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonUpEnabled">
            <summary>
            Gets a value indicating if the button that scrolls up the content is currently enabled
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonDownEnabled">
            <summary>
            Gets a value indicating if the button that scrolls down the content is currently enabled
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonDropDownSelected">
            <summary>
            Gets a value indicating if the DropDown button is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonDropDownPressed">
            <summary>
            Gets a value indicating if the DropDown button is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonDownSelected">
            <summary>
            Gets a vaule indicating if the button that scrolls down the content is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonDownPressed">
            <summary>
            Gets a vaule indicating if the button that scrolls down the content is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonUpSelected">
            <summary>
            Gets a vaule indicating if the button that scrolls up the content is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonUpPressed">
            <summary>
            Gets a vaule indicating if the button that scrolls up the content is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ContentBounds">
            <summary>
            Gets the bounds of the content where items are shown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonUpBounds">
            <summary>
            Gets the bounds of the button that scrolls the items up
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonDownBounds">
            <summary>
            Gets the bounds of the button that scrolls the items down
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ButtonDropDownBounds">
            <summary>
            Gets the bounds of the button that scrolls
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ControlButtonsWidth">
            <summary>
            Gets or sets the with of the buttons that allow to navigate thru the list
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ItemsWideInLargeMode">
            <summary>
            Gets or sets a value indicating the amount of items to show
            (wide) when SizeMode is Large
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ItemsWideInMediumMode">
            <summary>
            Gets or sets a value indicating the amount of items to show
            (wide) when SizeMode is Medium
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.ItemsSizeInDropwDownMode">
            <summary>
            Gets or sets a value indicating the amount of items to show
            (wide) when SizeMode is Medium
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonButtonList.Buttons">
            <summary>
            Gets the collection of buttons of the list
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonButtonList.ListScrollType">
            <summary>
            List Scroll Type
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonButtonList.ListScrollType.UpDownButtons">
            <summary>
            Up-Down Buttons
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonButtonList.ListScrollType.Scrollbar">
            <summary>
            Scrollbar
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonButtonStyle">
            <summary>
            Enumerates the possible button styles
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonButtonStyle.Normal">
            <summary>
            Simple clickable button
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonButtonStyle.DropDown">
            <summary>
            Button with a right side drop down
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonButtonStyle.SplitDropDown">
            <summary>
            Button with an optional dropdown attachment on the right
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonButtonStyle.DropDownListItem">
            <summary>
            Mimics a standard drop down list item with no image
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs">
            <summary>
            RibbonCanvasEventArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Control,System.Object)">
            <summary>
            RibbonCanvasEventArgs
            </summary>
            <param name="owner"></param>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="canvas"></param>
            <param name="relatedObject"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs.RelatedObject">
            <summary>
            Related Object
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs.Owner">
            <summary>
            Gets or sets the Ribbon that raised the event
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs.Graphics">
            <summary>
            Gets or sets the graphics to paint
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs.Bounds">
            <summary>
            Gets or sets the bounds that should be painted
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs.Canvas">
            <summary>
            Gets or sets the control where to be painted
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonCaptionButton">
            <summary>
            RibbonCaptionButton
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.GetCharFor(DotSpatial.Controls.RibbonControls.RibbonCaptionButton.CaptionButton)">
            <summary>
            Gets the character to render the specified button type
            </summary>
            <param name="type">type of button</param>
            <returns>Character to use with Marlett font in Windows, some other representative characters when in other O.S.</returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.#ctor(DotSpatial.Controls.RibbonControls.RibbonCaptionButton.CaptionButton)">
            <summary>
            Creates a new CaptionButton
            </summary>
            <param name="buttonType"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.OnClick(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.SetCaptionButtonType(DotSpatial.Controls.RibbonControls.RibbonCaptionButton.CaptionButton)">
            <summary>
            Sets value to the type of caption button
            </summary>
            <param name="buttonType"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.OnGetTextBounds(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.CaptionButtonType">
            <summary>
            Gets the type of caption button this is
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.CaptionButton">
            <summary>
            Defines the possible caption buttons
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.CaptionButton.Minimize">
            <summary>
            Minimize
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.CaptionButton.Maximize">
            <summary>
            Maximize
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.CaptionButton.Restore">
            <summary>
            Restore
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonCaptionButton.CaptionButton.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonCheckBox">
            <summary>
            RibbonCheckBox
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.#ctor">
            <summary>
            Creates a new Ribbon Checkbox
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.MeasureHeight">
            <summary>
            Measures the suposed height of the boxbox
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.SetBounds(System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.OnCheckChanged(System.EventArgs)">
            <summary>
            Raises the CheckChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonCheckBox.OnCheckChanging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the Check Changing event
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxCheckChanged">
            <summary>
            Raised when the CheckBox.Checked property value has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxCheckChanging">
            <summary>
            Raised when the CheckBox.Checked property value is changing
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCheckBox.Style">
            <summary>
            Gets or sets the style of the checkbox item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxOrientation">
            <summary>
            Gets or sets the width of the Label
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCheckBox.LabelBounds">
            <summary>
            Gets the bounds of the label that is shown next to the textbox
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCheckBox.LabelVisible">
            <summary>
            Gets a value indicating if the label is currently visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxBounds">
            <summary>
            Gets the bounds of the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonCheckBox.LabelWidth">
            <summary>
            Gets or sets the width of the Label
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxOrientationType">
            <summary>
            Check Box Orientation
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxOrientationType.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxOrientationType.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxStyle">
            <summary>
            CheckBox or RadioButton
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxStyle.CheckBox">
            <summary>
            Checkbox
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonCheckBox.CheckBoxStyle.RadioButton">
            <summary>
            RadioButton
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonColorChooser">
            <summary>
            A RibbonButton that incorporates a <see cref="P:DotSpatial.Controls.RibbonControls.RibbonColorChooser.Color"/> property and
            draws this color below the displaying Image or a SmallImage&gt;
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonColorChooser.#ctor">
            <summary>
            Creates a new instance of the Ribbon Color Chooser Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonColorChooser.OnColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonColorChooser.ColorChanged"/>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonColorChooser.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonColorChooser.ColorChanged">
            <summary>
            Raised when the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonColorChooser.Color"/> property has been changed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonColorChooser.ImageColorHeight">
            <summary>
            Gets or sets the height of the color preview on the <see cref="T:System.Drawing.Image"/>
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonColorChooser.SmallImageColorHeight">
            <summary>
            Gets or sets the height of the color preview on the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonButton.SmallImage"/>
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonColorChooser.Color">
            <summary>
            Gets or sets the currently chosen color
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonComboBox">
            <summary>
            Ribbon ComboBox class
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonTextBox">
            <summary>
            Class RibbonTextBox
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonTextBox.SPACING">
            <summary>
            Spacing
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.#ctor">
            <summary>
            Creates a new instance of the Ribobn Textbox
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.QuietSetTextboxWidth(System.Int32)">
            <summary>
            Allows the width to be set without firing the NotifyOwnerRegionsChanged event
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.StartEdit">
            <summary>
            Starts editing the text and focuses the TextBox
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.EndEdit">
            <summary>
            Ends the editing of the textbox
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.PlaceActualTextBox">
            <summary>
            Places the Actual TextBox on the owner so user can edit the text
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.ActualTextBox_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Visible Changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.RemoveActualTextBox">
            <summary>
            Removes the actual TextBox that edits the text
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.InitTextBox(System.Windows.Forms.TextBox)">
            <summary>
            Initializes the texbox that edits the text
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.ActualTextbox_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the LostFocus event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.ActualTextbox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.ActualTextbox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Handles the KeyPress event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.ActualTextbox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the Validating event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.ActualTextbox_Validated(System.Object,System.EventArgs)">
            <summary>
            Handles the Validated event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.ActualTextbox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the TextChanged event of the actual TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.MeasureHeight">
            <summary>
            Measures the suposed height of the textobx
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.SetBounds(System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxTextChanged"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxTextChanged">
            <summary>
            Raised when the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxText"/> property value has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxKeyPress">
            <summary>
            Occurs after a key is pressed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxKeyDown">
            <summary>
            Occurs when a key is pressed down
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxValidating">
            <summary>
            Occurs when the textbox is validating itself
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxValidated">
            <summary>
            Occurs after the textbox has validated
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.AllowTextEdit">
            <summary>
            Gets or sets if the textbox allows editing
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxText">
            <summary>
            Gets or sets the text on the textbox
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxTextBounds">
            <summary>
            Gets the bounds of the text on the textbox
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.ImageBounds">
            <summary>
            Gets the bounds of the image
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.LabelBounds">
            <summary>
            Gets the bounds of the label that is shown next to the textbox
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.ImageVisible">
            <summary>
            Gets a value indicating if the image is currenlty visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.LabelVisible">
            <summary>
            Gets a value indicating if the label is currently visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxBounds">
            <summary>
            Gets the bounds of the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.Editing">
            <summary>
            Gets a value indicating if user is currently editing the text of the textbox
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.TextBoxWidth">
            <summary>
            Gets or sets the width of the textbox
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextBox.LabelWidth">
            <summary>
            Gets or sets the width of the Label. Enter zero to auto size based on contents.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.#ctor">
            <summary>
            Creates a new instance of the RibbonComboBox class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.OnDropDownShowing(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownShowing"/> event;
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.ShowDropDown">
            <summary>
            Shows the DropDown
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.ClosesDropDownAt(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.InitTextBox(System.Windows.Forms.TextBox)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.SetBounds(System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.OnDropDownItemClicked(DotSpatial.Controls.RibbonControls.RibbonItemEventArgs@)">
            <summary>
            OnDropDownItemClicked
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonComboBox.GetAllChildComponents">
            <inheritdoc/>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownShowing">
            <summary>
            Raised when the DropDown is about to be displayed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownItemClicked">
            <summary>
            Occurs when a Drop down Item is clicked
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownVisible">
            <summary>
            Gets or sets a value indicating if the DropDown portion of the combo box is currently shown.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownResizable">
            <summary>
            Gets or sets a value indicating if the DropDown should be resizable
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.TextBoxTextBounds">
            <summary>
            Overriden.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownItems">
            <summary>
            Gets the collection of items to be displayed on the dropdown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.SelectedItem">
            <summary>
            Gets the selected of item on the dropdown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.DrawIconsBar">
            <summary>
            Gets or sets if the icons bar should be drawn
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownButtonBounds">
            <summary>
            Gets or sets the bounds of the DropDown button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownButtonVisible">
            <summary>
            Gets a value indicating if the DropDown is currently visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownButtonSelected">
            <summary>
            Gets a value indicating if the DropDown button is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonComboBox.DropDownButtonPressed">
            <summary>
            Gets a value indicating if the DropDown button is currently pressed
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonComboBox.RibbonItemEventHandler">
            <summary>
            A RibbonItemEvent Handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonContext">
            <summary>
            Represents a context on the Ribbon
            </summary>
            <remarks>Contexts are useful when some tabs are volatile, depending on some selection. A RibbonTabContext can be added to the ribbon by calling Ribbon.Contexts.Add</remarks>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContext.#ctor(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new RibbonTabContext
            </summary>
            <param name="owner">Ribbon that owns the context</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContext.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonContext.Text">
            <summary>
            Gets or sets the text of the Context
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonContext.GlowColor">
            <summary>
            Gets or sets the color of the glow that indicates a context
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonContext.Owner">
            <summary>
            Gets the Ribbon that owns this context
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonContext.Tabs">
            <summary>
            The collection of ribbon tabs
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonContextCollection">
            <summary>
            Represents a collection of RibbonTabContext
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContextCollection.#ctor(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new RibbonTabContext Collection
            </summary>
            <param name="owner">Ribbon that owns this collection</param>
            <exception cref="T:System.ArgumentNullException">owner is null</exception>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContextCollection.Add(DotSpatial.Controls.RibbonControls.RibbonContext)">
            <summary>
            Adds the specified context to the collection
            </summary>
            <param name="item">Item to add to the collection</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContextCollection.AddRange(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonContext})">
            <summary>
            Adds the specified contexts to the collection
            </summary>
            <param name="items">Items to add to the collection</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContextCollection.Insert(System.Int32,DotSpatial.Controls.RibbonControls.RibbonContext)">
            <summary>
            Inserts the specified context into the specified index
            </summary>
            <param name="index">Desired index of the item into the collection</param>
            <param name="item">Tab to be inserted</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContextCollection.Remove(DotSpatial.Controls.RibbonControls.RibbonContext)">
            <summary>
            Removes the context
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContextCollection.RemoveAll(System.Predicate{DotSpatial.Controls.RibbonControls.RibbonContext})">
            <summary>
            Not supported
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContextCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the context at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContextCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Not Supported
            </summary>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonContextCollection.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonContextCollection.Owner">
            <summary>
            Gets the Ribbon that owns this collection
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem">
            <summary>
            Large menu item with a description bellow the text
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.#ctor">
            <summary>
            Creates a new instance of the ribbonDescription Menu Item
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.#ctor(System.String)">
            <summary>
            Creates a new menu item with description
            </summary>
            <param name="text">Text of the menuitem</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.#ctor(System.String,System.String)">
            <summary>
            Creates a new menu item with description
            </summary>
            <param name="text">Text of the menuitem</param>
            <param name="description">Descripion of the menuitem</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.#ctor(System.Drawing.Image,System.String,System.String)">
            <summary>
            Creates a new menu item with description
            </summary>
            <param name="image">Image for the menuitem</param>
            <param name="text">Text for the menuitem</param>
            <param name="description">Description for the menuitem</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.OnPaintText(DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.OnGetTextBounds(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.DescriptionBounds">
            <summary>
            Gets or sets the bounds of the description
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.Image">
            <summary>
            Gets or sets the image of the menu item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.SmallImage">
            <summary>
            This property is not relevant for this class
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDescriptionMenuItem.Description">
            <summary>
            Gets or sets the description of the button
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonDesigner">
            <summary>
            RibbonDesigner Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.LoWord(System.Int32)">
            <summary>
            LoWord part of a 32 bit integer turned 16 bit
            </summary>
            <param name="dwValue"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.HiWord(System.Int32)">
            <summary>
            HiWord part of a 32 bit integer turned 16 bit
            </summary>
            <param name="dwValue"></param>
            <returns></returns>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonDesigner.Current">
            <summary>
            Current Designer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.#ctor">
            <summary>
            Creates a new instance of the RibbonDesigner class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.Finalize">
            <summary>
            Finalizes an instance of the RibbonDesigner class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.CreateItem(DotSpatial.Controls.RibbonControls.Ribbon,DotSpatial.Controls.RibbonControls.RibbonItemCollection,System.Type)">
            <summary>
            Creates a new item
            </summary>
            <param name="ribbon"></param>
            <param name="collection"></param>
            <param name="t"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.CreteOrbMenuItem(System.Type)">
            <summary>
            Creates an Orb's MenuItem
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.CreteOrbRecentItem(System.Type)">
            <summary>
            Creates an Orb's RecentItem
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.CreteOrbOptionItem(System.Type)">
            <summary>
            Creates an Orb's OptionItem
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.AddTabVerb(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.WndProc(System.Windows.Forms.Message@)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.GetBehaviorService">
            <summary>
            Behavior Service
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.Initialize(System.ComponentModel.IComponent)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.changeService_ComponentRemoved(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Catches the event of a component on the ribbon being removed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDesigner.RemoveRecursive(DotSpatial.Controls.RibbonControls.IContainsRibbonComponents,System.ComponentModel.Design.IDesignerHost)">
            <summary>
            Removes recurively
            </summary>
            <param name="item"></param>
            <param name="service"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDesigner.SelectedElement">
            <summary>
            Gets or sets the currently selected RibbonElement
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDesigner.Ribbon">
            <summary>
            Gets the Ribbon of the designer
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDesigner.Verbs">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonDropDown">
            <summary>
            Ribbon Drop Down
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPopup">
            <summary>
            A Ribbon Popup class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.#ctor">
            <summary>
            Creates a new instance of the Ribbon Pupup class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.Show(System.Drawing.Point)">
            <summary>
            Shows this Popup on the specified location of the screen
            </summary>
            <param name="screenLocation"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.ToolStripDropDown_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the Opening event of the ToolStripDropDown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when pop-up is being opened
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.ToolStripDropDown_Closing(System.Object,System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            <summary>
            Handles the Closing event of the ToolStripDropDown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.ToolStripDropDown_Closed(System.Object,System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            Handles the closed event of the ToolStripDropDown
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.Close">
            <summary>
            Closes this popup.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.OnClosing(System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonPopup.Closing"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.OnClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonPopup.Closed"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.OnShowed(System.EventArgs)">
            <summary>
            Raises the Showed event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPopup.Showed">
            <summary>
            Raised when the popup is shown
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPopup.Closed">
            <summary>
            Raised when the popup is closed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPopup.Closing">
            <summary>
            Raised when the popup is about to be closed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPopup.Opening">
            <summary>
            Raised when the Popup is about to be opened
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPopup.BorderRoundness">
            <summary>
            Gets or sets the roundness of the border
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPopup.WrappedDropDown">
            <summary>
            Gets the related ToolStripDropDown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPopup.CreateParams">
            <summary>
            Overriden. Used to drop a shadow on the popup
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.OnOpening(System.ComponentModel.CancelEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.IgnoreNextClickDeactivation">
            <summary>
            Prevents the form from being hidden the next time the mouse clicks on the form.
            It is useful for reacting to clicks of items inside items.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.UpdateSize">
            <summary>
            Updates the size of the dropdown
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.UpdateItemsBounds">
            <summary>
            Updates the bounds of the items
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.OnShowed(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonDropDown.OnMouseLeave(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.DrawIconsBar">
            <summary>
            Gets or sets if the icons bar should be drawn
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.SelectionService">
            <summary>
            Gets or sets the selection service for the dropdown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.SizingGripBounds">
            <summary>
            Gets the bounds of the sizing grip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.MeasuringSize">
            <summary>
            Gets or sets the size for measuring items (by default is DropDown)
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.ParentItem">
            <summary>
            Gets the parent item of this dropdown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.Sensor">
            <summary>
            Gets the sennsor of this dropdown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.OwnerRibbon">
            <summary>
            Gets the Ribbon this DropDown belongs to
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.Items">
            <summary>
            Gets the RibbonItem this dropdown belongs to
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.ShowSizingGrip">
            <summary>
            Gets or sets a value indicating if the sizing grip should be visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonDropDown.SizingGripHeight">
            <summary>
            Gets or sets the height of the sizing grip area
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs">
            <summary>
            Holds data and tools to measure the size
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs.#ctor(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Creates a new RibbonElementMeasureSizeEventArgs object
            </summary>
            <param name="graphics">Device info to draw and measure</param>
            <param name="sizeMode">Size mode to measure</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs.SizeMode">
            <summary>
            Gets the size mode to measure
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs.Graphics">
            <summary>
            Gets the device to measure objects
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs">
            <summary>
            Holds data and tools to draw the element
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs.#ctor(System.Drawing.Rectangle,System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <param name="clip">Rectangle clip</param>
            <param name="graphics">Device to draw</param>
            <param name="mode">Size mode to draw</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs.Clip">
            <summary>
            Area that element should occupy
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs.Graphics">
            <summary>
            Gets the Device where to draw
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs.Mode">
            <summary>
            Gets the mode to draw the element
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs.Control">
            <summary>
            Gets the control where element is being painted
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonHost">
            <summary>
            RibbonHost class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHost.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHost.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the panel on the mode specified by the event object
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHost.HostCompleted">
            <summary>
            Call this method when you need to close a popup that the control is contained in
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHost.OnSizeModeChanging(DotSpatial.Controls.RibbonControls.RibbonHostSizeModeHandledEventArgs@)">
            <summary>
            Raises the SizeModeChangeing event
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonHost.SizeModeChanging">
            <summary>
            Occurs when the SizeMode of the controls container is changing. if you manually set the size of the control you need to set the Handled flag to true.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonHost.HostedControl">
            <summary>
            Gets or sets the control that this item willl host
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonHost.RibbonHostSizeModeHandledEventHandler">
            <summary>
            Ribbon Host Size Mode
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonHostSizeModeHandledEventArgs">
            <summary>
            RibbonHostSizeModeHandledEventArgs Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonHostSizeModeHandledEventArgs.#ctor(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Creates a new RibbonElementMeasureSizeEventArgs object
            </summary>
            <param name="graphics">Device info to draw and measure</param>
            <param name="sizeMode">Size mode to measure</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonHostSizeModeHandledEventArgs.SizeMode">
            <summary>
            Gets the size mode to measure
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonHostSizeModeHandledEventArgs.Graphics">
            <summary>
            Gets the device to measure objects
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonHostSizeModeHandledEventArgs.ControlSize">
            <summary>
            Gets or sets the size of the control
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItemBoundsEventArgs">
            <summary>
            RibbonItemBoundsEventArgs
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs">
            <summary>
            An Event Args that conveys the graphics item and other important rendering content.
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs">
            <remarks>Ribbon rendering event data</remarks>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Creates a new instance of the RibbonRenderEventArgs
            </summary>
            <param name="owner"></param>
            <param name="g"></param>
            <param name="clip"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs.Ribbon">
            <summary>
            Gets the Ribbon related to the render
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs.Graphics">
            <summary>
            Gets the Device to draw into
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs.ClipRectangle">
            <summary>
            Gets the Rectangle area where to draw into
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Creates a new instance of hte RibbonItemRenderEventArgs class
            </summary>
            <param name="owner">The Ribbon that fired the event</param>
            <param name="g">The Graphics surface for drawing</param>
            <param name="clip">The 2D clip rectangle where drawing should take place</param>
            <param name="item">The RibbonItem that should be drawn</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs.Item">
            <summary>
            The Ribbon Item that should be drawn
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemBoundsEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonItem,System.Drawing.Rectangle)">
            <summary>
            Creates a new instance of the Ribbon item Bounds Event Args
            </summary>
            <param name="owner"></param>
            <param name="g"></param>
            <param name="clip"></param>
            <param name="item"></param>
            <param name="bounds"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemBoundsEventArgs.Bounds">
            <summary>
            Gets or sets the suggested bounds
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItemCollectionEditor">
            <summary>
            Class RibbonItemCollectionEditor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollectionEditor.#ctor">
            <summary>
            Creates a new instance of the RibbonItemCollectionEditor class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollectionEditor.CreateCollectionItemType">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemCollectionEditor.CreateNewItemTypes">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItemEventArgs">
            <summary>
            Ribbon Item Event Args
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemEventArgs.#ctor(DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Creates a new instance of a RibbonItemEventArgs class
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemEventArgs.Item">
            <summary>
            Gets or sets the item involved in the event
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItemGlyph">
            <summary>
            The Ribbon Panel Glyph class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGlyph.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService,DotSpatial.Controls.RibbonControls.RibbonPanelDesigner,DotSpatial.Controls.RibbonControls.RibbonPanel)">
            <summary>
            Creates a new instance of the Ribbon Panel Glyph
            </summary>
            <param name="behaviorService">A behavior service controling how the glyph works</param>
            <param name="designer">The Designer, controling some rendering options</param>
            <param name="panel">A RibobnTab</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGlyph.GetHitTest(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemGlyph.Bounds">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItemGlyphBehavior">
            <summary>
            RibbonPanelGlyphBehavior Class establishes the behavior for the glyph in the designer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGlyphBehavior.#ctor(DotSpatial.Controls.RibbonControls.RibbonPanelDesigner,DotSpatial.Controls.RibbonControls.RibbonPanel)">
            <summary>
            Creates a new instance for the Ribbon panel Glyph Behavior
            </summary>
            <param name="designer">The RibbonTabDesigner</param>
            <param name="panel">A RibbonTab</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGlyphBehavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItemGroup">
            <summary>
            Ribbon Item Group class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.#ctor">
            <summary>
            Creates a new default instance of a RibbonItemGroup
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.#ctor(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Creates a new Ribbon Item Group, but with the specified items
            </summary>
            <param name="items">A list or array of the items</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.SetBounds(System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.SetOwnerPanel(DotSpatial.Controls.RibbonControls.RibbonPanel)">
            <param name="ownerPanel">RibbonPanel where this item is located</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <param name="owner">Ribbon that owns this item</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.SetOwnerTab(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <param name="ownerTab">RibbonTab where this item is located</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.ToString">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.GetItems">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.GetContentBounds">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroup.GetAllChildComponents">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemGroup.Checked">
            <summary>
            This property is not relevant for this class
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemGroup.DrawBackground">
            <summary>
            Gets or sets a value indicating if the group should
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemGroup.FirstItem">
            <summary>
            Gets the first item of the group
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemGroup.LastItem">
            <summary>
            Gets the last item of the group
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemGroup.Items">
            <summary>
            Gets the collection of items of this group
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonItemGroupItemCollection">
            <summary>
            Represents a collection of items that is hosted by the RibbonItemGroup
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroupItemCollection.#ctor(DotSpatial.Controls.RibbonControls.RibbonItemGroup)">
            <param name="ownerGroup">Group that this collection belongs to</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroupItemCollection.Add(DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroupItemCollection.AddRange(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Adds the specified range of items
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonItemGroupItemCollection.Insert(System.Int32,DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Inserts the specified item at the desired index
            </summary>
            <param name="index">Desired index of the item</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonItemGroupItemCollection.OwnerGroup">
            <summary>
            Gets the group that owns this item collection
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonLabel">
            <summary>
            Ribbon Label class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonLabel.MeasureHeight">
            <summary>
            Measure the height
            </summary>
            <returns>The integer height</returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonLabel.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the panel on the mode specified by the event object
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonLabel.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <summary>
            Raises the paint event and draws the
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonLabel.LabelWidth">
            <summary>
            Gets or sets the width of the label
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonMouseSensor">
            <summary>
            Provides mouse functionality to RibbonTab, RibbonPanel and RibbonItem objects on a specified Control
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.#ctor">
            <summary>
            Initializes inner fields
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.#ctor(System.Windows.Forms.Control,DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new Empty Sensor
            </summary>
            <param name="control">Control to listen mouse events</param>
            <param name="ribbon">Ribbon that will be affected</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.#ctor(System.Windows.Forms.Control,DotSpatial.Controls.RibbonControls.Ribbon,System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonTab},System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonPanel},System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Creates a new Sensor for specified objects
            </summary>
            <param name="control">Control to listen mouse events</param>
            <param name="ribbon">Ribbon that will be affected</param>
            <param name="tabs">Tabs that will be sensed</param>
            <param name="panels">Panels that will be sensed</param>
            <param name="items">Items that will be sensed</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.#ctor(System.Windows.Forms.Control,DotSpatial.Controls.RibbonControls.Ribbon,DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Creates a new Sensor for the specified RibbonTab
            </summary>
            <param name="control">Control to listen to mouse events</param>
            <param name="ribbon">Ribbon that will be affected</param>
            <param name="tab">Tab that will be sensed, from which all panels and items will be extracted to sensing also.</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.#ctor(System.Windows.Forms.Control,DotSpatial.Controls.RibbonControls.Ribbon,System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Creates a new Sensor for only the specified items
            </summary>
            <param name="control">Control to listen to mouse events</param>
            <param name="ribbon">Ribbon that will be affected</param>
            <param name="itemsSource"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.AddHandlers">
            <summary>
            Adds the necessary handlers to the control
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Control_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseUp event on the control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Control_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown on the control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Control_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Handles the MouseLeave on the control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Control_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseMove on the control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HitTest(System.Drawing.Point)">
            <summary>
            Performs a hit-test and specifies hitted objects on properties: <see cref="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedPanel"/>,
            <see cref="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedTab"/>, <see cref="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedItem"/> and <see cref="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedSubItem"/>
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.RemoveHandlers">
            <summary>
            Removes the added handlers to the Control
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Resume">
            <summary>
            Resumes the sensing after being suspended by <see cref="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Suspend"/>
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Suspend">
            <summary>
            Suspends sensing until <see cref="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Resume"/> is called
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Control">
            <summary>
            Gets the control where the sensor listens to mouse events
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Disposed">
            <summary>
            Gets if the sensor has already been
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedTab">
            <summary>
            Gets the RibbonTab hitted by the last <see cref="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HitTest(System.Drawing.Point)"/>
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedTabScroll">
            <summary>
            Gets if the test hit resulted on some scroll button of the hitted tab
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedTabScrollLeft">
            <summary>
            Gets or sets if the last hit test resulted on the left scroll of the hitted tab
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedTabScrollRight">
            <summary>
            Gets or sets if the last hit test resulted on the right scroll of the hitted tab
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedPanel">
            <summary>
            Gets the RibbonPanel hitted by the last <see cref="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HitTest(System.Drawing.Point)"/>
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedItem">
            <summary>
            Gets the RibbonItem hitted by the last <see cref="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HitTest(System.Drawing.Point)"/>
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HittedSubItem">
            <summary>
            Gets the RibbonItem (on other RibbonItem) hitted by the last <see cref="M:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.HitTest(System.Drawing.Point)"/>
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.IsSupsended">
            <summary>
            Gets if the sensor is currently suspended
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.ItemsSource">
            <summary>
            Gets or ests the source of items what limits the sensing.
            If collection is null, all items on the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Items"/> property will be sensed.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Items">
            <summary>
            Gets the collection of items this sensor affects.
            Sensing can be limitated by the ItemsLimit property
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.PanelLimit">
            <summary>
            Gets or sets the Panel that will be the limit to be sensed.
            If set to null, all panels in the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Panels"/> property will be sensed.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Panels">
            <summary>
            Gets the collection of panels this sensor affects.
            Sensing can be limitated by the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.PanelLimit"/> property
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Ribbon">
            <summary>
            Gets the ribbon this sensor responds to
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.SelectedTab">
            <summary>
            Gets or sets the last selected tab
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.SelectedPanel">
            <summary>
            Gets or sets the last selected panel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.SelectedItem">
            <summary>
            Gets or sets the last selected item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.SelectedSubItem">
            <summary>
            Gets or sets the last selected sub-item
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.TabLimit">
            <summary>
            Gets or sets the Tab that will be the only to be sensed.
            If set to null, all tabs in the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Tabs"/> property will be sensed.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.Tabs">
            <summary>
            Gets the collection of tabs this sensor affects.
            Sensing can be limitated by the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonMouseSensor.TabLimit"/> property
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonWindowMode">
            <summary>
            Possible modes for the ribbon to be placed on the window
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonWindowMode.InsideWindow">
            <summary>
            Inside Window
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonWindowMode.NonClientAreaCustomDrawn">
            <summary>
            Non-Client Area Custom Drawn
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonWindowMode.NonClientAreaGlass">
            <summary>
            Non-Client Area (Aero Glass)
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonOrbAdornerGlyph">
            <summary>
            An Adorner Glyph controling the orb appearance in the designer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbAdornerGlyph.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService,DotSpatial.Controls.RibbonControls.RibbonDesigner,DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new instance of the Orb Adorner Glyph for the ribbon control
            </summary>
            <param name="behaviorService">A behavior service</param>
            <param name="designer">The RibobnDesigner</param>
            <param name="ribbon">The Ribbon to adorn</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbAdornerGlyph.GetHitTest(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbAdornerGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbAdornerGlyph.MenuVisible">
            <summary>
            Gets or sets if the orb menu is visible on the desginer
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbAdornerGlyph.Bounds">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonOrbAdornerGlyphBehavior">
            <summary>
            RibbonOrbAdornerGlyphBehavior does nothing really
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown">
            <summary>
            Ribbon Orb Drop Down
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.#ctor(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new instance of the Ribbon orb Drop Down
            </summary>
            <param name="ribbon">The parent ribbon</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.Finalize">
            <summary>
            Finalizes an instance of the RibbonOrbDropDown class.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.SeparatorHeight(DotSpatial.Controls.RibbonControls.RibbonSeparator)">
            <summary>
            Gets the height that a separator should be on the DropDown
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.UpdateRegions">
            <summary>
            Updates the regions and bounds of items
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.UpdateSensor">
            <summary>
            Refreshes the sensor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OnRegionsChanged">
            <summary>
            Updates all areas and bounds of items
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.SelectOnDesigner(DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Selects the specified item on the designer
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.UpdateDesignerSelectedBounds">
            <summary>
            Updates the selection bounds on the designer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OnOpening(System.ComponentModel.CancelEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OnClosed(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OnShowed(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.AllItems">
            <summary>
            Gets all items involved in the dropdown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.ContentMargin">
            <summary>
            Gets the margin of the content bounds
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.ContentBounds">
            <summary>
            Gets the bounds of the content (where menu buttons are)
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.ContentButtonsBounds">
            <summary>
            Gets the bounds of the content part that contains the buttons on the left
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.ContentRecentItemsBounds">
            <summary>
            Gets the bounds fo the content part that contains the recent-item list
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.RibbonInDesignMode">
            <summary>
            Gets if currently on design mode
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.MenuItems">
            <summary>
            Gets the collection of items shown in the menu area
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OptionItems">
            <summary>
            Gets the collection of items shown in the options area (bottom)
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OptionItemsPadding">
            <summary>
            Spacing between option buttons (those on the bottom)
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.RecentItems">
            <summary>
            Gets the collection of items shown in the recent items area
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.Ribbon">
            <summary>
            Gets the ribbon that owns this dropdown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.Sensor">
            <summary>
            Gets the sensor of the dropdown
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.ButtonsGlyphBounds">
            <summary>
            Gets the bounds of the glyph
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.ButtonsSeparatorGlyphBounds">
            <summary>
            Gets the bounds of the glyph
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.RecentGlyphBounds">
            <summary>
            Gets the bounds of the recent items add glyph
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDown.OptionGlyphBounds">
            <summary>
            Gets the bounds of the option items add glyph
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonOrbDropDownEventArgs">
            <summary>
            A Class that controls the DropDown Event Args for the ribbon orb
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbDropDownEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,DotSpatial.Controls.RibbonControls.RibbonOrbDropDown,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Creates a new instance of the RibbonOrbDropDownEventArgs class
            </summary>
            <param name="ribbon">The Ribbon that fired the event</param>
            <param name="dropDown">The dropdown control firing the event</param>
            <param name="g">The System.Drawing.Graphics surface to draw on</param>
            <param name="clip">The clip rectangle</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbDropDownEventArgs.RibbonOrbDropDown">
            <summary>
            Gets the RibbonOrbDropDown related to the event
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonOrbMenuItem">
            <summary>
            Ribbon Orb Menu Item Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbMenuItem.#ctor">
            <summary>
            Creates a new instance of a RibbonOrbMenuItem
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbMenuItem.#ctor(System.String)">
            <summary>
            Creates a new instance of a RibbonOrbMenuItem
            </summary>
            <param name="text">The string text of the menu item</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbMenuItem.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbMenuItem.OnGetDropDownMenuLocation">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbMenuItem.OnGetDropDownMenuSize">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbMenuItem.Image">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbMenuItem.SmallImage">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonOrbOptionButton">
            <summary>
            This class controls the option button for the orb.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbOptionButton.#ctor">
            <summary>
            Creates a new default Ribbon Orb Option button
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbOptionButton.#ctor(System.String)">
            <summary>
            Creates a new Ribbon Orb Option button with the specified text
            </summary>
            <param name="text">The string text to use</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbOptionButton.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonOrbOptionButton.SmallImage">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonOrbRecentItem">
            <summary>
            This class controls the recent item of the orb
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbRecentItem.#ctor">
            <summary>
            Creates a new default instance of a RibbonOrbRecentItem
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbRecentItem.#ctor(System.String)">
            <summary>
            Creates a new instance of a RibbonOrbRecentItem
            </summary>
            <param name="text">The string text to use</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbRecentItem.OnGetImageBounds(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode,System.Drawing.Rectangle)">
             <summary>
            
             </summary>
             <param name="sMode"></param>
             <param name="bounds"></param>
             <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonOrbRecentItem.OnGetTextBounds(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode,System.Drawing.Rectangle)">
             <summary>
            
             </summary>
             <param name="sMode"></param>
             <param name="bounds"></param>
             <returns></returns>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPanel">
            <summary>
            Ribbon Panel Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.#ctor">
            <summary>
            Creates a new RibbonPanel
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.#ctor(System.String,DotSpatial.Controls.RibbonControls.RibbonPanelFlowDirection)">
            <summary>
            Creates a new RibbonPanel with the specified text and panel flow direction
            </summary>
            <param name="text">Text of the panel</param>
            <param name="flowsTo">Flow direction of the content items</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.#ctor(System.String,DotSpatial.Controls.RibbonControls.RibbonPanelFlowDirection,System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Creates a new RibbonPanel with the specified text and panel flow direction
            </summary>
            <param name="text">Text of the panel</param>
            <param name="flowsTo">Flow direction of the content items</param>
            <param name="items">the items</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SwitchToSize(System.Windows.Forms.Control,System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Size
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <summary>
            Raises the paint event and draws the
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the bounds of the panel
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the panel on the mode specified by the event object
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetSelected(System.Boolean)">
            <summary>
            Sets the value of the Selected property
            </summary>
            <param name="selected">Value that indicates if the element is selected</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonPanel.Resize"/> method
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.ShowOverflowPopup">
            <summary>
            Shows the panel in a popup
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.MeasureSizeFlowsToRight(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size when flow direction is to right
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.MeasureSizeFlowsToBottom(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size when flow direction is to bottom
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetSizeMode(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Sets the value of the SizeMode property
            </summary>
            <param name="sizeMode"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetContentBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the ContentBounds property
            </summary>
            <param name="contentBounds">Bounds of the content on the panel</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetOwnerTab(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Sets the value of the OwnerTab property
            </summary>
            <param name="ownerTab">RibbonTab where this item is located</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.UpdateItemsRegions(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Updates the bounds of child elements
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.UpdateRegionsFlowsToBottom(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Updates the bounds of child elements when flow is to bottom
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.UpdateRegionsFlowsToLeft(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Updates the bounds of child elements when flow is to Left.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.UpdateRegionsFlowsToRight(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Updates the bounds of child elements when flow is to bottom
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.CenterItems">
            <summary>
            Centers the items on the tab conent
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.ToString">
            <summary>
            Overriden. Gives info about the panel as a string
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetPressed(System.Boolean)">
            <summary>
            Sets the value of the Pressed property
            </summary>
            <param name="pressed"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetMorePressed(System.Boolean)">
            <summary>
            Sets the value of the ButtonMorePressed property
            </summary>
            <param name="pressed"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetMoreSelected(System.Boolean)">
            <summary>
            Sets the value of the ButtonMoreSelected property
            </summary>
            <param name="selected"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.SetMoreBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the ButtonMoreBounds property
            </summary>
            <param name="bounds">property value</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnButtonMoreClick(System.EventArgs)">
            <summary>
            Raised the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonPanel.ButtonMoreClick"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.GetItems">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.GetContentBounds">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseEnter event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the DoubleClick event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanel.GetAllChildComponents">
            <inheritdoc/>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the panel
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.MouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the panel
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved inside the panel
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.Paint">
            <summary>
            Occurs when the panel is redrawn
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.Resize">
            <summary>
            Occurs when the panel is resized
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.ButtonMoreClick">
            <summary>
            Mutton More Clicked
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.Click">
            <summary>
            Click
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.DoubleClick">
            <summary>
            Double Click
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.MouseDown">
            <summary>
            Mouse Down
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonPanel.MouseUp">
            <summary>
            MouseUp
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Enabled">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Visible">
            <summary>
            Visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Collapsed">
            <summary>
            Gets if this panel is currenlty collapsed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.ButtonMoreVisible">
            <summary>
            Gets or sets the visibility of the "More" button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.ButtonMoreEnabled">
            <summary>
            Gets or sets a value indicating if the "More" button should be enabled
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.ButtonMoreSelected">
            <summary>
            Gets if the "More" button is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.ButtonMorePressed">
            <summary>
            Gets if the "More" button is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.ButtonMoreBounds">
            <summary>
            Gets the bounds of the "More" button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Pressed">
            <summary>
            Gets if the panel is currently on overflow and pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.PopUp">
            <summary>
            Gets or sets the pop up where the panel is being drawn (if any)
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.SizeMode">
            <summary>
            Gets the current size mode of the panel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Items">
            <summary>
            Gets the collection of RibbonItem elements of this panel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Text">
            <summary>
            Gets or sets the text that is to be displayed on the bottom of the panel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Image">
            <summary>
            Gets or sets the image that is to be displayed on the panel when shown as an overflow button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.OverflowMode">
            <summary>
            Gets if the panel is in overflow mode
            </summary>
            <remarks>Overflow mode is when the available space to draw the panel is not enough to draw components, so panel is drawn as a button that shows the full content of the panel in a pop-up window when clicked</remarks>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Owner">
            <summary>
            Gets the Ribbon that contains this panel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Bounds">
            <summary>
            Gets the bounds of the panel relative to the Ribbon control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Selected">
            <summary>
            Gets a value indicating whether the panel is selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.Tag">
            <summary>
            Gets or sets the object that contains data about the control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.ContentBounds">
            <summary>
            Gets the bounds of the content of the panel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.OwnerTab">
            <summary>
            Gets the RibbonTab that contains this panel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.FlowsTo">
            <summary>
            Gets or sets the flow direction to layout items
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanel.PopupShowed">
            <summary>
            Gets or sets if the popup is currently showing
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPanelCollection">
            <summary>
            Represents a collection of RibbonPanel objects
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelCollection.#ctor(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Createas a new instance of a ribbon Panel Collection
            </summary>
            <param name="ownerTab"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelCollection.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Creates a new RibbonPanelCollection
            </summary>
            <param name="owner">Ribbon that contains the tab of this panel collection</param>
            <param name="ownerTab">RibbonTab that contains this panel collection</param>
            <exception cref="T:System.ArgumentNullException">owner is null</exception>
            <exception cref="T:System.ArgumentNullException">ownerTab is null</exception>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelCollection.Add(DotSpatial.Controls.RibbonControls.RibbonPanel)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelCollection.AddRange(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonPanel})">
            <summary>
            Adds a range of panels to the collection
            </summary>
            <param name="items">Panels to add</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelCollection.Insert(System.Int32,DotSpatial.Controls.RibbonControls.RibbonPanel)">
            <summary>
            Inserts the specified panel at the desired index
            </summary>
            <param name="index">Desired index to insert the panel</param>
            <param name="item">Panel to insert</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelCollection.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelCollection.SetOwnerTab(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Sets the value of the OwnerTab Property
            </summary>
            <param name="ownerTab"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelCollection.Owner">
            <summary>
            Gets the Ribbon that contains this panel collection
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelCollection.OwnerTab">
            <summary>
            Gets the RibbonTab that contains this panel collection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelDesigner.Initialize(System.ComponentModel.IComponent)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelDesigner.Panel">
            <summary>
            This Panel
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelDesigner.Ribbon">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelDesigner.Collection">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPanelFlowDirection">
            <summary>
            Represents possible flow directions of items on the panels
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonPanelFlowDirection.Left">
            <summary>
            Layout of items flows to the left, then down
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonPanelFlowDirection.Right">
            <summary>
            Layout of items flows to the Right, then down
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonPanelFlowDirection.Bottom">
            <summary>
            Layout of items flows to the bottom, then to the right
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPanelGlyph">
            <summary>
            The Ribbon Panel Glyph class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelGlyph.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService,DotSpatial.Controls.RibbonControls.RibbonTabDesigner,DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Creates a new instance of the Ribbon Panel Glyph
            </summary>
            <param name="behaviorService">A behavior service controling how the glyph works</param>
            <param name="designer">The Designer, controling some rendering options</param>
            <param name="tab">A RibobnTab</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelGlyph.GetHitTest(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelGlyph.Bounds">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPanelGlyphBehavior">
            <summary>
            RibbonPanelGlyphBehavior Class establishes the behavior for the glyph in the designer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelGlyphBehavior.#ctor(DotSpatial.Controls.RibbonControls.RibbonTabDesigner,DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Creates a new instance for the Ribbon panel Glyph Behavior
            </summary>
            <param name="designer">The RibbonTabDesigner</param>
            <param name="tab">A RibbonTab</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelGlyphBehavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPanelPopup">
            <summary>
            Ribbon Panel Popup Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelPopup.#ctor(DotSpatial.Controls.RibbonControls.RibbonPanel)">
             <summary>
            
             </summary>
             <param name="panel"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelPopup.GetSizeMode(DotSpatial.Controls.RibbonControls.RibbonPanel)">
            <summary>
            Get Size Mode
            </summary>
            <param name="pnl"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelPopup.IgnoreNextClickDeactivation">
            <summary>
            Prevents the form from being hidden the next time the mouse clicks on the form.
            It is useful for reacting to clicks of items inside items.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelPopup.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelPopup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelPopup.OnClosed(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelPopup.Sensor">
            <summary>
            Sensor
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelPopup.Panel">
            <summary>
            Gets the panel related to the form
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs">
            <summary>
            RibbonPanelRenderEventArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonPanel,System.Windows.Forms.Control)">
            <summary>
            Ribbon Panel Render Event Args
            </summary>
            <param name="owner"></param>
            <param name="g"></param>
            <param name="clip"></param>
            <param name="panel"></param>
            <param name="canvas"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs.Panel">
            <summary>
            Gets or sets the panel related to the events
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs.Canvas">
            <summary>
            Gets or sets the control where the panel is being rendered
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonElementSizeMode">
            <summary>
            Represents the size modes that a RibbonElement can be
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonElementSizeMode.DropDown">
            <summary>
            The item is being shown on a dropdown
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonElementSizeMode.Large">
            <summary>
            Maximum size the element can reach
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonElementSizeMode.Medium">
            <summary>
            A medium size for the element when not much space is available
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonElementSizeMode.Compact">
            <summary>
            The minimum size the element can be
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonElementSizeMode.Overflow">
            <summary>
            The item doesn't fit as compact, so it must be shown as a single button
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonElementSizeMode.None">
            <summary>
            No size mode specified
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPopupManager">
            <summary>
            Manages opened popups
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopupManager.Register(DotSpatial.Controls.RibbonControls.RibbonPopup)">
            <summary>
            Registers a popup existance
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopupManager.Unregister(DotSpatial.Controls.RibbonControls.RibbonPopup)">
            <summary>
            Unregisters a popup from existance
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopupManager.FeedHookClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Feeds a click generated on the mouse hook
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopupManager.FeedMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Feeds mouse Wheel. If applied on a IScrollableItem it's sended to it
            </summary>
            <param name="e"></param>
            <returns>True if handled. False otherwise</returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissChildren(DotSpatial.Controls.RibbonControls.RibbonPopup,DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason)">
            <summary>
            Closes all children of specified pop-up
            </summary>
            <param name="parent">Pop-up of which children will be closed</param>
            <param name="reason">Reason for dismissing</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopupManager.Dismiss(DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason)">
            <summary>
            Closes all currently registered pop-ups
            </summary>
            <param name="reason"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopupManager.Dismiss(DotSpatial.Controls.RibbonControls.RibbonPopup,DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason)">
            <summary>
            Closes specified pop-up and all its descendants
            </summary>
            <param name="startPopup">Pop-up to close (and its descendants)</param>
            <param name="reason">Reason for closing</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonPopupManager.Dismiss(System.Int32,DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason)">
            <summary>
            Closes pop-up of the specified index and all its descendants
            </summary>
            <param name="startPopup">Index of the pop-up to close</param>
            <param name="reason">Reason for closing</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonPopupManager.LastPopup">
            <summary>
            Gets the last pop-up of the collection
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason">
            <summary>
            Specifies reasons why pop-ups can be dismissed
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason.ItemClicked">
            <summary>
            An item has been clicked
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason.AppClicked">
            <summary>
            The app has been clicked
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason.NewPopup">
            <summary>
            A new popup is showing and will hide sibling's popups
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason.AppFocusChanged">
            <summary>
            The aplication window has been deactivated
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonPopupManager.DismissReason.EscapePressed">
            <summary>
            User has pressed escape on the keyboard
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable">
            <summary>
            RibbonProfesionalRendererColorTable
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.FormBorder">
            <summary>
            Color of the form border
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownDarkBorder">
            <summary>
            Color of the drop down dark border
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownLightBorder">
            <summary>
            Color of the drop down light border
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownBack">
            <summary>
            Color of the drop down background
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownNorthA">
            <summary>
            Color of the OrbDropDown North A
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownNorthB">
            <summary>
            Color of the  OrbDropDownNorthB
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownNorthC">
            <summary>
            Color of the OrbDropDownNorthC
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownNorthD">
            <summary>
            Color of the OrbDropDownNorthD
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownSouthC">
            <summary>
            Color of the OrbDropDownSouthC
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownSouthD">
            <summary>
            Color of the OrbDropDownSouthD
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownContentbg">
            <summary>
            Color of the OrbDropDownContentbg
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownContentbglight">
            <summary>
            Color of the OrbDropDownContentbglight
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownSeparatorlight">
            <summary>
            Color of the OrbDropDownSeparatorlight
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbDropDownSeparatordark">
            <summary>
            Color of the OrbDropDownSeparatordark
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.Caption1">
            <summary>
            Caption bar is made of 4 rectangles height of each is indicated below
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.Caption2">
            <summary>
            Color of the second caption bar rectangle
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.Caption3">
            <summary>
            Color of the third caption bar rectangle
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.Caption4">
            <summary>
            Color of the fourth caption bar rectangle
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.Caption5">
            <summary>
            Color of the fifth caption bar rectangle
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.Caption6">
            <summary>
            Color of the sixth caption bar rectangle
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.Caption7">
            <summary>
            Color of the seventh caption bar rectangle
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.QuickAccessBorderDark">
            <summary>
             Color of the dark Quick Access Border
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.QuickAccessBorderLight">
            <summary>
            Color fo the Light Quick Access Border
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.QuickAccessUpper">
            <summary>
            Color of the upper portion of the Quick Access panel
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.QuickAccessLower">
            <summary>
            Color of the lower portion of the Quick Access panel
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbOptionBorder">
            <summary>
            The color of the orb border
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbOptionBackground">
            <summary>
            Color of the background of the orb ption border
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbOptionShine">
            <summary>
            Color of the orb option shine
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.Arrow">
             <summary>
            
             </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbBackgroundDark">
            <summary>
            Orb colors in normal state
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbSelectedBackgroundDark">
            <summary>
            Orb colors in selected state
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTable.OrbPressedBackgroundDark">
            <summary>
            Orb colors in pressed state
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTableBlack">
            <summary>
            This class stores some of the color tables used for rendering
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfesionalRendererColorTableBlack.#ctor">
            <summary>
            Creates a new instance of th professional color table
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer">
            <summary>
            Ribbon professional Renderer Class
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonRenderer">
            <summary>
            Provides render functionallity for the Ribbon control
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.MultiplyColorMatrix(System.Single[][],System.Single[][])">
            <summary>
            Multiplies the color matrix (Extracted from .NET Framework
            </summary>
            <param name="matrix1"></param>
            <param name="matrix2"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.CreateDisabledImage(System.Drawing.Image)">
            <summary>
            Creates the disabled image for the specified Image
            </summary>
            <param name="normalImage"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderOrbDropDownBackground(DotSpatial.Controls.RibbonControls.RibbonOrbDropDownEventArgs)">
            <summary>
            Renders the Ribbon Orb's DropDown background
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonCaptionBar(DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs)">
            <summary>
            Renders the Ribbon's caption bar
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonOrb(DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs)">
            <summary>
            Renders the orb of the ribbon
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonQuickAccessToolbarBackground(DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs)">
            <summary>
            Renders the background of the QuickAccess toolbar
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonBackground(DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs)">
            <summary>
            Renders the Ribbon's background
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonTab(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <summary>
            Renders a RibbonTab
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonItem(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs)">
            <summary>
            Renders a RibbonItem
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonTabContentBackground(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <summary>
            Renders the background of the content of the specified tab
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonPanelBackground(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <summary>
            Renders the background of the specified ribbon panel
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonTabText(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <summary>
            Renders the text of the tab specified on the event
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonItemText(DotSpatial.Controls.RibbonControls.RibbonTextEventArgs)">
            <summary>
            Renders the text of the item specified on the event
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonItemBorder(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs)">
            <summary>
            Renders the border of the item, after the text and image of the item
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonItemImage(DotSpatial.Controls.RibbonControls.RibbonItemBoundsEventArgs)">
            <summary>
            Renders the image of the item specified on the event
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderRibbonPanelText(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <summary>
            Renders the text of the specified panel
            </summary>
            <param name="e">Event data and paint tools</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderDropDownBackground(DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs)">
            <summary>
            Renders the background of a dropdown
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderPanelPopupBackground(DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs)">
            <summary>
            Renders the background of a panel background
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonRenderer.OnRenderTabScrollButtons(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <summary>
            Call to draw the scroll buttons on the tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonRenderer.DisabledImageColorMatrix">
            <summary>
            Gets the disabled image color matrix
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.#ctor">
            <summary>
            Creates a new instance of the Ribbon Professional Renderer
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.GetTextColor(System.Boolean)">
            <summary>
            Gets the text color
            </summary>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.GetTextColor(System.Boolean,System.Drawing.Color)">
            <summary>
            Gets the text color
            </summary>
            <param name="enabled"></param>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.RoundRectangle(System.Drawing.Rectangle,System.Int32,DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners)">
            <summary>
            Creates a rectangle with the specified corners rounded
            </summary>
            <param name="r"></param>
            <param name="radius"></param>
            <param name="corners"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.GradientRect(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draws a rectangle with a vertical gradient
            </summary>
            <param name="g"></param>
            <param name="r"></param>
            <param name="northColor"></param>
            <param name="southColor"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawPressedShadow(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws a shadow that indicates that the element is pressed
            </summary>
            <param name="g"></param>
            <param name="r"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,DotSpatial.Controls.RibbonControls.RibbonArrowDirection)">
            <summary>
            Draws an arrow on the specified bounds
            </summary>
            <param name="g"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="d"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawArrowShaded(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonArrowDirection,System.Boolean)">
            <summary>
            Draws the pair of arrows that make a shadded arrow, centered on the specified bounds
            </summary>
            <param name="g"></param>
            <param name="b"></param>
            <param name="d"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.CenterOn(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Centers the specified rectangle on the specified container
            </summary>
            <param name="container"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawGripDot(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Draws a dot of the grip
            </summary>
            <param name="g"></param>
            <param name="location"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.CreateCompleteTabPath(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Creates the path of the tab and its contents
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.CreateTabPath(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Creates the path of the tab and its contents
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawCompleteTab(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <summary>
            Draws a complete tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawTabNormal(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <summary>
            Draws a complete tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawTabSelected(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <summary>
            Draws a selected tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawTabPressed(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <summary>
            Draws a pressed tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawTabActive(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <summary>
            Draws an active tab
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawPanelNormal(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <summary>
            Draws a panel in normal state (unselected)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawPanelSelected(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <summary>
            Draws a panel in selected state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonMoreGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draw Button More Glpy
            </summary>
            <param name="g"></param>
            <param name="b"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonMoreGlyph(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Color)">
            <summary>
            Draw Butotn More Glpyh
            </summary>
            <param name="gr"></param>
            <param name="p"></param>
            <param name="color"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawPanelOverflowNormal(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <summary>
            Draws an overflown panel in normal state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawPannelOveflowSelected(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <summary>
            Draws an overflown panel in selected state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawPanelOverflowPressed(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <summary>
            Draws an overflown panel in pressed state
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawPanelOverflowImage(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <summary>
            Draws the image of the panel when collapsed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.ButtonCorners(DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Gets the corners to round on the specified button
            </summary>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.ButtonFaceRounding(DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Determines buttonface corners
            </summary>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.ButtonDdRounding(DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Determines button's dropDown corners
            </summary>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawOrbOptionButton(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the orb's option buttons background
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners)">
            <summary>
            Draws a regular button in normal state
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="corners"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.LargeButtonDropDownArrowBounds(System.Drawing.Graphics,System.Drawing.Font,System.String,System.Drawing.Rectangle)">
            <summary>
            Large Butotn DropDown Arrow Bounds
            </summary>
            <param name="g"></param>
            <param name="font"></param>
            <param name="text"></param>
            <param name="textLayout"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonDropDownArrow(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonButton,System.Drawing.Rectangle)">
            <summary>
            Draws the arrow of buttons
            </summary>
            <param name="g"></param>
            <param name="button"></param>
            <param name="textLayout"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonDisabled(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners)">
            <summary>
            Draws a regular button in disabled state
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="corners"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonPressed(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners)">
            <summary>
            Draws a regular button in pressed state
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="corners"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonSelected(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners)">
            <summary>
            Draws a regular buttton in selected state
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="corners"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonPressed(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Draws the button as pressed
            </summary>
            <param name="g"></param>
            <param name="button"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonChecked(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Draws the button as Checked
            </summary>
            <param name="g"></param>
            <param name="button"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonChecked(System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners)">
            <summary>
            Draws the button as checked
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="corners"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonSelected(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Draws the button as a selected button
            </summary>
            <param name="g"></param>
            <param name="button"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawSplitButton(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs,DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Draws a SplitDropDown button in normal state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawSplitButtonPressed(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs,DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Draws a SplitDropDown button in pressed state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawSplitButtonSelected(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs,DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Draws a SplitDropDown button in selected state
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawSplitButtonDropDownPressed(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs,DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Draws a SplitDropDown button with the dropdown area pressed
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawSplitButtonDropDownSelected(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs,DotSpatial.Controls.RibbonControls.RibbonButton)">
            <summary>
            Draws a SplitDropDown button with the dropdown area selected
            </summary>
            <param name="e"></param>
            <param name="button"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawItemGroup(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs,DotSpatial.Controls.RibbonControls.RibbonItemGroup)">
            <summary>
            Draws the background of the specified  RibbonItemGroup
            </summary>
            <param name="e"></param>
            <param name="grp"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawItemGroupBorder(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs,DotSpatial.Controls.RibbonControls.RibbonItemGroup)">
            <summary>
            Draws the background of the specified  RibbonItemGroup
            </summary>
            <param name="e"></param>
            <param name="grp"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawButtonList(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonButtonList)">
            <summary>
            Draw the button list
            </summary>
            <param name="g"></param>
            <param name="list"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawSeparator(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonSeparator)">
            <summary>
            Draw the Separator
            </summary>
            <param name="g"></param>
            <param name="separator"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawTextBoxDisabled(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws a disabled textbox
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawTextBoxUnselected(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws an unselected textbox
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawTextBoxSelected(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws an unselected textbox
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawComboxDropDown(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonComboBox)">
            <summary>
            Draw Combo box
            </summary>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawUpDownButtons(System.Drawing.Graphics,DotSpatial.Controls.RibbonControls.RibbonUpDown)">
            <summary>
            Draw Up Down Buttons
            </summary>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawCaptionBarBackground(System.Drawing.Rectangle,System.Drawing.Graphics)">
            <summary>
            Draw Caption Bar Background
            </summary>
            <param name="r"></param>
            <param name="g"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonCaptionBar(DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonOrb(DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonQuickAccessToolbarBackground(DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.DrawOrb(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Boolean,System.Boolean)">
            <summary>
            Draws the orb on the specified state
            </summary>
            <param name="g">Device to draw</param>
            <param name="r">Layout rectangle for the orb</param>
            <param name="image"></param>
            <param name="selected">Specifies if the orb should be drawn as selected</param>
            <param name="pressed">Specifies if the orb should be drawn as pressed</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderOrbDropDownBackground(DotSpatial.Controls.RibbonControls.RibbonOrbDropDownEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonBackground(DotSpatial.Controls.RibbonControls.RibbonRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonTab(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonTabText(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonPanelBackground(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonPanelText(DotSpatial.Controls.RibbonControls.RibbonPanelRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonItem(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonItemBorder(DotSpatial.Controls.RibbonControls.RibbonItemRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonItemText(DotSpatial.Controls.RibbonControls.RibbonTextEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderRibbonItemImage(DotSpatial.Controls.RibbonControls.RibbonItemBoundsEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderPanelPopupBackground(DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderDropDownBackground(DotSpatial.Controls.RibbonControls.RibbonCanvasEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.OnRenderTabScrollButtons(DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.ColorTable">
            <summary>
            Color Table
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners">
            <summary>
            Corners
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.None">
            <summary>
            None - 0
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.NorthWest">
            <summary>
            NorthWest - 2
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.NorthEast">
            <summary>
            NorthEast - 4
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.SouthEast">
            <summary>
            SouthEast - 8
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.SouthWest">
            <summary>
            southWest - 16
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.All">
            <summary>
            All Four
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.North">
            <summary>
            Both North
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.South">
            <summary>
            Both South
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.East">
            <summary>
            Both East
            </summary>
        </member>
        <member name="F:DotSpatial.Controls.RibbonControls.RibbonProfessionalRenderer.Corners.West">
            <summary>
            Both West
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar">
            <summary>
            Represents a quick access toolbar hosted on the Ribbon
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.SetBounds(System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.GetAllChildComponents">
            <summary>
            Gets all the child components
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.GetItems">
            <summary>
            Get Items
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.GetContentBounds">
            <summary>
            Get Content Bounds
            </summary>
            <returns></returns>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.DropDownButtonVisible">
            <summary>
            Shows or hides the dropdown button of the toolbar
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.SuperBounds">
            <summary>
            Gets the bounds of the toolbar including the graphic adornments
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.DropDownButton">
            <summary>
            Gets the dropdown button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.Padding">
            <summary>
            Gets or sets the padding (internal) of the toolbar
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.Margin">
            <summary>
            Gets or sets the margin (external) of the toolbar
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.MenuButtonVisible">
            <summary>
            Gets or sets a value indicating if the button that shows the menu of the
            QuickAccess toolbar should be visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.Sensor">
            <summary>
            Sensor
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar.Items">
            <summary>
            Gets the
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarGlyph">
            <summary>
            Ribbon Quick Access Toolbar Glyph
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarGlyph.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService,DotSpatial.Controls.RibbonControls.RibbonDesigner,DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new instance of the Ribbon quick Access Toolbar Glyph
            </summary>
            <param name="behaviorService">The behavior service adding function to the glyph</param>
            <param name="designer">A RibbonDesigner</param>
            <param name="ribbon">The Ribbon class itself</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarGlyph.GetHitTest(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarGlyph.Bounds">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonQuickAccessGlyphBehavior">
            <summary>
            A Ribbon Quick Access Glyph Behavior class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessGlyphBehavior.#ctor(DotSpatial.Controls.RibbonControls.RibbonDesigner,DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new instance of a Ribbon Quick Access glyph Behavior
            </summary>
            <param name="designer">The RibbonDesigner</param>
            <param name="ribbon">The Ribbon this glyph adorns</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessGlyphBehavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarItemCollection">
            <summary>
            Quick Access Toolbar for the Ribbon
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarItemCollection.#ctor(DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbar)">
            <summary>
            Creates a new collection
            </summary>
            <param name="toolbar"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarItemCollection.Add(DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Adds the specified item to the collection
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarItemCollection.AddRange(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonItem})">
            <summary>
            Adds the specified range of items
            </summary>
            <param name="items">Items to add</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarItemCollection.Insert(System.Int32,DotSpatial.Controls.RibbonControls.RibbonItem)">
            <summary>
            Inserts the specified item at the desired index
            </summary>
            <param name="index">Desired index of the item</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonQuickAccessToolbarItemCollection.OwnerToolbar">
            <summary>
            Gets the group that owns this item collection
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonSeparator">
            <summary>
            Ribbon Separator Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonSeparator.#ctor">
            <summary>
            Creates a new instance of a Ribbon Separator
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonSeparator.#ctor(System.String)">
            <summary>
            Creates a new instance of a Ribobn Separator with text
            </summary>
            <param name="text">The string text for the separator</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonSeparator.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonSeparator.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonSeparator.DrawBackground">
            <summary>
            Gets or sets a value indicating if the separator should draw the divider lines
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonTab">
            <summary>
            Represents a tab that can contain RibbonPanel objects
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.#ctor">
            <summary>
            Creates a new RibbonTab
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.String)">
            <summary>
            Creates a new RibbonTab
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetBounds(System.Drawing.Rectangle)">
            <summary>
            This method is not relevant for this class
            </summary>
            <exception cref="T:System.NotSupportedException">Always</exception>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetContext(DotSpatial.Controls.RibbonControls.RibbonContext)">
            <summary>
            Sets the context of the tab
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <summary>
            Measures the size of the tab. The tab content bounds is measured by the Ribbon control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetPressed(System.Boolean)">
            <summary>
            Sets the value of the Pressed property
            </summary>
            <param name="pressed">Value that indicates if the element is pressed</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetSelected(System.Boolean)">
            <summary>
            Sets the value of the Selected property
            </summary>
            <param name="selected">Value that indicates if the element is selected</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnContextChanged(System.EventArgs)">
            <summary>
            Fires the Context Changed event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnTextChanged(System.EventArgs)">
            <summary>
            Fires the Text Changed Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnActiveChanged(System.EventArgs)">
            <summary>
            Fires the ActiveChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnPressedChanged(System.EventArgs)">
            <summary>
            Fires the PressedChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnOwnerChanged(System.EventArgs)">
            <summary>
            Fires the owner changed event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnTabContentBoundsChanged(System.EventArgs)">
            <summary>
            Fires the Tab Content Bounds Changed event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnTabBoundsChanged(System.EventArgs)">
            <summary>
            Fires the TabBoundsChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnScrollRightVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightVisibleChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnScrollRightPressedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightPressedChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnScrollRightBoundsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightBoundsChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnScrollRightSelectedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightSelectedChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnScrollLeftVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftVisibleChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnScrollLeftPressedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftPressedChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnScrollLeftBoundsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftBoundsChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnScrollLeftSelectedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftSelectedChanged"/> event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetActive(System.Boolean)">
            <summary>
            Sets the tab as active without sending the message to the Ribbon
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetTabBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the TabBounds property
            </summary>
            <param name="tabBounds">Rectangle representing the bounds of the tab</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetTabContentBounds(System.Drawing.Rectangle)">
            <summary>
            Sets the value of the TabContentBounds
            </summary>
            <param name="tabContentBounds">Rectangle representing the bounds of the tab's content</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.GetLargerPanel(DotSpatial.Controls.RibbonControls.RibbonElementSizeMode)">
            <summary>
            Gets the panel with the larger width and the specified size mode
            </summary>
            <param name="size">Size mode of panel to search</param>
            <returns>Larger panel. Null if none of the specified size mode</returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.GetLargerPanel">
            <summary>
            Gets the panel with a larger size
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.UpdatePanelsRegions">
            <summary>
            Updates the regions of the panels and its contents
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.UpdateScrollBounds">
            <summary>
            Updates the bounds of the scroll bounds
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.ToString">
            <summary>
            Overriden. Returns a string representation of the tab
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseEnter event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetScrollLeftPressed(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftPressed"/>
            </summary>
            <param name="pressed"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetScrollLeftSelected(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftSelected"/>
            </summary>
            <param name="selected"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetScrollRightPressed(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightPressed"/>
            </summary>
            <param name="pressed"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.SetScrollRightSelected(System.Boolean)">
            <summary>
            Sets the value of the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightSelected"/>
            </summary>
            <param name="selected"></param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeft">
            <summary>
            Presses the lef-scroll button
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRight">
            <summary>
            Presses the left-scroll button
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollOffset(System.Int32)">
            <summary>
            Controls the scroll offset
            </summary>
            <param name="amount">The integer amount</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTab.GetAllChildComponents">
            <inheritdoc/>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.MouseEnter">
            <summary>
            Occurs when the mouse pointer enters the panel
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.MouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the panel
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.MouseMove">
            <summary>
            Occurs when the mouse pointer is moved inside the panel
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightVisibleChanged">
            <summary>
            Occurs after the visibility of the right scrollbar changes
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightPressedChanged">
            <summary>
            Occurs after the "pressed" attribute of the Right Scrollbar changes
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightBoundsChanged">
            <summary>
            Occurs after the right bounds have changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightSelectedChanged">
            <summary>
            Occurs after the right selected is changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftVisibleChanged">
            <summary>
            Occurs after the visibiliy of the left scrollbar has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftPressedChanged">
            <summary>
            Occurs after the pressed property of the left scrollbar has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftSelectedChanged">
            <summary>
            Occurs after the selected property of the left scrollbar has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftBoundsChanged">
            <summary>
            Occurs after the bounds of the left scrolbar have changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.TabBoundsChanged">
            <summary>
            Occurs after the bounds of the tab change
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.TabContentBoundsChanged">
            <summary>
            Occurs after the content of the bounds changes
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.OwnerChanged">
            <summary>
            Occurs after the owner has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.PressedChanged">
            <summary>
            Occurs after the pressed attribute has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ActiveChanged">
            <summary>
            Occurs after the active element has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.TextChanged">
            <summary>
            Occurs after the text has changed
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonTab.ContextChanged">
            <summary>
            Occurs after the context has changed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightVisible">
            <summary>
            Gets if the right-side scroll button is currently visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightSelected">
            <summary>
            Gets if the right-side scroll button is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightPressed">
            <summary>
            Gets if the right-side scroll button is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollRightBounds">
            <summary>
            Gets if the right-side scroll button bounds
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftVisible">
            <summary>
            Gets if the left scroll button is currently visible
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftBounds">
            <summary>
            Gets if the left scroll button bounds
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftSelected">
            <summary>
            Gets if the left scroll button is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.ScrollLeftPressed">
            <summary>
            Gets if the left scroll button is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Bounds">
            <summary>
            Gets the <see cref="P:DotSpatial.Controls.RibbonControls.RibbonTab.TabBounds"/> property value
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Panels">
            <summary>
            Gets the collection of panels that belong to this tab
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.TabBounds">
            <summary>
            Gets the bounds of the little tab showing the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.TabContentBounds">
            <summary>
            Gets the bounds of the tab content on the Ribbon
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Owner">
            <summary>
            Gets the Ribbon that contains this tab
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Pressed">
            <summary>
            Gets a value indicating whether the state of the tab is being pressed by the mouse or a key
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Selected">
            <summary>
            Gets a value indicating whether the tab is selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Active">
            <summary>
            Gets a value indicating if the tab is currently the active tab
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Tag">
            <summary>
            Gets or sets the object that contains data about the control
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Text">
            <summary>
            Gets or sets the text that is to be displayed on the tab
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Contextual">
            <summary>
            Gets a value indicating whether the tab is attached to a  Context
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Context">
            <summary>
            Gets or sets the context this tab belongs to
            </summary>
            <remarks>Tabs on a context are highlighted with a special glow color</remarks>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTab.Visible">
            <summary>
            Gets or sets the visibility of this tab
            </summary>
            <remarks>Tabs on a context are highlighted with a special glow color</remarks>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonTabCollection">
            <summary>
            Represents a collection of RibbonTab objects
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabCollection.#ctor(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new RibbonTabCollection
            </summary>
            <param name="owner">|</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabCollection.Add(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Adds the specified item to the collection
            </summary>
            <param name="item">Item to add to the collection</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabCollection.AddRange(System.Collections.Generic.IEnumerable{DotSpatial.Controls.RibbonControls.RibbonTab})">
            <summary>
            Adds the specified items to the collection
            </summary>
            <param name="items">Items to add to the collection</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabCollection.Insert(System.Int32,DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Inserts the specified item into the specified index
            </summary>
            <param name="index">Desired index of the item into the collection</param>
            <param name="item">Tab to be inserted</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabCollection.Remove(DotSpatial.Controls.RibbonControls.RibbonTab)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabCollection.RemoveAll(System.Predicate{DotSpatial.Controls.RibbonControls.RibbonTab})">
            <summary>
            Not supported
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabCollection.RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabCollection.RemoveRange(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabCollection.SetOwner(DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Sets the value of the Owner Property
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTabCollection.Owner">
            <summary>
            Gets the Ribbon that owns this tab
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonTabDesigner">
            <summary>
            A Ribbon Tab Designer Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabDesigner.AddPanel(System.Object,System.EventArgs)">
            <summary>
            Adds a new pannel
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The EventArgs</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabDesigner.Initialize(System.ComponentModel.IComponent)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTabDesigner.Verbs">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTabDesigner.Tab">
            <summary>
            The Ribbon Tab
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonTabGlyph">
            <summary>
            Ribbon Tab Glyph Class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabGlyph.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService,DotSpatial.Controls.RibbonControls.RibbonDesigner,DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new instance of the Ribbon Tab Glyph
            </summary>
            <param name="behaviorService">A Behavior Service</param>
            <param name="designer">The RibbonDesigner</param>
            <param name="ribbon">The Ribbon</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabGlyph.GetHitTest(System.Drawing.Point)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTabGlyph.Bounds">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonTabGlyphBehavior">
            <summary>
            A Ribbon Tab Glyph Behavior
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabGlyphBehavior.#ctor(DotSpatial.Controls.RibbonControls.RibbonDesigner,DotSpatial.Controls.RibbonControls.Ribbon)">
            <summary>
            Creates a new instance of a RibbonTabGlpyhBehavior
            </summary>
            <param name="designer">The RibbonDesigner</param>
            <param name="ribbon">The ribbon that this element belongs to</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabGlyphBehavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
            <inheritdoc/>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs">
            <summary>
            RibbonTabRenderEventArgs
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonTab)">
            <summary>
            Creates a new instance of the RibbonTabRenderEventArgs
            </summary>
            <param name="owner"></param>
            <param name="g"></param>
            <param name="clip"></param>
            <param name="tab"></param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTabRenderEventArgs.Tab">
            <summary>
            Gets or sets the RibbonTab related to the evennt
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonTextEventArgs">
            <summary>
            An Event Args class for Text Events
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonItem,System.Drawing.Rectangle,System.String)">
            <summary>
            Constructs a new instance of a RibbonTextEventArgs class
            </summary>
            <param name="owner">The Ribbon</param>
            <param name="g">The GDI+ Graphics Surface for drawing</param>
            <param name="clip">The Rectangle defining the clip region</param>
            <param name="item">The RibbonItem</param>
            <param name="bounds">The rectangular bounds of the text</param>
            <param name="text">The string text</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonItem,System.Drawing.Rectangle,System.String,System.Drawing.FontStyle)">
            <summary>
            Constructs a new instance of a RibbonTextEventArgs class
            </summary>
            <param name="owner">The Ribbon</param>
            <param name="g">The GDI+ Graphics Surface for drawing</param>
            <param name="clip">The Rectangle defining the clip region</param>
            <param name="item">The RibbonItem</param>
            <param name="bounds">The rectangular bounds of the text</param>
            <param name="text">The string text</param>
            <param name="style">The FontStyle for the text</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonItem,System.Drawing.Rectangle,System.String,System.Drawing.StringFormat)">
            <summary>
            Constructs a new instance of a RibbonTextEventArgs class
            </summary>
            <param name="owner">The Ribbon</param>
            <param name="g">The GDI+ Graphics Surface for drawing</param>
            <param name="clip">The Rectangle defining the clip region</param>
            <param name="item">The RibbonItem</param>
            <param name="bounds">The rectangular bounds of the text</param>
            <param name="text">The string text</param>
            <param name="format">The Format controlling how the string should be drawn</param>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonTextEventArgs.#ctor(DotSpatial.Controls.RibbonControls.Ribbon,System.Drawing.Graphics,System.Drawing.Rectangle,DotSpatial.Controls.RibbonControls.RibbonItem,System.Drawing.Rectangle,System.String,System.Drawing.Color,System.Drawing.FontStyle,System.Drawing.StringFormat)">
            <summary>
            Constructs a new instance of a RibbonTextEventArgs class
            </summary>
            <param name="owner">The Ribbon</param>
            <param name="g">The GDI+ Graphics Surface for drawing</param>
            <param name="clip">The Rectangle defining the clip region</param>
            <param name="item">The RibbonItem</param>
            <param name="bounds">The rectangular bounds of the text</param>
            <param name="text">The string text</param>
            <param name="color">The color to use for drawing the text</param>
            <param name="style">The FontStyle for the text</param>
            <param name="format">The Format controlling how the string should be drawn</param>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextEventArgs.Color">
            <summary>
            Gets or sets the color of the text to render
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextEventArgs.Text">
            <summary>
            Gets or sets the text to render
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextEventArgs.Format">
            <summary>
            Gets or sets the format of the text
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonTextEventArgs.Style">
            <summary>
            Gets or sets the font style of the text
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonToolTip">
            <summary>
            Ribbon Tool Tip class
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.RibbonControls.RibbonUpDown">
            <summary>
            A RibbonUpDown class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.#ctor">
            <summary>
            Creates a new RibbonUpDown class
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.MeasureHeight">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.OnPaint(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementPaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.SetBounds(System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.MeasureSize(System.Object,DotSpatial.Controls.RibbonControls.RibbonElementMeasureSizeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.OnMouseLeave(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:DotSpatial.Controls.RibbonControls.RibbonUpDown.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonUpDown.UpButtonClicked">
            <summary>
            Occurs after the up button was clicked
            </summary>
        </member>
        <member name="E:DotSpatial.Controls.RibbonControls.RibbonUpDown.DownButtonClicked">
            <summary>
            Occurs after the down button was clicked
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonUpDown.UpButtonPressed">
            <summary>
            Gets a value indicating if the Up button is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonUpDown.DownButtonPressed">
            <summary>
            Gets a value indicating if the Down button is currently pressed
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonUpDown.UpButtonSelected">
            <summary>
            Gets a value indicating if the Up button is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonUpDown.DownButtonSelected">
            <summary>
            Gets a value indicating if the Down button is currently selected
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonUpDown.UpButtonBounds">
            <summary>
            Gets or sets the bounds of the DropDown button
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.RibbonControls.RibbonUpDown.DownButtonBounds">
            <summary>
            Gets or sets the bounds of the DropDown button
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.SpatialProgressBar">
            <summary>
            mwProgressBar
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.SpatialStatusStrip">
            <summary>
            A pre-configured status strip with a thread safe Progress function
            </summary>
            <summary>
            The Designer for the Spatial Status Strip
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialStatusStrip.#ctor">
            <summary>
            Creates a new instance of the StatusStrip which has a built in, thread safe Progress handler
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialStatusStrip.Progress(System.String,System.Int32,System.String)">
            <summary>
            This method is thread safe so that people calling this method don't cause a cross-thread violation
            by updating the progress indicator from a different thread
            </summary>
            <param name="key">A string message with just a description of what is happening, but no percent completion information</param>
            <param name="percent">The integer percent from 0 to 100</param>
            <param name="message">A message</param>
        </member>
        <member name="M:DotSpatial.Controls.SpatialStatusStrip.OnItemAdded(System.Windows.Forms.ToolStripItemEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStrip.ItemAdded"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.ToolStripItemEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:DotSpatial.Controls.SpatialStatusStrip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialStatusStrip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DotSpatial.Controls.SpatialStatusStrip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.SpatialStatusStrip.ProgressBar">
            <summary>
            Gets or sets the progress bar. By default, the first ToolStripProgressBar that is added to the tool strip.
            </summary>
            <value>
            The progress bar.
            </value>
        </member>
        <member name="P:DotSpatial.Controls.SpatialStatusStrip.ProgressLabel">
            <summary>
            Gets or sets the progress label. By default, the first ToolStripStatusLabel that is added to the tool strip.
            </summary>
            <value>
            The progress label.
            </value>
        </member>
        <member name="T:DotSpatial.Controls.SpatialToolStrip">
            <summary>
            mwToolBar
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.#ctor">
            <summary>
            Creates a new instance of mwToolBar
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.#ctor(DotSpatial.Controls.IBasicMap)">
            <summary>
            Constructs and initializes this toolbar using the specified IBasicMap
            </summary>
            <param name="map">The map for the toolbar to interact with</param>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.InitializeComponent">
            <summary>
            Warning: Using the normal resource manager that is used by default by the program will cause
            the entire application to crash in mono.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.UncheckOtherButtonsButMe(System.Windows.Forms.ToolStripButton)">
            <summary>
            Unchecks all toolstrip buttons except the current button
            </summary>
            <param name="checkedButton">The toolstrip button which should
            stay checked</param>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdLabel_Click(System.Object,System.EventArgs)">
            <summary>
            Allows the editing of labels
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdMaxExtents_Click(System.Object,System.EventArgs)">
            <summary>
            Zoom to maximum extents
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdTable_Click(System.Object,System.EventArgs)">
            <summary>
            Open attribute table
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdInfo_Click(System.Object,System.EventArgs)">
            <summary>
            Identifier Tool
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdZoom_Click(System.Object,System.EventArgs)">
            <summary>
            Zoom In
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdSelect_Click(System.Object,System.EventArgs)">
            <summary>
            Select or deselect Features
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdPan_Click(System.Object,System.EventArgs)">
            <summary>
            Move (Pan) the map
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdMeasure_Click(System.Object,System.EventArgs)">
            <summary>
            Measure Distance
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdAddData_Click(System.Object,System.EventArgs)">
            <summary>
            Add Data to the Map
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdPrint_Click(System.Object,System.EventArgs)">
            <summary>
            Print Map
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.OnPrintClicked">
            <summary>
            Fires the PrintClicked event
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdSave_Click(System.Object,System.EventArgs)">
            <summary>
            Save Map
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdOpen_Click(System.Object,System.EventArgs)">
            <summary>
            Open Map
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdNew_Click(System.Object,System.EventArgs)">
            <summary>
            New Map
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdZoomPrevious_Click(System.Object,System.EventArgs)">
            <summary>
            Zoom to previous extent
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.cmdZoomNext_Click(System.Object,System.EventArgs)">
            <summary>
            Zoom to previous extent
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.SpatialToolStrip.Init(DotSpatial.Controls.IBasicMap)">
            <summary>
            Initializes the map tool, telling it what map that it will be working with.
            </summary>
            <param name="map">Any implementation of IBasicMap that the tool can work with</param>
        </member>
        <member name="E:DotSpatial.Controls.SpatialToolStrip.PrintClicked">
            <summary>
            Occurs when the print button is clicked
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.SpatialToolStrip.Map">
            <summary>
            Gets or sets the basic map that this toolbar will interact with by default
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.SpatialToolStrip.ApplicationManager">
            <summary>
            Gets or sets the application manager.
            </summary>
            <value>
            The application manager.
            </value>
        </member>
        <member name="T:DotSpatial.Controls.StringCollectionEditor">
            <summary>
            StringCollectionEditor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.StringCollectionEditor.#ctor(System.Type)">
            <summary>
            Creates a new instance of StringCollectionEditor
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.StringCollectionEditor.CreateCollectionItemType">
            <summary>
            String
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotSpatial.Controls.StringCollectionEditor.CreateInstance(System.Type)">
            <summary>
            This creates an empty string
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="T:DotSpatial.Controls.ToolManager">
            <summary>
            This class provides a ToolManager for loading tools from .dll's
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.#ctor">
            <summary>
            Creates a new instance of the ToolManager, scans the executables root path\tools
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.OnCreateControl">
            <summary>
            Occurs when the control is created and a refresh is needed
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.LoadSettings">
            <summary>
            Loads the settings for all the ToolManager and all ToolProviders
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.HighlightTool(System.String)">
            <summary>
            Locates a tool by its name in the tree and highlights it
            </summary>
            <param name="toolName"></param>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.HighlightNextTool(System.String)">
            <summary>
            Highlights the next tool
            </summary>
            <param name="toolName"></param>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.CanCreateTool(System.String)">
            <summary>
            Returns true if the Tool Manager can create the tool specified by the uniqueName
            </summary>
            <param name="uniqueName">The unique name of a tool</param>
            <returns>true if the tool can be created otherwise false</returns>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.NewTool(System.String)">
            <summary>
            Creates a new instance of a tool based on its uniqueName
            </summary>
            <param name="uniqueName">The unique name of the tool</param>
            <returns>Returns an new instance of the tool or NULL if the tools unique name doesn't exist in the manager</returns>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.RefreshTree">
            <summary>
            This clears the list of available tools and loads them from file again
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.LoadDefaultToolProvider">
            <summary>
            Loads the default tool provider
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.LoadToolProviders">
            <summary>
            This should be called once all the permitted directories have been set in the code.
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.LoadToolProvidersFromAssembly(System.String)">
            <summary>
            Given a string fileName for the "*.dll" file, this will attempt to load a ITool from the .dll
            </summary>
            <param name="fileName">The string path of the assembly to load from.</param>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            Runs when and item gets dragged
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Thie event fires when the mouse moves to change the ToolTip
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DotSpatial.Controls.ToolManager.OnDoubleClick(System.EventArgs)">
            <summary>
            When the user double clicks one of the tools this event fires
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:DotSpatial.Controls.ToolManager.DataSets">
            <summary>
            Sets the data that are available by default to tools
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ToolManager.Legend">
            <summary>
            Gets or Sets the legend object. This is needed to automatically populate the list of data layers in tool dialogs.
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ToolManager.ToolDirectories">
            <summary>
            Gets or sets the list of paths that is searched for IToolProviders this path is also passed along to IToolProviders when they are found
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ToolManager.ToolList">
            <summary>
            Gets the list of unique tool names
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ToolManager.TempPath">
            <summary>
            Gets or sets the string temp path
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ToolManagerToolInfo.#ctor(DotSpatial.Modeling.Forms.ToolInfo,DotSpatial.Modeling.Forms.IToolProvider)">
            <summary>
            Creates an instance of ToolManagerToolInfo
            </summary>
            <param name="info">The tool info</param>
            <param name="toolProviderAssembly">The IToolProvider that can instantiate the tool manager info represents</param>
        </member>
        <member name="P:DotSpatial.Controls.ToolManagerToolInfo.ToolProviderAssembly">
            <summary>
            Get the full fileName that the tool's assembly is in
            </summary>
        </member>
        <member name="T:DotSpatial.Controls.ToolManagerToolStrip">
            <summary>
            A Tool strip to use with the ToolManager when used as a graphical control
            </summary>
        </member>
        <member name="M:DotSpatial.Controls.ToolManagerToolStrip.#ctor">
            <summary>
            Creates an instance of the toolstrip
            </summary>
        </member>
        <member name="P:DotSpatial.Controls.ToolManagerToolStrip.ToolManager">
            <summary>
            Gets or sets the ToolManager currently associated with the toolstrip
            </summary>
        </member>
    </members>
</doc>
